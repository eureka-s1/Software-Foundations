DIGEST f34a9c0e6fbcd81a9f65e86417caceea
FLF.Logic
R134:136 Coq.Init.Nat <> <> lib
R162:168 LF.Tactics <> <> lib
R1016:1018 Coq.Init.Datatypes <> nat ind
binder 1010:1010 <> n:1
binder 1012:1012 <> m:2
R1026:1028 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1022:1024 LF.Basics <> ::nat_scope:x_'+'_x not
R1021:1021 LF.Logic <> n:1 var
R1025:1025 LF.Logic <> m:2 var
R1030:1032 LF.Basics <> ::nat_scope:x_'+'_x not
R1029:1029 LF.Logic <> m:2 var
R1033:1033 LF.Logic <> n:1 var
R1279:1281 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1300:1302 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1331:1333 Coq.Init.Datatypes <> nat ind
binder 1327:1327 <> n:3
R1337:1339 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1336:1336 LF.Logic <> n:3 var
prf 1676:1688 <> plus_2_2_is_4
R1699:1701 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1695:1697 LF.Basics <> ::nat_scope:x_'+'_x not
def 1928:1937 <> plus_claim
R1954:1956 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1950:1952 LF.Basics <> ::nat_scope:x_'+'_x not
R1966:1975 LF.Logic <> plus_claim def
prf 2139:2156 <> plus_claim_is_true
R2162:2171 LF.Logic <> plus_claim def
def 2496:2503 <> is_three
R2510:2512 Coq.Init.Datatypes <> nat ind
binder 2506:2506 <> n:4
R2528:2530 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2527:2527 LF.Logic <> n:4 var
R2554:2557 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2551:2553 Coq.Init.Datatypes <> nat ind
R2540:2547 LF.Logic <> is_three def
def 2795:2803 <> injective
binder 2806:2806 <> A:5
binder 2808:2808 <> B:6
R2817:2820 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2816:2816 LF.Logic <> A:5 var
R2821:2821 LF.Logic <> B:6 var
binder 2812:2812 <> f:7
R2849:2849 LF.Logic <> A:5 var
binder 2843:2843 <> x:8
binder 2845:2845 <> y:9
R2861:2864 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2855:2857 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2852:2852 LF.Logic <> f:7 var
R2854:2854 LF.Logic <> x:8 var
R2858:2858 LF.Logic <> f:7 var
R2860:2860 LF.Logic <> y:9 var
R2866:2868 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2865:2865 LF.Logic <> x:8 var
R2869:2869 LF.Logic <> y:9 var
prf 2879:2886 <> succ_inj
R2890:2898 LF.Logic <> injective def
R2900:2900 Coq.Init.Datatypes <> S constr
binder 3290:3290 <> A:10
R3301:3304 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3300:3300 LF.Logic <> A:10 var
R3306:3309 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3305:3305 LF.Logic <> A:10 var
R3278:3279 Coq.Init.Logic <> eq ind
def 3895:3905 <> and_example
R3918:3921 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R3914:3916 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3910:3912 LF.Basics <> ::nat_scope:x_'+'_x not
R3927:3929 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3923:3925 LF.Basics <> ::nat_scope:x_'*'_x not
binder 4379:4379 <> A:11
binder 4381:4381 <> B:12
R4392:4395 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4391:4391 LF.Logic <> A:11 var
R4397:4400 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4396:4396 LF.Logic <> B:12 var
R4402:4405 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R4401:4401 LF.Logic <> A:11 var
R4406:4406 LF.Logic <> B:12 var
R4365:4368 Coq.Init.Logic <> conj constr
def 4635:4646 <> and_example'
R4659:4662 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R4655:4657 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4651:4653 LF.Basics <> ::nat_scope:x_'+'_x not
R4668:4670 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4664:4666 LF.Basics <> ::nat_scope:x_'*'_x not
R4689:4692 Coq.Init.Logic <> conj constr
R4689:4692 Coq.Init.Logic <> conj constr
def 4828:4836 <> plus_is_O
R4855:4857 Coq.Init.Datatypes <> nat ind
binder 4849:4849 <> n:13
binder 4851:4851 <> m:14
R4869:4872 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4865:4867 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4861:4863 LF.Basics <> ::nat_scope:x_'+'_x not
R4860:4860 LF.Logic <> n:13 var
R4864:4864 LF.Logic <> m:14 var
R4878:4881 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R4874:4876 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4873:4873 LF.Logic <> n:13 var
R4883:4885 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4882:4882 LF.Logic <> m:14 var
prf 5504:5515 <> and_example2
R5534:5536 Coq.Init.Datatypes <> nat ind
binder 5528:5528 <> n:15
binder 5530:5530 <> m:16
R5553:5556 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5544:5547 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5540:5542 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5539:5539 LF.Logic <> n:15 var
R5549:5551 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5548:5548 LF.Logic <> m:16 var
R5562:5564 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5558:5560 LF.Basics <> ::nat_scope:x_'+'_x not
R5557:5557 LF.Logic <> n:15 var
R5561:5561 LF.Logic <> m:16 var
prf 5816:5828 <> and_example2'
R5847:5849 Coq.Init.Datatypes <> nat ind
binder 5841:5841 <> n:17
binder 5843:5843 <> m:18
R5866:5869 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5857:5860 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5853:5855 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5852:5852 LF.Logic <> n:17 var
R5862:5864 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5861:5861 LF.Logic <> m:18 var
R5875:5877 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5871:5873 LF.Basics <> ::nat_scope:x_'+'_x not
R5870:5870 LF.Logic <> n:17 var
R5874:5874 LF.Logic <> m:18 var
prf 6156:6169 <> and_example2''
R6188:6190 Coq.Init.Datatypes <> nat ind
binder 6182:6182 <> n:19
binder 6184:6184 <> m:20
R6198:6201 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6194:6196 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6193:6193 LF.Logic <> n:19 var
R6207:6210 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6203:6205 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6202:6202 LF.Logic <> m:20 var
R6216:6218 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6212:6214 LF.Basics <> ::nat_scope:x_'+'_x not
R6211:6211 LF.Logic <> n:19 var
R6215:6215 LF.Logic <> m:20 var
prf 6584:6595 <> and_example3
R6614:6616 Coq.Init.Datatypes <> nat ind
binder 6608:6608 <> n:21
binder 6610:6610 <> m:22
R6628:6631 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6624:6626 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6620:6622 LF.Basics <> ::nat_scope:x_'+'_x not
R6619:6619 LF.Logic <> n:21 var
R6623:6623 LF.Logic <> m:22 var
R6637:6639 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6633:6635 LF.Basics <> ::nat_scope:x_'*'_x not
R6632:6632 LF.Logic <> n:21 var
R6636:6636 LF.Logic <> m:22 var
R6698:6706 LF.Logic <> plus_is_O ex
R6698:6706 LF.Logic <> plus_is_O ex
prf 7075:7079 <> proj1
binder 7090:7090 <> P:23
binder 7092:7092 <> Q:24
R7110:7113 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7105:7108 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7104:7104 LF.Logic <> P:23 var
R7109:7109 LF.Logic <> Q:24 var
R7114:7114 LF.Logic <> P:23 var
prf 7250:7254 <> proj2
binder 7265:7265 <> P:25
binder 7267:7267 <> Q:26
R7285:7288 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7280:7283 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7279:7279 LF.Logic <> P:25 var
R7284:7284 LF.Logic <> Q:26 var
R7289:7289 LF.Logic <> Q:26 var
prf 7584:7593 <> and_commut
binder 7604:7604 <> P:27
binder 7606:7606 <> Q:28
R7624:7627 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7619:7622 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7618:7618 LF.Logic <> P:27 var
R7623:7623 LF.Logic <> Q:28 var
R7629:7632 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7628:7628 LF.Logic <> Q:28 var
R7633:7633 LF.Logic <> P:27 var
prf 7998:8006 <> and_assoc
binder 8017:8017 <> P:29
binder 8019:8019 <> Q:30
binder 8021:8021 <> R:31
R8046:8049 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8034:8038 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8045:8045 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8033:8033 LF.Logic <> P:29 var
R8040:8043 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8039:8039 LF.Logic <> Q:30 var
R8044:8044 LF.Logic <> R:31 var
R8050:8050 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8057:8061 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8052:8055 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8051:8051 LF.Logic <> P:29 var
R8056:8056 LF.Logic <> Q:30 var
R8062:8062 LF.Logic <> R:31 var
R8413:8416 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8421:8424 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8403:8405 Coq.Init.Logic <> and ind
prf 8982:8992 <> factor_is_O
R9010:9012 Coq.Init.Datatypes <> nat ind
binder 9004:9004 <> n:32
binder 9006:9006 <> m:33
R9029:9032 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9020:9023 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R9016:9018 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9015:9015 LF.Logic <> n:32 var
R9025:9027 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9024:9024 LF.Logic <> m:33 var
R9038:9040 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9034:9036 LF.Basics <> ::nat_scope:x_'*'_x not
R9033:9033 LF.Logic <> n:32 var
R9037:9037 LF.Logic <> m:33 var
R9255:9262 Coq.Init.Peano <> mult_n_O thm
R9255:9262 Coq.Init.Peano <> mult_n_O thm
R9255:9262 Coq.Init.Peano <> mult_n_O thm
prf 10028:10037 <> or_intro_l
binder 10048:10048 <> A:34
binder 10050:10050 <> B:35
R10061:10064 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10060:10060 LF.Logic <> A:34 var
R10066:10069 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R10065:10065 LF.Logic <> A:34 var
R10070:10070 LF.Logic <> B:35 var
prf 10228:10239 <> zero_or_succ
R10256:10258 Coq.Init.Datatypes <> nat ind
binder 10252:10252 <> n:36
R10266:10269 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R10262:10264 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10261:10261 LF.Logic <> n:36 var
R10271:10273 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10270:10270 LF.Logic <> n:36 var
R10274:10274 Coq.Init.Datatypes <> S constr
R10277:10280 Coq.Init.Peano <> pred abbrev
R10282:10282 LF.Logic <> n:36 var
prf 10444:10452 <> mult_is_O
binder 10465:10465 <> n:37
binder 10467:10467 <> m:38
R10479:10482 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10475:10477 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10471:10473 LF.Basics <> ::nat_scope:x_'*'_x not
R10470:10470 LF.Logic <> n:37 var
R10474:10474 LF.Logic <> m:38 var
R10488:10491 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R10484:10486 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10483:10483 LF.Logic <> n:37 var
R10493:10495 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10492:10492 LF.Logic <> m:38 var
prf 10707:10715 <> or_commut
binder 10726:10726 <> P:39
binder 10728:10728 <> Q:40
R10746:10750 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10741:10744 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R10740:10740 LF.Logic <> P:39 var
R10745:10745 LF.Logic <> Q:40 var
R10752:10755 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R10751:10751 LF.Logic <> Q:40 var
R10756:10756 LF.Logic <> P:39 var
mod 11813:11825 <> NotPlayground
def 11840:11842 NotPlayground not
binder 11845:11845 <> P:41
R11857:11860 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11856:11856 LF.Logic <> P:41 var
R11861:11865 Coq.Init.Logic <> False ind
R11885:11888 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11875:11877 LF.Logic NotPlayground not def
R11915:11917 LF.Logic NotPlayground not def
not 11905:11905 NotPlayground ::type_scope:'~'_x
R11941:11953 LF.Logic NotPlayground <> mod
prf 12164:12181 <> ex_falso_quodlibet
binder 12193:12193 <> P:42
R12209:12212 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12204:12208 Coq.Init.Logic <> False ind
R12213:12213 LF.Logic <> P:42 var
prf 12775:12793 <> not_implies_our_not
binder 12805:12805 <> P:43
R12819:12823 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12847:12847 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12816:12817 Coq.Init.Logic <> ::type_scope:'~'_x not
R12818:12818 LF.Logic <> P:43 var
binder 12832:12832 <> Q:44
R12842:12845 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12841:12841 LF.Logic <> P:43 var
R12846:12846 LF.Logic <> Q:44 var
R12880:12882 Coq.Init.Logic <> not def
R13081:13082 Coq.Init.Logic <> ::type_scope:'~'_x not
R13088:13088 Coq.Init.Logic <> ::type_scope:'~'_x not
R13084:13086 Coq.Init.Logic <> ::type_scope:x_'='_x not
not 13068:13068 <> ::type_scope:x_'<>'_x
prf 13135:13146 <> zero_not_one
R13151:13154 LF.Logic <> ::type_scope:x_'<>'_x not
R13424:13426 Coq.Init.Logic <> not def
prf 14073:14081 <> not_False
R14087:14088 Coq.Init.Logic <> ::type_scope:'~'_x not
R14089:14093 Coq.Init.Logic <> False ind
R14112:14114 Coq.Init.Logic <> not def
prf 14153:14182 <> contradiction_implies_anything
binder 14193:14193 <> P:45
binder 14195:14195 <> Q:46
R14207:14207 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14215:14219 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14209:14212 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R14208:14208 LF.Logic <> P:45 var
R14213:14213 Coq.Init.Logic <> ::type_scope:'~'_x not
R14214:14214 LF.Logic <> P:45 var
R14220:14220 LF.Logic <> Q:46 var
R14284:14286 Coq.Init.Logic <> not def
prf 14343:14352 <> double_neg
binder 14363:14363 <> P:47
R14376:14379 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14375:14375 LF.Logic <> P:47 var
R14380:14380 Coq.Init.Logic <> ::type_scope:'~'_x not
R14381:14381 Coq.Init.Logic <> ::type_scope:'~'_x not
R14382:14382 LF.Logic <> P:47 var
R14437:14439 Coq.Init.Logic <> not def
def 14718:14753 <> manual_grade_for_double_neg_informal
R14757:14762 Coq.Init.Datatypes <> option ind
R14768:14768 LF.Poly <> ::type_scope:x_'*'_x not
R14765:14767 Coq.Init.Datatypes <> nat ind
R14769:14774 Coq.Strings.String <> string ind
R14780:14783 Coq.Init.Datatypes <> None constr
prf 14880:14893 <> contrapositive
binder 14905:14905 <> P:48
binder 14907:14907 <> Q:49
R14920:14920 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14927:14932 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14941:14941 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14922:14925 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14921:14921 LF.Logic <> P:48 var
R14926:14926 LF.Logic <> Q:49 var
R14935:14938 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14933:14933 Coq.Init.Logic <> ::type_scope:'~'_x not
R14934:14934 LF.Logic <> Q:49 var
R14939:14939 Coq.Init.Logic <> ::type_scope:'~'_x not
R14940:14940 LF.Logic <> P:48 var
R14976:14978 Coq.Init.Logic <> not def
prf 15127:15149 <> not_both_true_and_false
binder 15160:15160 <> P:50
R15172:15174 Coq.Init.Logic <> ::type_scope:'~'_x not
R15182:15182 Coq.Init.Logic <> ::type_scope:'~'_x not
R15176:15179 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R15175:15175 LF.Logic <> P:50 var
R15180:15180 Coq.Init.Logic <> ::type_scope:'~'_x not
R15181:15181 LF.Logic <> P:50 var
R15213:15215 Coq.Init.Logic <> not def
def 15529:15561 <> manual_grade_for_not_PNP_informal
R15565:15570 Coq.Init.Datatypes <> option ind
R15576:15576 LF.Poly <> ::type_scope:x_'*'_x not
R15573:15575 Coq.Init.Datatypes <> nat ind
R15577:15582 Coq.Strings.String <> string ind
R15588:15591 Coq.Init.Datatypes <> None constr
prf 16007:16022 <> de_morgan_not_or
binder 16034:16034 <> P:51
binder 16036:16036 <> Q:52
R16061:16064 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16051:16053 Coq.Init.Logic <> ::type_scope:'~'_x not
R16060:16060 Coq.Init.Logic <> ::type_scope:'~'_x not
R16055:16058 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R16054:16054 LF.Logic <> P:51 var
R16059:16059 LF.Logic <> Q:52 var
R16067:16070 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R16065:16065 Coq.Init.Logic <> ::type_scope:'~'_x not
R16066:16066 LF.Logic <> P:51 var
R16071:16071 Coq.Init.Logic <> ::type_scope:'~'_x not
R16072:16072 LF.Logic <> Q:52 var
R16107:16109 Coq.Init.Logic <> not def
prf 16441:16452 <> not_S_pred_n
R16456:16457 Coq.Init.Logic <> ::type_scope:'~'_x not
R16488:16488 Coq.Init.Logic <> ::type_scope:'~'_x not
R16469:16471 Coq.Init.Datatypes <> nat ind
binder 16465:16465 <> n:53
R16484:16486 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16474:16474 Coq.Init.Datatypes <> S constr
R16477:16480 Coq.Init.Peano <> pred abbrev
R16482:16482 LF.Logic <> n:53 var
R16487:16487 LF.Logic <> n:53 var
R16519:16521 Coq.Init.Logic <> not def
prf 17088:17104 <> not_true_is_false
R17119:17122 LF.Basics <> bool ind
binder 17115:17115 <> b:54
R17136:17139 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17128:17131 LF.Logic <> ::type_scope:x_'<>'_x not
R17127:17127 LF.Logic <> b:54 var
R17132:17135 LF.Basics <> true constr
R17141:17143 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17140:17140 LF.Logic <> b:54 var
R17144:17148 LF.Basics <> false constr
R17221:17223 Coq.Init.Logic <> not def
R17241:17258 LF.Logic <> ex_falso_quodlibet thm
R17241:17258 LF.Logic <> ex_falso_quodlibet thm
prf 17469:17486 <> not_true_is_false'
R17501:17504 LF.Basics <> bool ind
binder 17497:17497 <> b:55
R17518:17521 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17510:17513 LF.Logic <> ::type_scope:x_'<>'_x not
R17509:17509 LF.Logic <> b:55 var
R17514:17517 LF.Basics <> true constr
R17523:17525 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17522:17522 LF.Logic <> b:55 var
R17526:17530 LF.Basics <> false constr
R17632:17634 Coq.Init.Logic <> not def
prf 18052:18063 <> True_is_true
R18067:18070 Coq.Init.Logic <> True ind
R18086:18086 Coq.Init.Logic <> I constr
R18086:18086 Coq.Init.Logic <> I constr
def 19006:19012 <> disc_fn
R19018:19020 Coq.Init.Datatypes <> nat ind
binder 19015:19015 <> n:56
R19041:19041 LF.Logic <> n:56 var
R19052:19052 Coq.Init.Datatypes <> O constr
R19057:19060 Coq.Init.Logic <> True ind
R19066:19066 Coq.Init.Datatypes <> S constr
R19073:19077 Coq.Init.Logic <> False ind
prf 19095:19106 <> disc_example
binder 19117:19117 <> n:58
R19120:19122 Coq.Init.Logic <> ::type_scope:'~'_x not
R19130:19130 Coq.Init.Logic <> ::type_scope:'~'_x not
R19124:19126 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19123:19123 Coq.Init.Datatypes <> O constr
R19127:19127 Coq.Init.Datatypes <> S constr
R19129:19129 LF.Logic <> n:58 var
R19173:19179 LF.Logic <> disc_fn def
R19181:19181 Coq.Init.Datatypes <> O constr
R19173:19179 LF.Logic <> disc_fn def
R19181:19181 Coq.Init.Datatypes <> O constr
R19200:19200 Coq.Init.Logic <> I constr
R19200:19200 Coq.Init.Logic <> I constr
prf 19727:19741 <> nil_is_not_cons
binder 19752:19752 <> X:59
R19759:19759 LF.Logic <> X:59 var
binder 19755:19755 <> x:60
R19768:19771 LF.Poly <> list ind
R19773:19773 LF.Logic <> X:59 var
binder 19763:19764 <> xs:61
R19777:19779 Coq.Init.Logic <> ::type_scope:'~'_x not
R19793:19793 Coq.Init.Logic <> ::type_scope:'~'_x not
R19783:19785 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19780:19782 LF.Poly <> nil constr
R19787:19790 LF.Poly <> :::x_'::'_x not
R19786:19786 LF.Logic <> x:60 var
R19791:19792 LF.Logic <> xs:61 var
R19829:19831 Coq.Init.Logic <> not def
mod 20162:20174 <> IffPlayground
def 20189:20191 IffPlayground iff
binder 20194:20194 <> P:62
binder 20196:20196 <> Q:63
R20209:20209 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R20216:20221 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R20228:20228 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R20211:20214 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20210:20210 LF.Logic <> P:62 var
R20215:20215 LF.Logic <> Q:63 var
R20223:20226 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20222:20222 LF.Logic <> Q:63 var
R20227:20227 LF.Logic <> P:62 var
R20255:20257 LF.Logic IffPlayground iff def
not 20241:20241 IffPlayground ::type_scope:x_'<->'_x
R20359:20371 LF.Logic IffPlayground <> mod
prf 20383:20389 <> iff_sym
binder 20400:20400 <> P:64
binder 20402:20402 <> Q:65
R20414:20414 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20422:20427 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20435:20435 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20416:20420 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R20415:20415 LF.Logic <> P:64 var
R20421:20421 LF.Logic <> Q:65 var
R20429:20433 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R20428:20428 LF.Logic <> Q:65 var
R20434:20434 LF.Logic <> P:64 var
prf 20563:20580 <> not_true_iff_false
binder 20591:20591 <> b:66
R20605:20609 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R20597:20600 LF.Logic <> ::type_scope:x_'<>'_x not
R20596:20596 LF.Logic <> b:66 var
R20601:20604 LF.Basics <> true constr
R20611:20613 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20610:20610 LF.Logic <> b:66 var
R20614:20618 LF.Basics <> false constr
R20690:20706 LF.Logic <> not_true_is_false thm
R20690:20706 LF.Logic <> not_true_is_false thm
prf 20944:20961 <> apply_iff_example1
binder 20973:20973 <> P:67
binder 20975:20975 <> Q:68
binder 20977:20977 <> R:69
R20987:20987 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20995:20999 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20989:20993 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R20988:20988 LF.Logic <> P:67 var
R20994:20994 LF.Logic <> Q:68 var
R21000:21000 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21007:21012 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21019:21019 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21002:21005 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21001:21001 LF.Logic <> Q:68 var
R21006:21006 LF.Logic <> R:69 var
R21014:21017 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21013:21013 LF.Logic <> P:67 var
R21018:21018 LF.Logic <> R:69 var
prf 21098:21115 <> apply_iff_example2
binder 21127:21127 <> P:70
binder 21129:21129 <> Q:71
binder 21131:21131 <> R:72
R21141:21141 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21149:21153 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21143:21147 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R21142:21142 LF.Logic <> P:70 var
R21148:21148 LF.Logic <> Q:71 var
R21154:21154 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21161:21166 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21173:21173 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21156:21159 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21155:21155 LF.Logic <> P:70 var
R21160:21160 LF.Logic <> R:72 var
R21168:21171 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21167:21167 LF.Logic <> Q:71 var
R21172:21172 LF.Logic <> R:72 var
prf 21448:21455 <> iff_refl
binder 21466:21466 <> P:73
R21479:21483 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R21478:21478 LF.Logic <> P:73 var
R21484:21484 LF.Logic <> P:73 var
prf 21573:21581 <> iff_trans
binder 21592:21592 <> P:74
binder 21594:21594 <> Q:75
binder 21596:21596 <> R:76
R21608:21608 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21616:21620 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21610:21614 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R21609:21609 LF.Logic <> P:74 var
R21615:21615 LF.Logic <> Q:75 var
R21621:21621 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21629:21634 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21642:21642 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21623:21627 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R21622:21622 LF.Logic <> Q:75 var
R21628:21628 LF.Logic <> R:76 var
R21636:21640 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R21635:21635 LF.Logic <> P:74 var
R21641:21641 LF.Logic <> R:76 var
prf 21857:21879 <> or_distributes_over_and
binder 21890:21890 <> P:77
binder 21892:21892 <> Q:78
binder 21894:21894 <> R:79
R21919:21923 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R21907:21911 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21918:21918 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21906:21906 LF.Logic <> P:77 var
R21913:21916 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R21912:21912 LF.Logic <> Q:78 var
R21917:21917 LF.Logic <> R:79 var
R21924:21924 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R21931:21936 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R21943:21943 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R21926:21929 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21925:21925 LF.Logic <> P:77 var
R21930:21930 LF.Logic <> Q:78 var
R21938:21941 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R21937:21937 LF.Logic <> P:77 var
R21942:21942 LF.Logic <> R:79 var
R22683:22696 Coq.Setoids.Setoid <> <> lib
prf 23522:23529 <> mul_eq_0
binder 23540:23540 <> n:80
binder 23542:23542 <> m:81
R23554:23558 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R23550:23552 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23546:23548 LF.Basics <> ::nat_scope:x_'*'_x not
R23545:23545 LF.Logic <> n:80 var
R23549:23549 LF.Logic <> m:81 var
R23564:23567 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R23560:23562 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23559:23559 LF.Logic <> n:80 var
R23569:23571 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23568:23568 LF.Logic <> m:81 var
R23601:23609 LF.Logic <> mult_is_O thm
R23601:23609 LF.Logic <> mult_is_O thm
R23622:23632 LF.Logic <> factor_is_O thm
R23622:23632 LF.Logic <> factor_is_O thm
prf 23649:23656 <> or_assoc
binder 23669:23669 <> P:82
binder 23671:23671 <> Q:83
binder 23673:23673 <> R:84
R23696:23700 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R23684:23688 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R23695:23695 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R23683:23683 LF.Logic <> P:82 var
R23690:23693 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R23689:23689 LF.Logic <> Q:83 var
R23694:23694 LF.Logic <> R:84 var
R23701:23701 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R23708:23712 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R23703:23706 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R23702:23702 LF.Logic <> P:82 var
R23707:23707 LF.Logic <> Q:83 var
R23713:23713 LF.Logic <> R:84 var
prf 24095:24110 <> mul_eq_0_ternary
binder 24123:24123 <> n:85
binder 24125:24125 <> m:86
binder 24127:24127 <> p:87
R24143:24147 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R24139:24141 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24135:24137 LF.Basics <> ::nat_scope:x_'*'_x not
R24131:24133 LF.Basics <> ::nat_scope:x_'*'_x not
R24130:24130 LF.Logic <> n:85 var
R24134:24134 LF.Logic <> m:86 var
R24138:24138 LF.Logic <> p:87 var
R24153:24156 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R24149:24151 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24148:24148 LF.Logic <> n:85 var
R24162:24165 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R24158:24160 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24157:24157 LF.Logic <> m:86 var
R24167:24169 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24166:24166 LF.Logic <> p:87 var
R24206:24213 LF.Logic <> mul_eq_0 thm
R24206:24213 LF.Logic <> mul_eq_0 thm
R24206:24213 LF.Logic <> mul_eq_0 thm
R24224:24231 LF.Logic <> mul_eq_0 thm
R24224:24231 LF.Logic <> mul_eq_0 thm
R24224:24231 LF.Logic <> mul_eq_0 thm
R24242:24249 LF.Logic <> or_assoc thm
R24242:24249 LF.Logic <> or_assoc thm
R24242:24249 LF.Logic <> or_assoc thm
def 25115:25118 <> Even
binder 25120:25120 <> x:88
R25125:25131 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R25139:25140 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R25136:25138 Coq.Init.Datatypes <> nat ind
binder 25132:25132 <> n:89
R25142:25144 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25141:25141 LF.Logic <> x:88 var
R25145:25150 LF.Induction <> double def
R25152:25152 LF.Logic <> n:89 var
R25171:25174 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25168:25170 Coq.Init.Datatypes <> nat ind
R25161:25164 LF.Logic <> Even def
prf 25188:25199 <> four_is_Even
R25203:25206 LF.Logic <> Even def
R25227:25230 LF.Logic <> Even def
prf 25456:25471 <> exists_example_2
binder 25482:25482 <> n:90
R25487:25487 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25507:25514 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25534:25534 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25488:25494 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R25496:25497 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 25495:25495 <> m:91
R25499:25501 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25498:25498 LF.Logic <> n:90 var
R25503:25505 LF.Basics <> ::nat_scope:x_'+'_x not
R25506:25506 LF.Logic <> m:91 var
R25515:25521 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R25523:25524 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 25522:25522 <> o:92
R25526:25528 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25525:25525 LF.Logic <> n:90 var
R25530:25532 LF.Basics <> ::nat_scope:x_'+'_x not
R25533:25533 LF.Logic <> o:92 var
R25657:25659 LF.Basics <> ::nat_scope:x_'+'_x not
R25657:25659 LF.Basics <> ::nat_scope:x_'+'_x not
prf 25937:25951 <> dist_not_exists
binder 25963:25963 <> X:93
R25977:25980 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25976:25976 LF.Logic <> X:93 var
binder 25972:25972 <> P:94
R25990:25990 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26004:26008 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 25998:25998 <> x:95
R26001:26001 LF.Logic <> P:94 var
R26003:26003 LF.Logic <> x:95 var
R26009:26011 Coq.Init.Logic <> ::type_scope:'~'_x not
R26027:26027 Coq.Init.Logic <> ::type_scope:'~'_x not
R26012:26018 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R26020:26021 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 26019:26019 <> x:96
R26022:26023 Coq.Init.Logic <> ::type_scope:'~'_x not
R26024:26024 LF.Logic <> P:94 var
R26026:26026 LF.Logic <> x:96 var
R26102:26104 Coq.Init.Logic <> not def
prf 26292:26305 <> dist_exists_or
binder 26317:26317 <> X:97
R26333:26336 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26332:26332 LF.Logic <> X:97 var
binder 26326:26326 <> P:98
binder 26328:26328 <> Q:99
R26346:26346 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R26367:26372 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R26347:26353 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R26355:26356 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 26354:26354 <> x:100
R26360:26363 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R26357:26357 LF.Logic <> P:98 var
R26359:26359 LF.Logic <> x:100 var
R26364:26364 LF.Logic <> Q:99 var
R26366:26366 LF.Logic <> x:100 var
R26373:26373 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R26387:26392 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R26406:26406 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R26374:26380 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R26382:26383 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 26381:26381 <> x:101
R26384:26384 LF.Logic <> P:98 var
R26386:26386 LF.Logic <> x:101 var
R26393:26399 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R26401:26402 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 26400:26400 <> x:102
R26403:26403 LF.Logic <> Q:99 var
R26405:26405 LF.Logic <> x:102 var
prf 26816:26830 <> leb_plus_exists
binder 26841:26841 <> n:103
binder 26843:26843 <> m:104
R26860:26863 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26853:26855 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26847:26851 LF.Basics <> ::nat_scope:x_'<=?'_x not
R26846:26846 LF.Logic <> n:103 var
R26852:26852 LF.Logic <> m:104 var
R26856:26859 LF.Basics <> true constr
R26864:26870 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R26872:26873 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 26871:26871 <> x:105
R26875:26877 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26874:26874 LF.Logic <> m:104 var
R26879:26879 LF.Basics <> ::nat_scope:x_'+'_x not
R26878:26878 LF.Logic <> n:103 var
R26880:26880 LF.Logic <> x:105 var
prf 27252:27266 <> plus_exists_leb
binder 27277:27277 <> n:106
binder 27279:27279 <> m:107
R27282:27282 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27300:27304 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27283:27289 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R27291:27292 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 27290:27290 <> x:108
R27294:27296 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27293:27293 LF.Logic <> m:107 var
R27298:27298 LF.Basics <> ::nat_scope:x_'+'_x not
R27297:27297 LF.Logic <> n:106 var
R27299:27299 LF.Logic <> x:108 var
R27312:27314 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27306:27310 LF.Basics <> ::nat_scope:x_'<=?'_x not
R27305:27305 LF.Logic <> n:106 var
R27311:27311 LF.Logic <> m:107 var
R27315:27318 LF.Basics <> true constr
R27670:27676 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R27684:27685 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R27681:27683 Coq.Init.Datatypes <> nat ind
binder 27677:27677 <> y:109
R27688:27690 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27693:27695 LF.Basics <> ::nat_scope:x_'+'_x not
R27696:27696 LF.Logic <> y:109 var
R27670:27676 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R27684:27685 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R27681:27683 Coq.Init.Datatypes <> nat ind
binder 27677:27677 <> y:110
R27688:27690 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27693:27695 LF.Basics <> ::nat_scope:x_'+'_x not
R27696:27696 LF.Logic <> y:110 var
def 28637:28638 <> In
binder 28641:28641 <> A:111
R28656:28656 LF.Logic <> A:111 var
binder 28652:28652 <> x:112
R28664:28667 LF.Poly <> list ind
R28669:28669 LF.Logic <> A:111 var
binder 28660:28660 <> l:113
R28690:28690 LF.Logic <> l:113 var
R28701:28702 LF.Poly <> :::'['_']' not
R28707:28711 Coq.Init.Logic <> False ind
R28719:28722 LF.Poly <> :::x_'::'_x not
R28735:28738 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R28731:28733 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28734:28734 LF.Logic <> x:112 var
R28739:28740 LF.Logic <> In:114 def
R28742:28742 LF.Logic <> x:112 var
def 28876:28887 <> In_example_1
R28891:28892 LF.Logic <> In def
R28896:28896 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28898:28899 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28901:28902 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28904:28905 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28907:28908 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R28910:28910 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 29007:29018 <> In_example_2
binder 29031:29031 <> n:116
R29045:29050 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29034:29035 LF.Logic <> In def
R29039:29039 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R29041:29042 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R29044:29044 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R29037:29037 LF.Logic <> n:116 var
R29051:29057 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R29060:29061 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 29058:29059 <> n':117
R29063:29065 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29062:29062 LF.Logic <> n:116 var
R29067:29069 LF.Basics <> ::nat_scope:x_'*'_x not
R29070:29071 LF.Logic <> n':117 var
prf 29400:29405 <> In_map
binder 29419:29419 <> A:118
binder 29421:29421 <> B:119
R29437:29440 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29436:29436 LF.Logic <> A:118 var
R29441:29441 LF.Logic <> B:119 var
binder 29432:29432 <> f:120
R29449:29452 LF.Poly <> list ind
R29454:29454 LF.Logic <> A:118 var
binder 29445:29445 <> l:121
R29462:29462 LF.Logic <> A:118 var
binder 29458:29458 <> x:122
R29481:29493 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29475:29476 LF.Logic <> In def
R29480:29480 LF.Logic <> l:121 var
R29478:29478 LF.Logic <> x:122 var
R29494:29495 LF.Logic <> In def
R29504:29506 LF.Poly <> map def
R29510:29510 LF.Logic <> l:121 var
R29508:29508 LF.Logic <> f:120 var
R29498:29498 LF.Logic <> f:120 var
R29500:29500 LF.Logic <> x:122 var
prf 30385:30394 <> In_map_iff
binder 30408:30408 <> A:123
binder 30410:30410 <> B:124
R30426:30429 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30425:30425 LF.Logic <> A:123 var
R30430:30430 LF.Logic <> B:124 var
binder 30421:30421 <> f:125
R30438:30441 LF.Poly <> list ind
R30443:30443 LF.Logic <> A:123 var
binder 30434:30434 <> l:126
R30451:30451 LF.Logic <> B:124 var
binder 30447:30447 <> y:127
R30478:30491 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R30464:30465 LF.Logic <> In def
R30470:30472 LF.Poly <> map def
R30476:30476 LF.Logic <> l:126 var
R30474:30474 LF.Logic <> f:125 var
R30467:30467 LF.Logic <> y:127 var
R30492:30498 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R30500:30501 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 30499:30499 <> x:128
R30509:30512 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R30505:30507 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30502:30502 LF.Logic <> f:125 var
R30504:30504 LF.Logic <> x:128 var
R30508:30508 LF.Logic <> y:127 var
R30513:30514 LF.Logic <> In def
R30518:30518 LF.Logic <> l:126 var
R30516:30516 LF.Logic <> x:128 var
R31049:31055 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R31062:31063 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 31056:31057 <> x0:129
R31072:31075 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R31068:31070 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31066:31067 LF.Logic <> x0:129 var
R31076:31077 LF.Logic <> In def
R31079:31080 LF.Logic <> x0:129 var
R31049:31055 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R31062:31063 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 31056:31057 <> x0:130
R31072:31075 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R31068:31070 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31066:31067 LF.Logic <> x0:130 var
R31076:31077 LF.Logic <> In def
R31079:31080 LF.Logic <> x0:130 var
prf 31275:31284 <> In_app_iff
binder 31295:31295 <> A:131
binder 31297:31297 <> l:132
binder 31299:31300 <> l':133
R31305:31305 LF.Logic <> A:131 var
binder 31303:31303 <> a:134
R31323:31327 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R31311:31312 LF.Logic <> In def
R31318:31319 LF.Poly <> :::x_'++'_x not
R31317:31317 LF.Logic <> l:132 var
R31320:31321 LF.Logic <> l':133 var
R31314:31314 LF.Logic <> a:134 var
R31334:31337 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R31328:31329 LF.Logic <> In def
R31333:31333 LF.Logic <> l:132 var
R31331:31331 LF.Logic <> a:134 var
R31338:31339 LF.Logic <> In def
R31343:31344 LF.Logic <> l':133 var
R31341:31341 LF.Logic <> a:134 var
R31640:31647 LF.Logic <> or_assoc thm
R31640:31647 LF.Logic <> or_assoc thm
def 32441:32443 <> All
binder 32446:32446 <> T:135
R32462:32465 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32461:32461 LF.Logic <> T:135 var
binder 32457:32457 <> P:136
R32477:32480 LF.Poly <> list ind
R32482:32482 LF.Logic <> T:135 var
binder 32473:32473 <> l:137
R32504:32504 LF.Logic <> l:137 var
R32515:32516 LF.Poly <> :::'['_']' not
R32521:32524 Coq.Init.Logic <> True ind
R32531:32534 LF.Poly <> :::x_'::'_x not
R32544:32547 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R32541:32541 LF.Logic <> P:136 var
R32548:32550 LF.Logic <> All:138 def
R32552:32552 LF.Logic <> P:136 var
prf 32573:32578 <> All_In
binder 32591:32591 <> T:140
R32599:32602 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32598:32598 LF.Logic <> T:140 var
binder 32594:32594 <> P:141
R32614:32617 LF.Poly <> list ind
R32619:32619 LF.Logic <> T:140 var
binder 32610:32610 <> l:142
R32627:32627 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R32651:32660 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
binder 32635:32635 <> x:143
R32644:32647 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32638:32639 LF.Logic <> In def
R32643:32643 LF.Logic <> l:142 var
R32641:32641 LF.Logic <> x:143 var
R32648:32648 LF.Logic <> P:141 var
R32650:32650 LF.Logic <> x:143 var
R32661:32663 LF.Logic <> All def
R32667:32667 LF.Logic <> l:142 var
R32665:32665 LF.Logic <> P:141 var
R32764:32764 Coq.Init.Logic <> I constr
R32764:32764 Coq.Init.Logic <> I constr
def 33477:33492 <> combine_odd_even
R33511:33514 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33508:33510 Coq.Init.Datatypes <> nat ind
binder 33495:33498 <> Podd:144
binder 33500:33504 <> Peven:145
R33526:33529 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33523:33525 Coq.Init.Datatypes <> nat ind
binder 33544:33544 <> n:146
R33552:33554 LF.Basics <> odd def
R33556:33556 LF.Logic <> n:146 var
R33575:33579 LF.Logic <> Peven:145 var
R33581:33581 LF.Logic <> n:146 var
R33563:33566 LF.Logic <> Podd:144 var
R33568:33568 LF.Logic <> n:146 var
prf 33653:33674 <> combine_odd_even_intro
R33704:33707 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33701:33703 Coq.Init.Datatypes <> nat ind
binder 33688:33691 <> Podd:147
binder 33693:33697 <> Peven:148
R33719:33721 Coq.Init.Datatypes <> nat ind
binder 33715:33715 <> n:149
R33729:33729 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33752:33760 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33742:33745 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33735:33737 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33730:33732 LF.Basics <> odd def
R33734:33734 LF.Logic <> n:149 var
R33738:33741 LF.Basics <> true constr
R33746:33749 LF.Logic <> Podd:147 var
R33751:33751 LF.Logic <> n:149 var
R33761:33761 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33786:33794 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33775:33778 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33767:33769 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33762:33764 LF.Basics <> odd def
R33766:33766 LF.Logic <> n:149 var
R33770:33774 LF.Basics <> false constr
R33779:33783 LF.Logic <> Peven:148 var
R33785:33785 LF.Logic <> n:149 var
R33795:33810 LF.Logic <> combine_odd_even def
R33812:33815 LF.Logic <> Podd:147 var
R33817:33821 LF.Logic <> Peven:148 var
R33823:33823 LF.Logic <> n:149 var
R33877:33892 LF.Logic <> combine_odd_even def
R33907:33909 LF.Basics <> odd def
R33907:33909 LF.Basics <> odd def
prf 34002:34026 <> combine_odd_even_elim_odd
R34056:34059 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34053:34055 Coq.Init.Datatypes <> nat ind
binder 34040:34043 <> Podd:150
binder 34045:34049 <> Peven:151
R34071:34073 Coq.Init.Datatypes <> nat ind
binder 34067:34067 <> n:152
R34110:34117 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34081:34096 LF.Logic <> combine_odd_even def
R34098:34101 LF.Logic <> Podd:150 var
R34103:34107 LF.Logic <> Peven:151 var
R34109:34109 LF.Logic <> n:152 var
R34130:34137 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34123:34125 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34118:34120 LF.Basics <> odd def
R34122:34122 LF.Logic <> n:152 var
R34126:34129 LF.Basics <> true constr
R34138:34141 LF.Logic <> Podd:150 var
R34143:34143 LF.Logic <> n:152 var
R34187:34202 LF.Logic <> combine_odd_even def
R34222:34224 LF.Basics <> odd def
R34222:34224 LF.Basics <> odd def
prf 34311:34336 <> combine_odd_even_elim_even
R34366:34369 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34363:34365 Coq.Init.Datatypes <> nat ind
binder 34350:34353 <> Podd:153
binder 34355:34359 <> Peven:154
R34381:34383 Coq.Init.Datatypes <> nat ind
binder 34377:34377 <> n:155
R34420:34427 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34391:34406 LF.Logic <> combine_odd_even def
R34408:34411 LF.Logic <> Podd:153 var
R34413:34417 LF.Logic <> Peven:154 var
R34419:34419 LF.Logic <> n:155 var
R34441:34448 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34433:34435 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34428:34430 LF.Basics <> odd def
R34432:34432 LF.Logic <> n:155 var
R34436:34440 LF.Basics <> false constr
R34449:34453 LF.Logic <> Peven:154 var
R34455:34455 LF.Logic <> n:155 var
R34499:34514 LF.Logic <> combine_odd_even def
R34534:34536 LF.Basics <> odd def
R34534:34536 LF.Basics <> odd def
R35284:35287 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35281:35283 Coq.Init.Datatypes <> nat ind
R35291:35294 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35288:35290 Coq.Init.Datatypes <> nat ind
R35295:35297 Coq.Init.Datatypes <> nat ind
R35274:35277 Coq.Init.Peano <> plus abbrev
binder 35320:35320 <> X:156
R35329:35332 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35323:35326 LF.Poly <> list ind
R35328:35328 LF.Logic <> X:156 var
R35333:35336 LF.Poly <> list ind
R35338:35338 LF.Logic <> X:156 var
R35307:35309 LF.Poly <> rev def
R35466:35468 Coq.Init.Datatypes <> nat ind
binder 35460:35460 <> n:157
binder 35462:35462 <> m:158
R35476:35478 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35472:35474 LF.Basics <> ::nat_scope:x_'+'_x not
R35471:35471 LF.Logic <> n:157 var
R35475:35475 LF.Logic <> m:158 var
R35480:35482 LF.Basics <> ::nat_scope:x_'+'_x not
R35479:35479 LF.Logic <> m:158 var
R35483:35483 LF.Logic <> n:157 var
R35435:35442 LF.Induction <> add_comm thm
R35523:35525 Coq.Init.Datatypes <> nat ind
binder 35517:35517 <> n:159
binder 35519:35519 <> m:160
R35533:35536 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35529:35531 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35528:35528 LF.Logic <> n:159 var
R35532:35532 LF.Logic <> m:160 var
R35542:35544 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35538:35540 LF.Basics <> ::nat_scope:x_'+'_x not
R35537:35537 LF.Logic <> n:159 var
R35541:35541 LF.Logic <> n:159 var
R35546:35548 LF.Basics <> ::nat_scope:x_'+'_x not
R35545:35545 LF.Logic <> m:160 var
R35549:35549 LF.Logic <> m:160 var
R35492:35506 LF.Basics <> plus_id_example thm
prf 36890:36898 <> add_comm3
binder 36911:36911 <> x:161
binder 36913:36913 <> y:162
binder 36915:36915 <> z:163
R36929:36931 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36919:36922 LF.Basics <> ::nat_scope:x_'+'_x not
R36928:36928 LF.Basics <> ::nat_scope:x_'+'_x not
R36918:36918 LF.Logic <> x:161 var
R36924:36926 LF.Basics <> ::nat_scope:x_'+'_x not
R36923:36923 LF.Logic <> y:162 var
R36927:36927 LF.Logic <> z:163 var
R36932:36932 LF.Basics <> ::nat_scope:x_'+'_x not
R36938:36941 LF.Basics <> ::nat_scope:x_'+'_x not
R36934:36936 LF.Basics <> ::nat_scope:x_'+'_x not
R36933:36933 LF.Logic <> z:163 var
R36937:36937 LF.Logic <> y:162 var
R36942:36942 LF.Logic <> x:161 var
R37205:37212 LF.Induction <> add_comm thm
R37205:37212 LF.Induction <> add_comm thm
R37205:37212 LF.Induction <> add_comm thm
R37225:37232 LF.Induction <> add_comm thm
R37225:37232 LF.Induction <> add_comm thm
R37225:37232 LF.Induction <> add_comm thm
prf 37514:37528 <> add_comm3_take2
binder 37541:37541 <> x:164
binder 37543:37543 <> y:165
binder 37545:37545 <> z:166
R37559:37561 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37549:37552 LF.Basics <> ::nat_scope:x_'+'_x not
R37558:37558 LF.Basics <> ::nat_scope:x_'+'_x not
R37548:37548 LF.Logic <> x:164 var
R37554:37556 LF.Basics <> ::nat_scope:x_'+'_x not
R37553:37553 LF.Logic <> y:165 var
R37557:37557 LF.Logic <> z:166 var
R37562:37562 LF.Basics <> ::nat_scope:x_'+'_x not
R37568:37571 LF.Basics <> ::nat_scope:x_'+'_x not
R37564:37566 LF.Basics <> ::nat_scope:x_'+'_x not
R37563:37563 LF.Logic <> z:166 var
R37567:37567 LF.Logic <> y:165 var
R37572:37572 LF.Logic <> x:164 var
R37608:37615 LF.Induction <> add_comm thm
R37608:37615 LF.Induction <> add_comm thm
R37608:37615 LF.Induction <> add_comm thm
R37637:37639 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37633:37635 LF.Basics <> ::nat_scope:x_'+'_x not
R37641:37643 LF.Basics <> ::nat_scope:x_'+'_x not
R37637:37639 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37633:37635 LF.Basics <> ::nat_scope:x_'+'_x not
R37641:37643 LF.Basics <> ::nat_scope:x_'+'_x not
R37662:37669 LF.Induction <> add_comm thm
R37662:37669 LF.Induction <> add_comm thm
R37662:37669 LF.Induction <> add_comm thm
prf 37927:37941 <> add_comm3_take3
binder 37954:37954 <> x:167
binder 37956:37956 <> y:168
binder 37958:37958 <> z:169
R37972:37974 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37962:37965 LF.Basics <> ::nat_scope:x_'+'_x not
R37971:37971 LF.Basics <> ::nat_scope:x_'+'_x not
R37961:37961 LF.Logic <> x:167 var
R37967:37969 LF.Basics <> ::nat_scope:x_'+'_x not
R37966:37966 LF.Logic <> y:168 var
R37970:37970 LF.Logic <> z:169 var
R37975:37975 LF.Basics <> ::nat_scope:x_'+'_x not
R37981:37984 LF.Basics <> ::nat_scope:x_'+'_x not
R37977:37979 LF.Basics <> ::nat_scope:x_'+'_x not
R37976:37976 LF.Logic <> z:169 var
R37980:37980 LF.Logic <> y:168 var
R37985:37985 LF.Logic <> x:167 var
R38021:38028 LF.Induction <> add_comm thm
R38021:38028 LF.Induction <> add_comm thm
R38021:38028 LF.Induction <> add_comm thm
R38042:38049 LF.Induction <> add_comm thm
R38042:38049 LF.Induction <> add_comm thm
R38042:38049 LF.Induction <> add_comm thm
prf 38155:38169 <> add_comm3_take4
binder 38182:38182 <> x:170
binder 38184:38184 <> y:171
binder 38186:38186 <> z:172
R38200:38202 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38190:38193 LF.Basics <> ::nat_scope:x_'+'_x not
R38199:38199 LF.Basics <> ::nat_scope:x_'+'_x not
R38189:38189 LF.Logic <> x:170 var
R38195:38197 LF.Basics <> ::nat_scope:x_'+'_x not
R38194:38194 LF.Logic <> y:171 var
R38198:38198 LF.Logic <> z:172 var
R38203:38203 LF.Basics <> ::nat_scope:x_'+'_x not
R38209:38212 LF.Basics <> ::nat_scope:x_'+'_x not
R38205:38207 LF.Basics <> ::nat_scope:x_'+'_x not
R38204:38204 LF.Logic <> z:172 var
R38208:38208 LF.Logic <> y:171 var
R38213:38213 LF.Logic <> x:170 var
R38250:38257 LF.Induction <> add_comm thm
R38263:38265 LF.Basics <> ::nat_scope:x_'+'_x not
R38250:38257 LF.Induction <> add_comm thm
R38263:38265 LF.Basics <> ::nat_scope:x_'+'_x not
R38250:38257 LF.Induction <> add_comm thm
R38263:38265 LF.Basics <> ::nat_scope:x_'+'_x not
R38282:38289 LF.Induction <> add_comm thm
R38282:38289 LF.Induction <> add_comm thm
R38282:38289 LF.Induction <> add_comm thm
prf 38512:38521 <> in_not_nil
binder 38534:38534 <> A:173
R38541:38541 LF.Logic <> A:173 var
binder 38537:38537 <> x:174
R38549:38552 LF.Poly <> list ind
R38554:38554 LF.Logic <> A:173 var
binder 38545:38545 <> l:175
R38564:38567 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38558:38559 LF.Logic <> In def
R38563:38563 LF.Logic <> l:175 var
R38561:38561 LF.Logic <> x:174 var
R38569:38572 LF.Logic <> ::type_scope:x_'<>'_x not
R38568:38568 LF.Logic <> l:175 var
R38573:38574 LF.Poly <> :::'['_']' not
R38609:38611 Coq.Init.Logic <> not def
prf 39024:39036 <> in_not_nil_42
R39053:39056 LF.Poly <> list ind
R39058:39060 Coq.Init.Datatypes <> nat ind
binder 39049:39049 <> l:176
R39070:39073 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39063:39064 LF.Logic <> In def
R39069:39069 LF.Logic <> l:176 var
R39075:39078 LF.Logic <> ::type_scope:x_'<>'_x not
R39074:39074 LF.Logic <> l:176 var
R39079:39080 LF.Poly <> :::'['_']' not
R39117:39126 LF.Logic <> in_not_nil thm
R39117:39126 LF.Logic <> in_not_nil thm
prf 39227:39245 <> in_not_nil_42_take2
R39262:39265 LF.Poly <> list ind
R39267:39269 Coq.Init.Datatypes <> nat ind
binder 39258:39258 <> l:177
R39279:39282 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39272:39273 LF.Logic <> In def
R39278:39278 LF.Logic <> l:177 var
R39284:39287 LF.Logic <> ::type_scope:x_'<>'_x not
R39283:39283 LF.Logic <> l:177 var
R39288:39289 LF.Poly <> :::'['_']' not
R39321:39330 LF.Logic <> in_not_nil thm
R39321:39330 LF.Logic <> in_not_nil thm
prf 39401:39419 <> in_not_nil_42_take3
R39436:39439 LF.Poly <> list ind
R39441:39443 Coq.Init.Datatypes <> nat ind
binder 39432:39432 <> l:178
R39453:39456 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39446:39447 LF.Logic <> In def
R39452:39452 LF.Logic <> l:178 var
R39458:39461 LF.Logic <> ::type_scope:x_'<>'_x not
R39457:39457 LF.Logic <> l:178 var
R39462:39463 LF.Poly <> :::'['_']' not
R39495:39504 LF.Logic <> in_not_nil thm
R39495:39504 LF.Logic <> in_not_nil thm
prf 39591:39609 <> in_not_nil_42_take4
R39626:39629 LF.Poly <> list ind
R39631:39633 Coq.Init.Datatypes <> nat ind
binder 39622:39622 <> l:179
R39643:39646 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39636:39637 LF.Logic <> In def
R39642:39642 LF.Logic <> l:179 var
R39648:39651 LF.Logic <> ::type_scope:x_'<>'_x not
R39647:39647 LF.Logic <> l:179 var
R39652:39653 LF.Poly <> :::'['_']' not
R39686:39695 LF.Logic <> in_not_nil thm
R39697:39699 Coq.Init.Datatypes <> nat ind
R39686:39695 LF.Logic <> in_not_nil thm
R39697:39699 Coq.Init.Datatypes <> nat ind
prf 39844:39862 <> in_not_nil_42_take5
R39879:39882 LF.Poly <> list ind
R39884:39886 Coq.Init.Datatypes <> nat ind
binder 39875:39875 <> l:180
R39896:39899 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39889:39890 LF.Logic <> In def
R39895:39895 LF.Logic <> l:180 var
R39901:39904 LF.Logic <> ::type_scope:x_'<>'_x not
R39900:39900 LF.Logic <> l:180 var
R39905:39906 LF.Poly <> :::'['_']' not
R39939:39948 LF.Logic <> in_not_nil thm
R39939:39948 LF.Logic <> in_not_nil thm
def 40560:40579 <> lemma_application_ex
R40597:40599 Coq.Init.Datatypes <> nat ind
binder 40593:40593 <> n:181
R40608:40611 LF.Poly <> list ind
R40613:40615 Coq.Init.Datatypes <> nat ind
binder 40603:40604 <> ns:182
R40653:40660 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40623:40624 LF.Logic <> In def
R40629:40631 LF.Poly <> map def
R40650:40651 LF.Logic <> ns:182 var
binder 40638:40638 <> m:183
R40644:40646 LF.Basics <> ::nat_scope:x_'*'_x not
R40643:40643 LF.Logic <> m:183 var
R40626:40626 LF.Logic <> n:181 var
R40662:40664 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40661:40661 LF.Logic <> n:181 var
R40704:40708 LF.Logic <> proj1 thm
R40715:40724 LF.Logic <> In_map_iff thm
R40704:40708 LF.Logic <> proj1 thm
R40715:40724 LF.Logic <> In_map_iff thm
R40776:40782 LF.Induction <> mul_0_r thm
R40776:40782 LF.Induction <> mul_0_r thm
R40776:40782 LF.Induction <> mul_0_r thm
def 43192:43203 <> even_42_bool
R43214:43216 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43207:43210 LF.Basics <> even def
R43217:43220 LF.Basics <> true constr
def 43324:43335 <> even_42_prop
R43339:43342 LF.Logic <> Even def
R43362:43365 LF.Logic <> Even def
prf 43634:43644 <> even_double
binder 43655:43655 <> k:184
R43673:43675 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43658:43661 LF.Basics <> even def
R43664:43669 LF.Induction <> double def
R43671:43671 LF.Logic <> k:184 var
R43676:43679 LF.Basics <> true constr
prf 43839:43854 <> even_double_conv
binder 43865:43865 <> n:185
R43868:43874 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R43876:43879 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 43875:43875 <> k:186
R43881:43883 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43880:43880 LF.Logic <> n:185 var
R43887:43890 LF.Basics <> even def
R43892:43892 LF.Logic <> n:185 var
R43913:43913 Coq.Init.Datatypes <> S constr
R43916:43921 LF.Induction <> double def
R43923:43923 LF.Logic <> k:186 var
R43899:43904 LF.Induction <> double def
R43906:43906 LF.Logic <> k:186 var
R44061:44064 LF.Basics <> even def
R44061:44064 LF.Basics <> even def
R44099:44104 LF.Induction <> even_S thm
R44099:44104 LF.Induction <> even_S thm
R44099:44104 LF.Induction <> even_S thm
R44209:44214 LF.Induction <> even_S thm
R44209:44214 LF.Induction <> even_S thm
R44209:44214 LF.Induction <> even_S thm
R44283:44285 LF.Basics <> ::nat_scope:x_'+'_x not
R44283:44285 LF.Basics <> ::nat_scope:x_'+'_x not
prf 44378:44391 <> even_bool_prop
binder 44402:44402 <> n:187
R44420:44424 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R44413:44415 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44407:44410 LF.Basics <> even def
R44412:44412 LF.Logic <> n:187 var
R44416:44419 LF.Basics <> true constr
R44425:44428 LF.Logic <> Even def
R44430:44430 LF.Logic <> n:187 var
R44483:44498 LF.Logic <> even_double_conv thm
R44483:44498 LF.Logic <> even_double_conv thm
R44601:44611 LF.Logic <> even_double thm
R44601:44611 LF.Logic <> even_double thm
prf 44997:45002 <> eqb_eq
R45021:45023 Coq.Init.Datatypes <> nat ind
binder 45013:45014 <> n1:188
binder 45016:45017 <> n2:189
R45043:45047 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R45036:45038 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45030:45033 LF.Basics <> ::nat_scope:x_'=?'_x not
R45028:45029 LF.Logic <> n1:188 var
R45034:45035 LF.Logic <> n2:189 var
R45039:45042 LF.Basics <> true constr
R45050:45052 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45048:45049 LF.Logic <> n1:188 var
R45053:45054 LF.Logic <> n2:189 var
R45097:45104 LF.Tactics <> eqb_true thm
R45097:45104 LF.Tactics <> eqb_true thm
R45140:45147 LF.Induction <> eqb_refl thm
R45140:45147 LF.Induction <> eqb_refl thm
R45140:45147 LF.Induction <> eqb_refl thm
def 45539:45551 <> is_even_prime
binder 45553:45553 <> n:190
R45564:45566 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45563:45563 LF.Logic <> n:190 var
R45586:45590 LF.Basics <> false constr
R45574:45577 LF.Basics <> true constr
def 46327:46339 <> is_even_prime
binder 46341:46341 <> n:191
R46352:46355 LF.Basics <> ::nat_scope:x_'=?'_x not
R46351:46351 LF.Logic <> n:191 var
R46375:46379 LF.Basics <> false constr
R46363:46366 LF.Basics <> true constr
def 47309:47317 <> even_1000
R47321:47324 LF.Logic <> Even def
R47433:47436 LF.Logic <> Even def
def 47650:47659 <> even_1000'
R47672:47674 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47663:47666 LF.Basics <> even def
R47675:47678 LF.Basics <> true constr
def 47909:47919 <> even_1000''
R47923:47926 LF.Logic <> Even def
R47947:47960 LF.Logic <> even_bool_prop thm
R47947:47960 LF.Logic <> even_bool_prop thm
def 48527:48539 <> not_even_1001
R48552:48554 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48543:48546 LF.Basics <> even def
R48555:48559 LF.Basics <> false constr
def 48769:48782 <> not_even_1001'
R48786:48787 Coq.Init.Logic <> ::type_scope:'~'_x not
R48797:48797 Coq.Init.Logic <> ::type_scope:'~'_x not
R48788:48791 LF.Logic <> Even def
R49138:49151 LF.Logic <> even_bool_prop thm
R49138:49151 LF.Logic <> even_bool_prop thm
R49138:49151 LF.Logic <> even_bool_prop thm
R49163:49165 Coq.Init.Logic <> not def
prf 49582:49597 <> plus_eqb_example
R49616:49618 Coq.Init.Datatypes <> nat ind
binder 49608:49608 <> n:192
binder 49610:49610 <> m:193
binder 49612:49612 <> p:194
R49636:49639 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49629:49631 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49624:49627 LF.Basics <> ::nat_scope:x_'=?'_x not
R49623:49623 LF.Logic <> n:192 var
R49628:49628 LF.Logic <> m:193 var
R49632:49635 LF.Basics <> true constr
R49654:49656 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49645:49648 LF.Basics <> ::nat_scope:x_'=?'_x not
R49641:49643 LF.Basics <> ::nat_scope:x_'+'_x not
R49640:49640 LF.Logic <> n:192 var
R49644:49644 LF.Logic <> p:194 var
R49650:49652 LF.Basics <> ::nat_scope:x_'+'_x not
R49649:49649 LF.Logic <> m:193 var
R49653:49653 LF.Logic <> p:194 var
R49657:49660 LF.Basics <> true constr
R49722:49727 LF.Logic <> eqb_eq thm
R49722:49727 LF.Logic <> eqb_eq thm
R49722:49727 LF.Logic <> eqb_eq thm
R49758:49763 LF.Logic <> eqb_eq thm
R49758:49763 LF.Logic <> eqb_eq thm
R49758:49763 LF.Logic <> eqb_eq thm
prf 50299:50311 <> andb_true_iff
R50328:50331 LF.Basics <> bool ind
binder 50322:50323 <> b1:195
binder 50325:50326 <> b2:196
R50351:50355 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R50344:50346 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50338:50341 LF.Basics <> :::x_'&&'_x not
R50336:50337 LF.Logic <> b1:195 var
R50342:50343 LF.Logic <> b2:196 var
R50347:50350 LF.Basics <> true constr
R50365:50368 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R50358:50360 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50356:50357 LF.Logic <> b1:195 var
R50361:50364 LF.Basics <> true constr
R50371:50373 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50369:50370 LF.Logic <> b2:196 var
R50374:50377 LF.Basics <> true constr
prf 50620:50631 <> orb_true_iff
binder 50642:50643 <> b1:197
binder 50645:50646 <> b2:198
R50666:50670 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R50659:50661 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50653:50656 LF.Basics <> :::x_'||'_x not
R50651:50652 LF.Logic <> b1:197 var
R50657:50658 LF.Logic <> b2:198 var
R50662:50665 LF.Basics <> true constr
R50680:50683 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R50673:50675 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50671:50672 LF.Logic <> b1:197 var
R50676:50679 LF.Basics <> true constr
R50686:50688 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50684:50685 LF.Logic <> b2:198 var
R50689:50692 LF.Basics <> true constr
prf 51442:51448 <> eqb_neq
R51465:51467 Coq.Init.Datatypes <> nat ind
binder 51459:51459 <> x:199
binder 51461:51461 <> y:200
R51486:51490 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R51478:51480 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51473:51476 LF.Basics <> ::nat_scope:x_'=?'_x not
R51472:51472 LF.Logic <> x:199 var
R51477:51477 LF.Logic <> y:200 var
R51481:51485 LF.Basics <> false constr
R51492:51495 LF.Logic <> ::type_scope:x_'<>'_x not
R51491:51491 LF.Logic <> x:199 var
R51496:51496 LF.Logic <> y:200 var
R51527:51529 Coq.Init.Logic <> not def
R51545:51550 LF.Logic <> eqb_eq thm
R51545:51550 LF.Logic <> eqb_eq thm
R51545:51550 LF.Logic <> eqb_eq thm
R51637:51640 LF.Basics <> ::nat_scope:x_'=?'_x not
R51637:51640 LF.Basics <> ::nat_scope:x_'=?'_x not
def 52128:52135 <> eqb_list
binder 52138:52138 <> A:201
R52156:52159 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52155:52155 LF.Logic <> A:201 var
R52161:52164 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52160:52160 LF.Logic <> A:201 var
R52165:52168 LF.Basics <> bool ind
binder 52149:52151 <> eqb:202
R52198:52201 LF.Poly <> list ind
R52203:52203 LF.Logic <> A:201 var
binder 52190:52191 <> l1:203
binder 52193:52194 <> l2:204
R52208:52211 LF.Basics <> bool ind
R52229:52230 LF.Logic <> l2:204 var
R52225:52226 LF.Logic <> l1:203 var
R52243:52244 LF.Poly <> :::'['_']' not
R52247:52248 LF.Poly <> :::'['_']' not
R52253:52256 LF.Basics <> true constr
R52264:52265 LF.Poly <> :::'['_']' not
R52273:52277 LF.Basics <> false constr
R52288:52289 LF.Poly <> :::'['_']' not
R52294:52298 LF.Basics <> false constr
R52308:52311 LF.Poly <> :::x_'::'_x not
R52319:52322 LF.Poly <> :::x_'::'_x not
R52330:52330 LF.Basics <> :::x_'&&'_x not
R52340:52345 LF.Basics <> :::x_'&&'_x not
R52366:52366 LF.Basics <> :::x_'&&'_x not
R52331:52333 LF.Logic <> eqb:202 var
R52346:52353 LF.Logic <> eqb_list:205 def
R52355:52357 LF.Logic <> eqb:202 var
prf 52383:52395 <> eqb_list_refl
binder 52408:52408 <> A:208
R52418:52421 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52417:52417 LF.Logic <> A:208 var
R52423:52426 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52422:52422 LF.Logic <> A:208 var
R52427:52430 LF.Basics <> bool ind
binder 52411:52413 <> eqb:209
R52438:52441 LF.Poly <> list ind
R52443:52443 LF.Logic <> A:208 var
binder 52434:52434 <> l:210
R52451:52451 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52494:52502 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 52459:52460 <> a1:211
binder 52462:52463 <> a2:212
R52482:52486 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R52475:52477 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52466:52468 LF.Logic <> eqb:209 var
R52473:52474 LF.Logic <> a2:212 var
R52470:52471 LF.Logic <> a1:211 var
R52478:52481 LF.Basics <> true constr
R52489:52491 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52487:52488 LF.Logic <> a1:211 var
R52492:52493 LF.Logic <> a2:212 var
R52519:52521 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52503:52510 LF.Logic <> eqb_list def
R52518:52518 LF.Logic <> l:210 var
R52516:52516 LF.Logic <> l:210 var
R52512:52514 LF.Logic <> eqb:209 var
R52522:52525 LF.Basics <> true constr
R52627:52639 LF.Logic <> andb_true_iff thm
R52627:52639 LF.Logic <> andb_true_iff thm
prf 52697:52713 <> eqb_list_true_iff
binder 52726:52726 <> A:213
R52736:52739 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52735:52735 LF.Logic <> A:213 var
R52741:52744 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52740:52740 LF.Logic <> A:213 var
R52745:52748 LF.Basics <> bool ind
binder 52729:52731 <> eqb:214
R52756:52756 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52799:52807 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 52764:52765 <> a1:215
binder 52767:52768 <> a2:216
R52787:52791 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R52780:52782 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52771:52773 LF.Logic <> eqb:214 var
R52778:52779 LF.Logic <> a2:216 var
R52775:52776 LF.Logic <> a1:215 var
R52783:52786 LF.Basics <> true constr
R52794:52796 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52792:52793 LF.Logic <> a1:215 var
R52797:52798 LF.Logic <> a2:216 var
binder 52815:52816 <> l1:217
binder 52818:52819 <> l2:218
R52847:52851 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R52840:52842 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52822:52829 LF.Logic <> eqb_list def
R52838:52839 LF.Logic <> l2:218 var
R52835:52836 LF.Logic <> l1:217 var
R52831:52833 LF.Logic <> eqb:214 var
R52843:52846 LF.Basics <> true constr
R52854:52856 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52852:52853 LF.Logic <> l1:217 var
R52857:52858 LF.Logic <> l2:218 var
R53175:53187 LF.Logic <> andb_true_iff thm
R53175:53187 LF.Logic <> andb_true_iff thm
R53351:53363 LF.Logic <> eqb_list_refl thm
R53351:53363 LF.Logic <> eqb_list_refl thm
def 53754:53760 <> forallb
binder 53763:53763 <> X:219
R53782:53785 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53781:53781 LF.Logic <> X:219 var
R53786:53789 LF.Basics <> bool ind
binder 53774:53777 <> test:220
R53797:53800 LF.Poly <> list ind
R53802:53802 LF.Logic <> X:219 var
binder 53793:53793 <> l:221
R53807:53810 LF.Basics <> bool ind
R53823:53823 LF.Logic <> l:221 var
R53834:53835 LF.Poly <> :::'['_']' not
R53840:53843 LF.Basics <> true constr
R53850:53853 LF.Poly <> :::x_'::'_x not
R53860:53863 LF.Basics <> andb def
R53866:53869 LF.Logic <> test:220 var
R53875:53881 LF.Logic <> forallb:222 def
R53883:53886 LF.Logic <> test:220 var
prf 53908:53923 <> forallb_true_iff
binder 53934:53934 <> X:224
binder 53936:53939 <> test:225
R53946:53949 LF.Poly <> list ind
R53951:53951 LF.Logic <> X:224 var
binder 53942:53942 <> l:226
R53978:53982 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R53971:53973 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53957:53963 LF.Logic <> forallb def
R53970:53970 LF.Logic <> l:226 var
R53965:53968 LF.Logic <> test:225 var
R53974:53977 LF.Basics <> true constr
R53983:53985 LF.Logic <> All def
R54012:54012 LF.Logic <> l:226 var
binder 53992:53992 <> x:227
R54003:54005 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53997:54000 LF.Logic <> test:225 var
R54002:54002 LF.Logic <> x:227 var
R54006:54009 LF.Basics <> true constr
R54138:54150 LF.Logic <> andb_true_iff thm
R54138:54150 LF.Logic <> andb_true_iff thm
def 56023:56043 <> function_equality_ex1
R56049:56049 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56064:56068 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56090:56090 Coq.Init.Logic <> ::type_scope:x_'='_x not
binder 56054:56054 <> x:228
R56060:56062 LF.Basics <> ::nat_scope:x_'+'_x not
R56063:56063 LF.Logic <> x:228 var
binder 56073:56073 <> x:229
R56078:56078 LF.Basics <> ::nat_scope:x_'+'_x not
R56085:56088 LF.Basics <> ::nat_scope:x_'+'_x not
R56079:56082 Coq.Init.Peano <> pred abbrev
R56089:56089 LF.Logic <> x:229 var
def 57078:57098 <> function_equality_ex2
R57104:57104 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57122:57126 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57144:57144 Coq.Init.Logic <> ::type_scope:x_'='_x not
binder 57109:57109 <> x:230
R57114:57117 Coq.Init.Peano <> plus abbrev
R57119:57119 LF.Logic <> x:230 var
binder 57131:57131 <> x:231
R57136:57139 Coq.Init.Peano <> plus abbrev
R57143:57143 LF.Logic <> x:231 var
R57187:57194 LF.Induction <> add_comm thm
R57187:57194 LF.Induction <> add_comm thm
ax 57329:57353 <> functional_extensionality
binder 57365:57365 <> X:232
binder 57367:57367 <> Y:233
R57420:57423 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57419:57419 LF.Logic <> X:232 var
R57424:57424 LF.Logic <> Y:233 var
binder 57413:57413 <> f:234
binder 57415:57415 <> g:235
R57430:57430 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57454:57458 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57441:57441 LF.Logic <> X:232 var
binder 57439:57439 <> x:236
R57448:57450 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57445:57445 LF.Logic <> f:234 var
R57447:57447 LF.Logic <> x:236 var
R57451:57451 LF.Logic <> g:235 var
R57453:57453 LF.Logic <> x:236 var
R57460:57462 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57459:57459 LF.Logic <> f:234 var
R57463:57463 LF.Logic <> g:235 var
def 57773:57793 <> function_equality_ex2
R57799:57799 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57817:57821 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57839:57839 Coq.Init.Logic <> ::type_scope:x_'='_x not
binder 57804:57804 <> x:238
R57809:57812 Coq.Init.Peano <> plus abbrev
R57814:57814 LF.Logic <> x:238 var
binder 57826:57826 <> x:239
R57831:57834 Coq.Init.Peano <> plus abbrev
R57838:57838 LF.Logic <> x:239 var
R57857:57881 LF.Logic <> functional_extensionality prfax
R57857:57881 LF.Logic <> functional_extensionality prfax
R57902:57909 LF.Induction <> add_comm thm
R57902:57909 LF.Induction <> add_comm thm
def 59409:59418 <> rev_append
binder 59421:59421 <> X:240
R59433:59436 LF.Poly <> list ind
R59438:59438 LF.Logic <> X:240 var
binder 59425:59426 <> l1:241
binder 59428:59429 <> l2:242
R59443:59446 LF.Poly <> list ind
R59448:59448 LF.Logic <> X:240 var
R59461:59462 LF.Logic <> l1:241 var
R59473:59474 LF.Poly <> :::'['_']' not
R59479:59480 LF.Logic <> l2:242 var
R59487:59490 LF.Poly <> :::x_'::'_x not
R59498:59507 LF.Logic <> rev_append:243 def
R59515:59518 LF.Poly <> :::x_'::'_x not
R59519:59520 LF.Logic <> l2:242 var
def 59542:59547 <> tr_rev
binder 59550:59550 <> X:245
R59558:59561 LF.Poly <> list ind
R59563:59563 LF.Logic <> X:245 var
binder 59554:59554 <> l:246
R59568:59571 LF.Poly <> list ind
R59573:59573 LF.Logic <> X:245 var
R59580:59589 LF.Logic <> rev_append def
R59593:59594 LF.Poly <> :::'['_']' not
R59591:59591 LF.Logic <> l:246 var
prf 59963:59975 <> rev_append_eq
binder 59986:59986 <> X:247
R60000:60003 LF.Poly <> list ind
R60005:60005 LF.Logic <> X:247 var
binder 59989:59990 <> l1:248
binder 59992:59993 <> l2:249
binder 59995:59996 <> l3:250
R60036:60038 Coq.Init.Logic <> ::type_scope:x_'='_x not
R60012:60021 LF.Logic <> rev_append def
R60029:60032 LF.Poly <> :::x_'++'_x not
R60027:60028 LF.Logic <> l2:249 var
R60033:60034 LF.Logic <> l3:250 var
R60023:60024 LF.Logic <> l1:248 var
R60055:60058 LF.Poly <> :::x_'++'_x not
R60039:60048 LF.Logic <> rev_append def
R60053:60054 LF.Logic <> l2:249 var
R60050:60051 LF.Logic <> l1:248 var
R60059:60060 LF.Logic <> l3:250 var
R60183:60186 LF.Poly <> :::x_'::'_x not
R60183:60186 LF.Poly <> :::x_'::'_x not
prf 60211:60224 <> tr_rev_correct
binder 60235:60235 <> X:251
R60247:60249 Coq.Init.Logic <> ::type_scope:x_'='_x not
R60239:60244 LF.Logic <> tr_rev def
R60246:60246 LF.Logic <> X:251 var
R60251:60253 LF.Poly <> rev def
R60255:60255 LF.Logic <> X:251 var
R60283:60307 LF.Logic <> functional_extensionality prfax
R60283:60307 LF.Logic <> functional_extensionality prfax
R60412:60417 LF.Logic <> tr_rev def
R60434:60446 LF.Logic <> rev_append_eq thm
R60434:60446 LF.Logic <> rev_append_eq thm
R60434:60446 LF.Logic <> rev_append_eq thm
def 60911:60925 <> excluded_middle
binder 60937:60937 <> P:252
R60950:60953 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R60949:60949 LF.Logic <> P:252 var
R60954:60955 Coq.Init.Logic <> ::type_scope:'~'_x not
R60956:60956 LF.Logic <> P:252 var
prf 61725:61750 <> restricted_excluded_middle
binder 61761:61761 <> P:253
binder 61763:61763 <> b:254
R61768:61768 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61783:61787 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61770:61774 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R61769:61769 LF.Logic <> P:253 var
R61776:61778 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61775:61775 LF.Logic <> b:254 var
R61779:61782 LF.Basics <> true constr
R61789:61792 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R61788:61788 LF.Logic <> P:253 var
R61793:61794 Coq.Init.Logic <> ::type_scope:'~'_x not
R61795:61795 LF.Logic <> P:253 var
prf 62044:62072 <> restricted_excluded_middle_eq
R62090:62092 Coq.Init.Datatypes <> nat ind
binder 62084:62084 <> n:255
binder 62086:62086 <> m:256
R62103:62106 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R62099:62101 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62098:62098 LF.Logic <> n:255 var
R62102:62102 LF.Logic <> m:256 var
R62108:62111 LF.Logic <> ::type_scope:x_'<>'_x not
R62107:62107 LF.Logic <> n:255 var
R62112:62112 LF.Logic <> m:256 var
R62145:62170 LF.Logic <> restricted_excluded_middle thm
R62174:62176 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62182:62185 LF.Basics <> ::nat_scope:x_'=?'_x not
R62145:62170 LF.Logic <> restricted_excluded_middle thm
R62174:62176 Coq.Init.Logic <> ::type_scope:x_'='_x not
R62182:62185 LF.Basics <> ::nat_scope:x_'=?'_x not
R62211:62216 LF.Logic <> eqb_eq thm
R62211:62216 LF.Logic <> eqb_eq thm
prf 66515:66541 <> excluded_middle_irrefutable
binder 66552:66552 <> P:257
R66565:66566 Coq.Init.Logic <> ::type_scope:'~'_x not
R66567:66569 Coq.Init.Logic <> ::type_scope:'~'_x not
R66578:66578 Coq.Init.Logic <> ::type_scope:'~'_x not
R66571:66574 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R66570:66570 LF.Logic <> P:257 var
R66575:66576 Coq.Init.Logic <> ::type_scope:'~'_x not
R66577:66577 LF.Logic <> P:257 var
R66619:66634 LF.Logic <> de_morgan_not_or thm
R66619:66634 LF.Logic <> de_morgan_not_or thm
R66676:66705 LF.Logic <> contradiction_implies_anything thm
R66708:66709 Coq.Init.Logic <> ::type_scope:'~'_x not
R66713:66717 Coq.Init.Logic <> False ind
R66676:66705 LF.Logic <> contradiction_implies_anything thm
R66708:66709 Coq.Init.Logic <> ::type_scope:'~'_x not
R66713:66717 Coq.Init.Logic <> False ind
prf 67189:67203 <> not_exists_dist
R67224:67229 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R67209:67223 LF.Logic <> excluded_middle def
binder 67238:67238 <> X:258
R67252:67255 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R67251:67251 LF.Logic <> X:258 var
binder 67247:67247 <> P:259
R67286:67290 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R67304:67304 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R67267:67269 Coq.Init.Logic <> ::type_scope:'~'_x not
R67285:67285 Coq.Init.Logic <> ::type_scope:'~'_x not
R67270:67276 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R67278:67279 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 67277:67277 <> x:260
R67280:67281 Coq.Init.Logic <> ::type_scope:'~'_x not
R67282:67282 LF.Logic <> P:259 var
R67284:67284 LF.Logic <> x:260 var
binder 67298:67298 <> x:261
R67301:67301 LF.Logic <> P:259 var
R67303:67303 LF.Logic <> x:261 var
R67364:67366 Coq.Init.Logic <> not def
def 68226:68231 <> peirce
binder 68243:68243 <> P:262
binder 68245:68245 <> Q:263
R68256:68256 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68270:68274 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68257:68257 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68264:68268 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68259:68262 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68258:68258 LF.Logic <> P:262 var
R68263:68263 LF.Logic <> Q:263 var
R68269:68269 LF.Logic <> P:262 var
R68275:68275 LF.Logic <> P:262 var
def 68290:68316 <> double_negation_elimination
binder 68328:68328 <> P:264
R68341:68344 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68338:68338 Coq.Init.Logic <> ::type_scope:'~'_x not
R68339:68339 Coq.Init.Logic <> ::type_scope:'~'_x not
R68340:68340 LF.Logic <> P:264 var
R68345:68345 LF.Logic <> P:264 var
def 68360:68380 <> de_morgan_not_and_not
binder 68392:68392 <> P:265
binder 68394:68394 <> Q:266
R68415:68418 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68404:68405 Coq.Init.Logic <> ::type_scope:'~'_x not
R68414:68414 Coq.Init.Logic <> ::type_scope:'~'_x not
R68408:68411 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R68406:68406 Coq.Init.Logic <> ::type_scope:'~'_x not
R68407:68407 LF.Logic <> P:265 var
R68412:68412 Coq.Init.Logic <> ::type_scope:'~'_x not
R68413:68413 LF.Logic <> Q:266 var
R68420:68423 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R68419:68419 LF.Logic <> P:265 var
R68424:68424 LF.Logic <> Q:266 var
def 68439:68451 <> implies_to_or
binder 68463:68463 <> P:267
binder 68465:68465 <> Q:268
R68475:68475 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68482:68487 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68495:68495 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68477:68480 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68476:68476 LF.Logic <> P:267 var
R68481:68481 LF.Logic <> Q:268 var
R68490:68493 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R68488:68488 Coq.Init.Logic <> ::type_scope:'~'_x not
R68489:68489 LF.Logic <> P:267 var
R68494:68494 LF.Logic <> Q:268 var
def 68510:68531 <> consequentia_mirabilis
binder 68543:68543 <> P:269
R68553:68553 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68561:68565 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68556:68559 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68554:68554 Coq.Init.Logic <> ::type_scope:'~'_x not
R68555:68555 LF.Logic <> P:269 var
R68560:68560 LF.Logic <> P:269 var
R68566:68566 LF.Logic <> P:269 var
prf 68578:68594 <> implies_to_or_rev
binder 68605:68605 <> P:270
binder 68607:68607 <> Q:271
R68617:68617 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68625:68630 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68637:68637 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68620:68623 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R68618:68618 Coq.Init.Logic <> ::type_scope:'~'_x not
R68619:68619 LF.Logic <> P:270 var
R68624:68624 LF.Logic <> Q:271 var
R68632:68635 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68631:68631 LF.Logic <> P:270 var
R68636:68636 LF.Logic <> Q:271 var
prf 68783:68814 <> implies_to_or_to_excluded_middle
R68831:68834 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R68818:68830 LF.Logic <> implies_to_or def
R68835:68849 LF.Logic <> excluded_middle def
R68889:68897 LF.Logic <> or_commut thm
R68889:68897 LF.Logic <> or_commut thm
prf 68967:68998 <> excluded_middle_to_implies_to_or
R69017:69020 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R69002:69016 LF.Logic <> excluded_middle def
R69021:69033 LF.Logic <> implies_to_or def
prf 69263:69308 <> excluded_middle_to_double_negation_elimination
R69329:69332 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R69314:69328 LF.Logic <> excluded_middle def
R69333:69359 LF.Logic <> double_negation_elimination def
prf 69527:69549 <> implies_to_or_to_peirce
R69568:69571 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R69555:69567 LF.Logic <> implies_to_or def
R69572:69577 LF.Logic <> peirce def
R69689:69689 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R69696:69702 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R69710:69710 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R69691:69694 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R69705:69708 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R69703:69703 Coq.Init.Logic <> ::type_scope:'~'_x not
R69689:69689 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R69696:69702 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R69710:69710 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R69691:69694 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R69705:69708 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R69703:69703 Coq.Init.Logic <> ::type_scope:'~'_x not
R69754:69770 LF.Logic <> implies_to_or_rev thm
R69754:69770 LF.Logic <> implies_to_or_rev thm
R69808:69823 LF.Logic <> de_morgan_not_or thm
R69808:69823 LF.Logic <> de_morgan_not_or thm
R69863:69894 LF.Logic <> implies_to_or_to_excluded_middle thm
R69863:69894 LF.Logic <> implies_to_or_to_excluded_middle thm
R69943:69988 LF.Logic <> excluded_middle_to_double_negation_elimination thm
R69943:69988 LF.Logic <> excluded_middle_to_double_negation_elimination thm
prf 70145:70176 <> peirce_to_consequentia_mirabilis
R70188:70191 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R70182:70187 LF.Logic <> peirce def
R70192:70213 LF.Logic <> consequentia_mirabilis def
R70251:70253 Coq.Init.Logic <> not def
prf 70297:70336 <> excluded_middle_to_de_morgan_not_and_not
R70357:70360 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R70342:70356 LF.Logic <> excluded_middle def
R70361:70381 LF.Logic <> de_morgan_not_and_not def
prf 70646:70698 <> consequentia_mirabilis_to_double_negation_elimination
R70726:70729 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R70704:70725 LF.Logic <> consequentia_mirabilis def
R70730:70756 LF.Logic <> double_negation_elimination def
R70810:70812 Coq.Init.Logic <> not def
prf 70921:70933 <> idempotent_or
binder 70944:70944 <> P:272
R70960:70964 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R70955:70958 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R70954:70954 LF.Logic <> P:272 var
R70959:70959 LF.Logic <> P:272 var
R70965:70965 LF.Logic <> P:272 var
prf 71073:71086 <> idempotent_and
binder 71097:71097 <> P:273
R71113:71117 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R71108:71111 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R71107:71107 LF.Logic <> P:273 var
R71112:71112 LF.Logic <> P:273 var
R71118:71118 LF.Logic <> P:273 var
prf 71244:71295 <> de_morgan_not_and_not_to_double_negation_elimination
R71322:71325 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R71301:71321 LF.Logic <> de_morgan_not_and_not def
R71326:71352 LF.Logic <> double_negation_elimination def
R71425:71429 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R71436:71436 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R71414:71415 Coq.Init.Logic <> ::type_scope:'~'_x not
R71424:71424 Coq.Init.Logic <> ::type_scope:'~'_x not
R71418:71421 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R71416:71416 Coq.Init.Logic <> ::type_scope:'~'_x not
R71422:71422 Coq.Init.Logic <> ::type_scope:'~'_x not
R71431:71434 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R71425:71429 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R71436:71436 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R71414:71415 Coq.Init.Logic <> ::type_scope:'~'_x not
R71424:71424 Coq.Init.Logic <> ::type_scope:'~'_x not
R71418:71421 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R71416:71416 Coq.Init.Logic <> ::type_scope:'~'_x not
R71422:71422 Coq.Init.Logic <> ::type_scope:'~'_x not
R71431:71434 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R71485:71497 LF.Logic <> idempotent_or thm
R71485:71497 LF.Logic <> idempotent_or thm
R71485:71497 LF.Logic <> idempotent_or thm
R71518:71531 LF.Logic <> idempotent_and thm
R71518:71531 LF.Logic <> idempotent_and thm
R71518:71531 LF.Logic <> idempotent_and thm
prf 71571:71614 <> double_negation_elimination_to_implies_to_or
R71647:71650 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R71620:71646 LF.Logic <> double_negation_elimination def
R71651:71663 LF.Logic <> implies_to_or def
R71746:71749 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R71750:71750 Coq.Init.Logic <> ::type_scope:'~'_x not
R71746:71749 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R71750:71750 Coq.Init.Logic <> ::type_scope:'~'_x not
R71801:71827 LF.Logic <> excluded_middle_irrefutable thm
R71801:71827 LF.Logic <> excluded_middle_irrefutable thm

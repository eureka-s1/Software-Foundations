DIGEST 9890558aca075edf816485821c2a4068
FLF.IndPrinciples
R433:444 LF.ProofObjects <> <> lib
R630:633 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R627:629 Coq.Init.Datatypes <> nat ind
binder 623:623 <> P:1
R647:654 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R644:644 LF.IndPrinciples <> P:1 var
R655:655 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R686:694 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R667:669 Coq.Init.Datatypes <> nat ind
binder 663:663 <> n:2
R675:678 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R672:672 LF.IndPrinciples <> P:1 var
R674:674 LF.IndPrinciples <> n:2 var
R679:679 LF.IndPrinciples <> P:1 var
R682:682 Coq.Init.Datatypes <> S constr
R684:684 LF.IndPrinciples <> n:2 var
R706:708 Coq.Init.Datatypes <> nat ind
binder 702:702 <> n:3
R711:711 LF.IndPrinciples <> P:1 var
R713:713 LF.IndPrinciples <> n:3 var
R604:610 Coq.Init.Datatypes <> nat_ind scheme
prf 1364:1371 <> mul_0_r'
R1384:1386 Coq.Init.Datatypes <> nat ind
binder 1382:1382 <> n:4
R1396:1398 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1392:1394 LF.Basics <> ::nat_scope:x_'*'_x not
R1391:1391 LF.IndPrinciples <> n:4 var
R1417:1423 Coq.Init.Datatypes <> nat_ind scheme
R1417:1423 Coq.Init.Datatypes <> nat_ind scheme
prf 2714:2724 <> plus_one_r'
R2737:2739 Coq.Init.Datatypes <> nat ind
binder 2735:2735 <> n:5
R2749:2751 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2745:2747 LF.Basics <> ::nat_scope:x_'+'_x not
R2744:2744 LF.IndPrinciples <> n:5 var
R2752:2752 Coq.Init.Datatypes <> S constr
R2754:2754 LF.IndPrinciples <> n:5 var
R2772:2778 Coq.Init.Datatypes <> nat_ind scheme
R2772:2778 Coq.Init.Datatypes <> nat_ind scheme
ind 3914:3917 <> time
constr 3933:3935 <> day
constr 3941:3945 <> night
scheme 3914:3917 <> time_rect
scheme 3914:3917 <> time_ind
scheme 3914:3917 <> time_rec
scheme 3914:3917 <> time_sind
R3983:3986 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3979:3982 LF.IndPrinciples <> time ind
binder 3975:3975 <> P:8
R4002:4009 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3997:3997 LF.IndPrinciples <> P:8 var
R3999:4001 LF.IndPrinciples <> day constr
R4017:4024 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4010:4010 LF.IndPrinciples <> P:8 var
R4012:4016 LF.IndPrinciples <> night constr
R4036:4039 LF.IndPrinciples <> time ind
binder 4032:4032 <> t:9
R4042:4042 LF.IndPrinciples <> P:8 var
R4044:4044 LF.IndPrinciples <> t:9 var
R3955:3962 LF.IndPrinciples <> time_ind scheme
ind 4314:4316 <> rgb
constr 4332:4334 <> red
constr 4340:4344 <> green
constr 4350:4353 <> blue
scheme 4314:4316 <> rgb_rect
scheme 4314:4316 <> rgb_ind
scheme 4314:4316 <> rgb_rec
scheme 4314:4316 <> rgb_sind
R4362:4368 LF.IndPrinciples <> rgb_ind scheme
ind 4490:4496 <> natlist
constr 4512:4515 <> nnil
constr 4521:4525 <> ncons
R4532:4534 Coq.Init.Datatypes <> nat ind
binder 4528:4528 <> n:14
R4542:4548 LF.IndPrinciples <> natlist:12 ind
binder 4538:4538 <> l:15
scheme 4490:4496 <> natlist_rect
scheme 4490:4496 <> natlist_ind
scheme 4490:4496 <> natlist_rec
scheme 4490:4496 <> natlist_sind
R4593:4596 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4586:4592 LF.IndPrinciples <> natlist ind
binder 4582:4582 <> P:16
R4613:4621 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4607:4607 LF.IndPrinciples <> P:16 var
R4609:4612 LF.IndPrinciples <> nnil constr
R4622:4622 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4683:4691 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4635:4637 Coq.Init.Datatypes <> nat ind
binder 4631:4631 <> n:17
R4645:4651 LF.IndPrinciples <> natlist ind
binder 4641:4641 <> l:18
R4666:4669 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4663:4663 LF.IndPrinciples <> P:16 var
R4665:4665 LF.IndPrinciples <> l:18 var
R4670:4670 LF.IndPrinciples <> P:16 var
R4673:4677 LF.IndPrinciples <> ncons constr
R4679:4679 LF.IndPrinciples <> n:17 var
R4681:4681 LF.IndPrinciples <> l:18 var
R4703:4709 LF.IndPrinciples <> natlist ind
binder 4699:4699 <> l:19
R4712:4712 LF.IndPrinciples <> P:16 var
R4714:4714 LF.IndPrinciples <> l:19 var
R4559:4569 LF.IndPrinciples <> natlist_ind scheme
ind 5457:5464 <> natlist'
constr 5480:5484 <> nnil'
constr 5490:5494 <> nsnoc
R5501:5508 LF.IndPrinciples <> natlist':20 ind
binder 5497:5497 <> l:22
R5516:5518 Coq.Init.Datatypes <> nat ind
binder 5512:5512 <> n:23
scheme 5457:5464 <> natlist'_rect
scheme 5457:5464 <> natlist'_ind
scheme 5457:5464 <> natlist'_rec
scheme 5457:5464 <> natlist'_sind
R5676:5679 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5668:5675 LF.IndPrinciples <> natlist' ind
binder 5664:5664 <> P:24
R5697:5704 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5690:5690 LF.IndPrinciples <> P:24 var
R5692:5696 LF.IndPrinciples <> nnil' constr
R5705:5705 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5763:5771 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5717:5724 LF.IndPrinciples <> natlist' ind
binder 5713:5713 <> l:25
R5730:5733 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5727:5727 LF.IndPrinciples <> P:24 var
R5729:5729 LF.IndPrinciples <> l:25 var
R5745:5747 Coq.Init.Datatypes <> nat ind
binder 5741:5741 <> n:26
R5750:5750 LF.IndPrinciples <> P:24 var
R5753:5757 LF.IndPrinciples <> nsnoc constr
R5759:5759 LF.IndPrinciples <> l:25 var
R5761:5761 LF.IndPrinciples <> n:26 var
R5783:5790 LF.IndPrinciples <> natlist' ind
binder 5779:5779 <> n:27
R5793:5793 LF.IndPrinciples <> P:24 var
R5795:5795 LF.IndPrinciples <> n:27 var
R5640:5651 LF.IndPrinciples <> natlist'_ind scheme
ind 5953:5960 <> booltree
constr 5976:5983 <> bt_empty
constr 5989:5995 <> bt_leaf
constr 6012:6020 <> bt_branch
R6002:6005 LF.Basics <> bool ind
binder 5998:5998 <> b:30
R6027:6030 LF.Basics <> bool ind
binder 6023:6023 <> b:31
R6042:6049 LF.IndPrinciples <> booltree:28 ind
binder 6034:6035 <> t1:32
binder 6037:6038 <> t2:33
scheme 5953:5960 <> booltree_rect
scheme 5953:5960 <> booltree_ind
scheme 5953:5960 <> booltree_rec
scheme 5953:5960 <> booltree_sind
def 6443:6464 <> booltree_property_type
R6484:6487 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6476:6483 LF.IndPrinciples <> booltree ind
def 6506:6514 <> base_case
R6521:6542 LF.IndPrinciples <> booltree_property_type def
binder 6517:6517 <> P:34
R6555:6555 LF.IndPrinciples <> P:34 var
R6557:6564 LF.IndPrinciples <> bt_empty constr
def 6579:6587 <> leaf_case
R6594:6615 LF.IndPrinciples <> booltree_property_type def
binder 6590:6590 <> P:35
R6644:6647 LF.Basics <> bool ind
binder 6640:6640 <> b:36
R6650:6650 LF.IndPrinciples <> P:35 var
R6653:6659 LF.IndPrinciples <> bt_leaf constr
R6661:6661 LF.IndPrinciples <> b:36 var
def 6678:6688 <> branch_case
R6695:6716 LF.IndPrinciples <> booltree_property_type def
binder 6691:6691 <> P:37
R6746:6749 LF.Basics <> bool ind
binder 6742:6742 <> b:38
R6758:6765 LF.IndPrinciples <> booltree ind
binder 6753:6754 <> t1:39
R6773:6784 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6838:6838 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6769:6769 LF.IndPrinciples <> P:37 var
R6771:6772 LF.IndPrinciples <> t1:39 var
R6798:6805 LF.IndPrinciples <> booltree ind
binder 6793:6794 <> t2:40
R6813:6816 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6809:6809 LF.IndPrinciples <> P:37 var
R6811:6812 LF.IndPrinciples <> t2:40 var
R6817:6817 LF.IndPrinciples <> P:37 var
R6820:6828 LF.IndPrinciples <> bt_branch constr
R6830:6830 LF.IndPrinciples <> b:38 var
R6832:6833 LF.IndPrinciples <> t1:39 var
R6835:6836 LF.IndPrinciples <> t2:40 var
def 6854:6870 <> booltree_ind_type
R6889:6910 LF.IndPrinciples <> booltree_property_type def
binder 6885:6885 <> P:41
R6929:6936 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6918:6926 LF.IndPrinciples <> base_case def
R6928:6928 LF.IndPrinciples <> P:41 var
R6948:6955 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6937:6945 LF.IndPrinciples <> leaf_case def
R6947:6947 LF.IndPrinciples <> P:41 var
R6969:6976 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6956:6966 LF.IndPrinciples <> branch_case def
R6968:6968 LF.IndPrinciples <> P:41 var
R6989:6996 LF.IndPrinciples <> booltree ind
binder 6985:6985 <> b:42
R7000:7000 LF.IndPrinciples <> P:41 var
R7002:7002 LF.IndPrinciples <> b:42 var
prf 7339:7363 <> booltree_ind_type_correct
R7367:7383 LF.IndPrinciples <> booltree_ind_type def
R7402:7413 LF.IndPrinciples <> booltree_ind scheme
R7402:7413 LF.IndPrinciples <> booltree_ind scheme
ind 7810:7812 <> Toy
constr 7828:7831 <> Con1
constr 7848:7851 <> Con2
R7838:7841 LF.Basics <> bool ind
binder 7834:7834 <> b:45
R7858:7860 Coq.Init.Datatypes <> nat ind
binder 7854:7854 <> n:46
R7868:7870 LF.IndPrinciples <> Toy:43 ind
binder 7864:7864 <> t:47
scheme 7810:7812 <> Toy_rect
scheme 7810:7812 <> Toy_ind
scheme 7810:7812 <> Toy_rec
scheme 7810:7812 <> Toy_sind
prf 8243:8253 <> Toy_correct
R8257:8263 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R8267:8270 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 8264:8264 <> f:48
binder 8266:8266 <> g:49
R8285:8288 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8282:8284 LF.IndPrinciples <> Toy ind
binder 8278:8278 <> P:50
R8299:8299 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8324:8332 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8311:8314 LF.Basics <> bool ind
binder 8307:8307 <> b:51
R8317:8317 LF.IndPrinciples <> P:50 var
R8320:8320 LF.IndPrinciples <> f:48 var
R8322:8322 LF.IndPrinciples <> b:51 var
R8333:8333 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8378:8386 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8346:8348 Coq.Init.Datatypes <> nat ind
binder 8342:8342 <> n:52
R8356:8358 LF.IndPrinciples <> Toy ind
binder 8352:8352 <> t:53
R8365:8368 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8362:8362 LF.IndPrinciples <> P:50 var
R8364:8364 LF.IndPrinciples <> t:53 var
R8369:8369 LF.IndPrinciples <> P:50 var
R8372:8372 LF.IndPrinciples <> g:49 var
R8374:8374 LF.IndPrinciples <> n:52 var
R8376:8376 LF.IndPrinciples <> t:53 var
R8398:8400 LF.IndPrinciples <> Toy ind
binder 8394:8394 <> t:54
R8403:8403 LF.IndPrinciples <> P:50 var
R8405:8405 LF.IndPrinciples <> t:54 var
R8425:8428 LF.IndPrinciples <> Con1 constr
R8425:8428 LF.IndPrinciples <> Con1 constr
R8440:8443 LF.IndPrinciples <> Con2 constr
R8440:8443 LF.IndPrinciples <> Con2 constr
R8454:8460 LF.IndPrinciples <> Toy_ind scheme
R8454:8460 LF.IndPrinciples <> Toy_ind scheme
ind 9826:9829 <> tree
constr 9854:9857 <> leaf
constr 9871:9874 <> node
binder 9832:9832 <> X:55
R9864:9864 LF.IndPrinciples <> X:55 var
binder 9860:9860 <> x:58
R9885:9888 LF.IndPrinciples <> tree:56 ind
R9890:9890 LF.IndPrinciples <> X:55 var
binder 9877:9878 <> t1:59
binder 9880:9881 <> t2:60
scheme 9826:9829 <> tree_rect
scheme 9826:9829 <> tree_ind
scheme 9826:9829 <> tree_rec
scheme 9826:9829 <> tree_sind
R9900:9907 LF.IndPrinciples <> tree_ind scheme
ind 10842:10844 <> foo
constr 10873:10875 <> Bar
constr 10889:10891 <> Baz
constr 10905:10908 <> Quux
binder 10847:10847 <> X:61
binder 10849:10849 <> Y:62
R10882:10882 LF.IndPrinciples <> X:61 var
binder 10878:10878 <> x:65
R10898:10898 LF.IndPrinciples <> Y:62 var
binder 10894:10894 <> y:66
R10919:10922 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10916:10918 Coq.Init.Datatypes <> nat ind
R10923:10925 LF.IndPrinciples <> foo:63 ind
R10929:10929 LF.IndPrinciples <> Y:62 var
R10927:10927 LF.IndPrinciples <> X:61 var
binder 10911:10912 <> f1:67
scheme 10842:10844 <> foo_rect
scheme 10842:10844 <> foo_ind
scheme 10842:10844 <> foo_rec
scheme 10842:10844 <> foo_sind
R10940:10946 LF.IndPrinciples <> foo_ind scheme
ind 11067:11070 <> foo'
constr 11095:11096 <> C1
constr 11128:11129 <> C2
binder 11073:11073 <> X:68
R11103:11106 LF.Poly <> list ind
R11108:11108 LF.IndPrinciples <> X:68 var
binder 11099:11099 <> l:71
R11116:11119 LF.IndPrinciples <> foo':69 ind
R11121:11121 LF.IndPrinciples <> X:68 var
binder 11112:11112 <> f:72
scheme 11067:11070 <> foo'_rect
scheme 11067:11070 <> foo'_ind
scheme 11067:11070 <> foo'_rec
scheme 11067:11070 <> foo'_sind
R11590:11597 LF.IndPrinciples <> foo'_ind scheme
def 12491:12495 <> P_m0r
R12500:12502 Coq.Init.Datatypes <> nat ind
binder 12498:12498 <> n:73
R12522:12524 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12518:12520 LF.Basics <> ::nat_scope:x_'*'_x not
R12517:12517 LF.IndPrinciples <> n:73 var
def 12569:12574 <> P_m0r'
R12581:12584 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12578:12580 Coq.Init.Datatypes <> nat ind
binder 12599:12599 <> n:74
R12609:12611 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12605:12607 LF.Basics <> ::nat_scope:x_'*'_x not
R12604:12604 LF.IndPrinciples <> n:74 var
prf 12692:12700 <> mul_0_r''
R12713:12715 Coq.Init.Datatypes <> nat ind
binder 12711:12711 <> n:75
R12720:12724 LF.IndPrinciples <> P_m0r def
R12726:12726 LF.IndPrinciples <> n:75 var
R12744:12750 Coq.Init.Datatypes <> nat_ind scheme
R12744:12750 Coq.Init.Datatypes <> nat_ind scheme
R12876:12880 LF.IndPrinciples <> P_m0r def
R12897:12901 LF.IndPrinciples <> P_m0r def
prf 14807:14816 <> add_assoc'
R14835:14837 Coq.Init.Datatypes <> nat ind
binder 14827:14827 <> n:76
binder 14829:14829 <> m:77
binder 14831:14831 <> p:78
R14853:14855 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14843:14846 LF.Basics <> ::nat_scope:x_'+'_x not
R14852:14852 LF.Basics <> ::nat_scope:x_'+'_x not
R14842:14842 LF.IndPrinciples <> n:76 var
R14848:14850 LF.Basics <> ::nat_scope:x_'+'_x not
R14847:14847 LF.IndPrinciples <> m:77 var
R14851:14851 LF.IndPrinciples <> p:78 var
R14856:14856 LF.Basics <> ::nat_scope:x_'+'_x not
R14862:14865 LF.Basics <> ::nat_scope:x_'+'_x not
R14858:14860 LF.Basics <> ::nat_scope:x_'+'_x not
R14857:14857 LF.IndPrinciples <> n:76 var
R14861:14861 LF.IndPrinciples <> m:77 var
R14866:14866 LF.IndPrinciples <> p:78 var
prf 15462:15470 <> add_comm'
R15487:15489 Coq.Init.Datatypes <> nat ind
binder 15481:15481 <> n:79
binder 15483:15483 <> m:80
R15499:15501 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15495:15497 LF.Basics <> ::nat_scope:x_'+'_x not
R15494:15494 LF.IndPrinciples <> n:79 var
R15498:15498 LF.IndPrinciples <> m:80 var
R15503:15505 LF.Basics <> ::nat_scope:x_'+'_x not
R15502:15502 LF.IndPrinciples <> m:80 var
R15506:15506 LF.IndPrinciples <> n:79 var
R15578:15584 LF.Induction <> add_0_r thm
R15578:15584 LF.Induction <> add_0_r thm
R15578:15584 LF.Induction <> add_0_r thm
R15668:15676 LF.Induction <> plus_n_Sm thm
R15668:15676 LF.Induction <> plus_n_Sm thm
R15668:15676 LF.Induction <> plus_n_Sm thm
prf 16091:16100 <> add_comm''
R16117:16119 Coq.Init.Datatypes <> nat ind
binder 16111:16111 <> n:81
binder 16113:16113 <> m:82
R16129:16131 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16125:16127 LF.Basics <> ::nat_scope:x_'+'_x not
R16124:16124 LF.IndPrinciples <> n:81 var
R16128:16128 LF.IndPrinciples <> m:82 var
R16133:16135 LF.Basics <> ::nat_scope:x_'+'_x not
R16132:16132 LF.IndPrinciples <> m:82 var
R16136:16136 LF.IndPrinciples <> n:81 var
R16317:16323 LF.Induction <> add_0_r thm
R16317:16323 LF.Induction <> add_0_r thm
R16317:16323 LF.Induction <> add_0_r thm
R16397:16405 LF.Induction <> plus_n_Sm thm
R16397:16405 LF.Induction <> plus_n_Sm thm
R16397:16405 LF.Induction <> plus_n_Sm thm
R17259:17262 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17256:17258 Coq.Init.Datatypes <> nat ind
binder 17252:17252 <> P:83
R17276:17283 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17273:17273 LF.IndPrinciples <> P:83 var
R17284:17284 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17327:17335 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17296:17298 Coq.Init.Datatypes <> nat ind
binder 17292:17292 <> n:84
R17305:17308 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17301:17302 LF.ProofObjects <> ev ind
R17304:17304 LF.IndPrinciples <> n:84 var
R17312:17315 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17309:17309 LF.IndPrinciples <> P:83 var
R17311:17311 LF.IndPrinciples <> n:84 var
R17316:17316 LF.IndPrinciples <> P:83 var
R17319:17319 Coq.Init.Datatypes <> S constr
R17322:17322 Coq.Init.Datatypes <> S constr
R17324:17324 LF.IndPrinciples <> n:84 var
R17347:17349 Coq.Init.Datatypes <> nat ind
binder 17343:17343 <> n:85
R17356:17359 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17352:17353 LF.ProofObjects <> ev ind
R17355:17355 LF.IndPrinciples <> n:85 var
R17360:17360 LF.IndPrinciples <> P:83 var
R17362:17362 LF.IndPrinciples <> n:85 var
R17234:17239 LF.ProofObjects <> ev_ind scheme
ind 17969:17971 <> ev'
constr 17994:17998 <> ev'_0
constr 18012:18016 <> ev'_2
constr 18030:18036 <> ev'_sum
R17978:17981 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17975:17977 Coq.Init.Datatypes <> nat ind
R18002:18004 LF.IndPrinciples <> ev':86 ind
R18020:18022 LF.IndPrinciples <> ev':86 ind
binder 18038:18038 <> n:88
binder 18040:18040 <> m:89
R18048:18050 LF.IndPrinciples <> ev':86 ind
R18052:18052 LF.IndPrinciples <> n:88 var
binder 18043:18044 <> Hn:90
R18061:18063 LF.IndPrinciples <> ev':86 ind
R18065:18065 LF.IndPrinciples <> m:89 var
binder 18056:18057 <> Hm:91
R18070:18072 LF.IndPrinciples <> ev':86 ind
R18076:18078 LF.Basics <> ::nat_scope:x_'+'_x not
R18075:18075 LF.IndPrinciples <> n:88 var
R18079:18079 LF.IndPrinciples <> m:89 var
scheme 17969:17971 <> ev'_ind
scheme 17969:17971 <> ev'_sind
prf 18092:18097 <> ev_ev'
binder 18108:18108 <> n:92
R18115:18118 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18111:18112 LF.ProofObjects <> ev ind
R18114:18114 LF.IndPrinciples <> n:92 var
R18119:18121 LF.IndPrinciples <> ev' ind
R18123:18123 LF.IndPrinciples <> n:92 var
R18141:18146 LF.ProofObjects <> ev_ind scheme
R18141:18146 LF.ProofObjects <> ev_ind scheme
R18174:18178 LF.IndPrinciples <> ev'_0 constr
R18174:18178 LF.IndPrinciples <> ev'_0 constr
R18228:18234 LF.IndPrinciples <> ev'_sum constr
R18228:18234 LF.IndPrinciples <> ev'_sum constr
R18254:18258 LF.IndPrinciples <> ev'_2 constr
R18254:18258 LF.IndPrinciples <> ev'_2 constr
ind 18401:18403 <> le1
constr 18433:18437 <> le1_n
constr 18463:18467 <> le1_S
R18410:18413 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18407:18409 Coq.Init.Datatypes <> nat ind
R18417:18420 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18414:18416 Coq.Init.Datatypes <> nat ind
binder 18448:18448 <> n:95
R18451:18453 LF.IndPrinciples <> le1:93 ind
R18457:18457 LF.IndPrinciples <> n:95 var
R18455:18455 LF.IndPrinciples <> n:95 var
binder 18478:18478 <> n:96
binder 18480:18480 <> m:97
R18483:18483 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18491:18496 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18508:18508 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18484:18486 LF.IndPrinciples <> le1:93 ind
R18490:18490 LF.IndPrinciples <> m:97 var
R18488:18488 LF.IndPrinciples <> n:96 var
R18497:18499 LF.IndPrinciples <> le1:93 ind
R18504:18504 Coq.Init.Datatypes <> S constr
R18506:18506 LF.IndPrinciples <> m:97 var
R18501:18501 LF.IndPrinciples <> n:96 var
scheme 18401:18403 <> le1_ind
scheme 18401:18403 <> le1_sind
R18535:18537 LF.IndPrinciples <> le1 ind
not 18521:18521 <> :::x_'<=1'_x
ind 18840:18842 <> le2
constr 18873:18877 <> le2_n
constr 18893:18897 <> le2_S
R18847:18849 Coq.Init.Datatypes <> nat ind
binder 18845:18845 <> n:98
R18857:18860 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18854:18856 Coq.Init.Datatypes <> nat ind
R18881:18883 LF.IndPrinciples <> le2:99 ind
R18887:18887 LF.IndPrinciples <> n:98 var
R18885:18885 LF.IndPrinciples <> n:98 var
binder 18899:18899 <> m:101
R18906:18908 LF.IndPrinciples <> le2:99 ind
R18912:18912 LF.IndPrinciples <> m:101 var
R18910:18910 LF.IndPrinciples <> n:98 var
binder 18902:18902 <> H:102
R18917:18919 LF.IndPrinciples <> le2:99 ind
R18924:18924 Coq.Init.Datatypes <> S constr
R18926:18926 LF.IndPrinciples <> m:101 var
R18921:18921 LF.IndPrinciples <> n:98 var
scheme 18840:18842 <> le2_ind
scheme 18840:18842 <> le2_sind
R18954:18956 LF.IndPrinciples <> le2 ind
not 18940:18940 <> :::x_'<=2'_x
R19143:19146 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19140:19142 Coq.Init.Datatypes <> nat ind
R19150:19153 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19147:19149 Coq.Init.Datatypes <> nat ind
binder 19136:19136 <> P:103
R19164:19164 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19186:19194 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19176:19178 Coq.Init.Datatypes <> nat ind
binder 19172:19172 <> n:104
R19181:19181 LF.IndPrinciples <> P:103 var
R19185:19185 LF.IndPrinciples <> n:104 var
R19183:19183 LF.IndPrinciples <> n:104 var
R19195:19195 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19243:19251 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19209:19211 Coq.Init.Datatypes <> nat ind
binder 19203:19203 <> n:105
binder 19205:19205 <> m:106
R19221:19224 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19215:19219 LF.IndPrinciples <> :::x_'<=1'_x not
R19214:19214 LF.IndPrinciples <> n:105 var
R19220:19220 LF.IndPrinciples <> m:106 var
R19230:19233 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19225:19225 LF.IndPrinciples <> P:103 var
R19229:19229 LF.IndPrinciples <> m:106 var
R19227:19227 LF.IndPrinciples <> n:105 var
R19234:19234 LF.IndPrinciples <> P:103 var
R19239:19239 Coq.Init.Datatypes <> S constr
R19241:19241 LF.IndPrinciples <> m:106 var
R19236:19236 LF.IndPrinciples <> n:105 var
R19266:19268 Coq.Init.Datatypes <> nat ind
binder 19259:19259 <> n:107
binder 19261:19262 <> n0:108
R19279:19282 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19272:19276 LF.IndPrinciples <> :::x_'<=1'_x not
R19271:19271 LF.IndPrinciples <> n:107 var
R19277:19278 LF.IndPrinciples <> n0:108 var
R19283:19283 LF.IndPrinciples <> P:103 var
R19287:19288 LF.IndPrinciples <> n0:108 var
R19285:19285 LF.IndPrinciples <> n:107 var
R19117:19123 LF.IndPrinciples <> le1_ind scheme
R19322:19324 Coq.Init.Datatypes <> nat ind
binder 19318:19318 <> n:109
R19335:19338 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19332:19334 Coq.Init.Datatypes <> nat ind
binder 19328:19328 <> P:110
R19353:19360 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19350:19350 LF.IndPrinciples <> P:110 var
R19352:19352 LF.IndPrinciples <> n:109 var
R19361:19361 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19403:19411 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19373:19375 Coq.Init.Datatypes <> nat ind
binder 19369:19369 <> m:111
R19385:19388 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19379:19383 LF.IndPrinciples <> :::x_'<=2'_x not
R19378:19378 LF.IndPrinciples <> n:109 var
R19384:19384 LF.IndPrinciples <> m:111 var
R19392:19395 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19389:19389 LF.IndPrinciples <> P:110 var
R19391:19391 LF.IndPrinciples <> m:111 var
R19396:19396 LF.IndPrinciples <> P:110 var
R19399:19399 Coq.Init.Datatypes <> S constr
R19401:19401 LF.IndPrinciples <> m:111 var
R19424:19426 Coq.Init.Datatypes <> nat ind
binder 19419:19420 <> n0:112
R19437:19440 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19430:19434 LF.IndPrinciples <> :::x_'<=2'_x not
R19429:19429 LF.IndPrinciples <> n:109 var
R19435:19436 LF.IndPrinciples <> n0:112 var
R19441:19441 LF.IndPrinciples <> P:110 var
R19443:19444 LF.IndPrinciples <> n0:112 var
R19298:19304 LF.IndPrinciples <> le2_ind scheme
R28570:28573 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28567:28569 Coq.Init.Datatypes <> nat ind
binder 28563:28563 <> P:113
R28587:28594 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28584:28584 LF.IndPrinciples <> P:113 var
R28595:28595 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28626:28634 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28607:28609 Coq.Init.Datatypes <> nat ind
binder 28603:28603 <> n:114
R28615:28618 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28612:28612 LF.IndPrinciples <> P:113 var
R28614:28614 LF.IndPrinciples <> n:114 var
R28619:28619 LF.IndPrinciples <> P:113 var
R28622:28622 Coq.Init.Datatypes <> S constr
R28624:28624 LF.IndPrinciples <> n:114 var
R28646:28648 Coq.Init.Datatypes <> nat ind
binder 28642:28642 <> n:115
R28651:28651 LF.IndPrinciples <> P:113 var
R28653:28653 LF.IndPrinciples <> n:115 var
R28544:28550 Coq.Init.Datatypes <> nat_ind scheme
def 28895:28905 <> build_proof
R28924:28927 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28921:28923 Coq.Init.Datatypes <> nat ind
binder 28917:28917 <> P:116
R28951:28951 LF.IndPrinciples <> P:116 var
binder 28944:28947 <> evPO:117
R28984:28986 Coq.Init.Datatypes <> nat ind
binder 28980:28980 <> n:118
R28992:28995 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28989:28989 LF.IndPrinciples <> P:116 var
R28991:28991 LF.IndPrinciples <> n:118 var
R28996:28996 LF.IndPrinciples <> P:116 var
R28999:28999 Coq.Init.Datatypes <> S constr
R29001:29001 LF.IndPrinciples <> n:118 var
binder 28966:28969 <> evPS:119
R29019:29021 Coq.Init.Datatypes <> nat ind
binder 29015:29015 <> n:120
R29026:29026 LF.IndPrinciples <> P:116 var
R29028:29028 LF.IndPrinciples <> n:120 var
R29041:29041 LF.IndPrinciples <> n:120 var
R29057:29060 LF.IndPrinciples <> evPO:117 var
R29066:29066 Coq.Init.Datatypes <> S constr
R29073:29076 LF.IndPrinciples <> evPS:119 var
R29081:29091 LF.IndPrinciples <> build_proof:121 def
R29100:29103 LF.IndPrinciples <> evPS:119 var
R29095:29098 LF.IndPrinciples <> evPO:117 var
R29093:29093 LF.IndPrinciples <> P:116 var
def 29127:29138 <> nat_ind_tidy
R29143:29153 LF.IndPrinciples <> build_proof def
prf 30333:30339 <> even_ev
R30353:30355 Coq.Init.Datatypes <> nat ind
binder 30350:30350 <> n:123
R30371:30374 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30364:30366 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30358:30361 LF.Basics <> even def
R30363:30363 LF.IndPrinciples <> n:123 var
R30367:30370 LF.Basics <> true constr
R30375:30376 LF.ProofObjects <> ev ind
R30378:30378 LF.IndPrinciples <> n:123 var
R30421:30424 LF.ProofObjects <> ev_0 constr
R30421:30424 LF.ProofObjects <> ev_0 constr
R30504:30508 LF.ProofObjects <> ev_SS constr
R30504:30508 LF.ProofObjects <> ev_SS constr
def 31082:31089 <> nat_ind2
R31110:31113 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31107:31109 Coq.Init.Datatypes <> nat ind
binder 31103:31103 <> P:124
R31126:31131 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31123:31123 LF.IndPrinciples <> P:124 var
R31135:31140 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31132:31132 LF.IndPrinciples <> P:124 var
R31141:31141 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31175:31181 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31153:31155 Coq.Init.Datatypes <> nat ind
binder 31149:31149 <> n:125
R31161:31164 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31158:31158 LF.IndPrinciples <> P:124 var
R31160:31160 LF.IndPrinciples <> n:125 var
R31165:31165 LF.IndPrinciples <> P:124 var
R31168:31168 Coq.Init.Datatypes <> S constr
R31170:31170 Coq.Init.Datatypes <> S constr
R31172:31172 LF.IndPrinciples <> n:125 var
R31193:31195 Coq.Init.Datatypes <> nat ind
binder 31189:31189 <> n:126
R31199:31199 LF.IndPrinciples <> P:124 var
R31201:31201 LF.IndPrinciples <> n:126 var
binder 31214:31214 <> P:127
binder 31223:31224 <> P0:128
binder 31233:31234 <> P1:129
binder 31243:31245 <> PSS:130
R31265:31267 Coq.Init.Datatypes <> nat ind
binder 31263:31263 <> n:131
R31279:31279 LF.IndPrinciples <> n:131 var
R31316:31317 LF.IndPrinciples <> P0:128 var
R31349:31350 LF.IndPrinciples <> P1:129 var
R31377:31377 Coq.Init.Datatypes <> S constr
R31380:31380 Coq.Init.Datatypes <> S constr
R31389:31391 LF.IndPrinciples <> PSS:130 var
R31397:31397 LF.IndPrinciples <> f:132 var
prf 31778:31784 <> even_ev
binder 31795:31795 <> n:134
R31811:31814 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31804:31806 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31798:31801 LF.Basics <> even def
R31803:31803 LF.IndPrinciples <> n:134 var
R31807:31810 LF.Basics <> true constr
R31815:31816 LF.ProofObjects <> ev ind
R31818:31818 LF.IndPrinciples <> n:134 var
R31874:31881 LF.IndPrinciples <> nat_ind2 def
R31874:31881 LF.IndPrinciples <> nat_ind2 def
R31908:31911 LF.ProofObjects <> ev_0 constr
R31908:31911 LF.ProofObjects <> ev_0 constr
R31973:31977 LF.ProofObjects <> ev_SS constr
R31973:31977 LF.ProofObjects <> ev_SS constr
R32257:32260 LF.Poly <> pair constr
R32266:32269 LF.Poly <> pair constr
not 32232:32232 <> ::core_scope:'('_x_','_x_','_'..'_','_x_')'
ind 32307:32312 <> t_tree
constr 32337:32342 <> t_leaf
constr 32346:32353 <> t_branch
binder 32315:32315 <> X:135
R32357:32357 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32381:32385 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32370:32372 LF.Poly <> ::type_scope:x_'*'_x not
R32366:32368 LF.Poly <> ::type_scope:x_'*'_x not
R32358:32363 LF.IndPrinciples <> t_tree:136 ind
R32365:32365 LF.IndPrinciples <> X:135 var
R32369:32369 LF.IndPrinciples <> X:135 var
R32373:32378 LF.IndPrinciples <> t_tree:136 ind
R32380:32380 LF.IndPrinciples <> X:135 var
R32386:32391 LF.IndPrinciples <> t_tree:136 ind
R32393:32393 LF.IndPrinciples <> X:135 var
scheme 32307:32312 <> t_tree_rect
scheme 32307:32312 <> t_tree_ind
scheme 32307:32312 <> t_tree_rec
scheme 32307:32312 <> t_tree_sind
R32407:32412 LF.IndPrinciples <> t_leaf constr
R32407:32412 LF.IndPrinciples <> t_leaf constr
R32429:32436 LF.IndPrinciples <> t_branch constr
R32429:32436 LF.IndPrinciples <> t_branch constr
R32618:32627 LF.IndPrinciples <> t_tree_ind scheme
def 32765:32771 <> reflect
binder 32774:32774 <> X:138
R32789:32794 LF.IndPrinciples <> t_tree ind
R32796:32796 LF.IndPrinciples <> X:138 var
binder 32785:32785 <> t:139
R32801:32806 LF.IndPrinciples <> t_tree ind
R32808:32808 LF.IndPrinciples <> X:138 var
R32821:32821 LF.IndPrinciples <> t:139 var
R32832:32837 LF.IndPrinciples <> t_leaf constr
R32842:32847 LF.IndPrinciples <> t_leaf constr
R32853:32860 LF.IndPrinciples <> t_branch constr
R32862:32862 LF.IndPrinciples <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32864:32865 LF.IndPrinciples <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32867:32868 LF.IndPrinciples <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32870:32870 LF.IndPrinciples <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32875:32882 LF.IndPrinciples <> t_branch constr
R32884:32884 LF.IndPrinciples <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32894:32895 LF.IndPrinciples <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32897:32898 LF.IndPrinciples <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32908:32908 LF.IndPrinciples <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32885:32891 LF.IndPrinciples <> reflect:140 def
R32899:32905 LF.IndPrinciples <> reflect:140 def
prf 32926:32943 <> reflect_involution
binder 32955:32955 <> X:142
R32970:32975 LF.IndPrinciples <> t_tree ind
R32977:32977 LF.IndPrinciples <> X:142 var
binder 32966:32966 <> t:143
R33004:33006 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32985:32991 LF.IndPrinciples <> reflect def
R32994:33000 LF.IndPrinciples <> reflect def
R33002:33002 LF.IndPrinciples <> t:143 var
R33007:33007 LF.IndPrinciples <> t:143 var
def 33471:33492 <> better_t_tree_ind_type
binder 33514:33514 <> X:144
R33537:33540 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33529:33534 LF.IndPrinciples <> t_tree ind
R33536:33536 LF.IndPrinciples <> X:144 var
binder 33525:33525 <> P:145
R33558:33563 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33550:33550 LF.IndPrinciples <> P:145 var
R33552:33557 LF.IndPrinciples <> t_leaf constr
R33564:33564 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33672:33682 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33576:33576 LF.IndPrinciples <> X:144 var
binder 33572:33572 <> v:146
R33595:33600 LF.IndPrinciples <> t_tree ind
R33602:33602 LF.IndPrinciples <> X:144 var
binder 33591:33591 <> l:147
R33608:33616 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33605:33605 LF.IndPrinciples <> P:145 var
R33607:33607 LF.IndPrinciples <> l:147 var
R33628:33633 LF.IndPrinciples <> t_tree ind
R33635:33635 LF.IndPrinciples <> X:144 var
binder 33624:33624 <> r:148
R33641:33649 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33638:33638 LF.IndPrinciples <> P:145 var
R33640:33640 LF.IndPrinciples <> r:148 var
R33650:33650 LF.IndPrinciples <> P:145 var
R33653:33660 LF.IndPrinciples <> t_branch constr
R33662:33662 LF.IndPrinciples <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33664:33665 LF.IndPrinciples <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33667:33668 LF.IndPrinciples <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33670:33670 LF.IndPrinciples <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33663:33663 LF.IndPrinciples <> l:147 var
R33666:33666 LF.IndPrinciples <> v:146 var
R33669:33669 LF.IndPrinciples <> r:148 var
R33695:33700 LF.IndPrinciples <> t_tree ind
R33702:33702 LF.IndPrinciples <> X:144 var
binder 33691:33691 <> t:149
R33706:33706 LF.IndPrinciples <> P:145 var
R33708:33708 LF.IndPrinciples <> t:149 var
def 33853:33869 <> better_t_tree_ind
R33873:33894 LF.IndPrinciples <> better_t_tree_ind_type def
binder 33905:33905 <> X:150
binder 33914:33914 <> P:151
binder 33923:33928 <> P_leaf:152
binder 33937:33944 <> P_branch:153
R33964:33969 LF.IndPrinciples <> t_tree ind
R33971:33971 LF.IndPrinciples <> X:150 var
binder 33960:33960 <> t:154
R33989:33989 LF.IndPrinciples <> t:154 var
R34004:34009 LF.IndPrinciples <> t_leaf constr
R34014:34019 LF.IndPrinciples <> P_leaf:152 var
R34029:34036 LF.IndPrinciples <> t_branch constr
R34038:34038 LF.IndPrinciples <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34040:34041 LF.IndPrinciples <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34043:34044 LF.IndPrinciples <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34046:34046 LF.IndPrinciples <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R34051:34058 LF.IndPrinciples <> P_branch:153 var
R34065:34065 LF.IndPrinciples <> f:155 var
R34073:34073 LF.IndPrinciples <> f:155 var
prf 34515:34532 <> reflect_involution
binder 34544:34544 <> X:157
R34559:34564 LF.IndPrinciples <> t_tree ind
R34566:34566 LF.IndPrinciples <> X:157 var
binder 34555:34555 <> t:158
R34593:34595 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34574:34580 LF.IndPrinciples <> reflect def
R34583:34589 LF.IndPrinciples <> reflect def
R34591:34591 LF.IndPrinciples <> t:158 var
R34596:34596 LF.IndPrinciples <> t:158 var
R34643:34659 LF.IndPrinciples <> better_t_tree_ind def
R34643:34659 LF.IndPrinciples <> better_t_tree_ind def

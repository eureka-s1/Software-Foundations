DIGEST 8b67fe5e938ea5cf41dedd4691fa92e4
FLF.Imp
R897:900 Coq.Bool.Bool <> <> lib
R927:934 Coq.Init.Nat <> <> lib
R961:965 Coq.Arith.Arith <> <> lib
R992:996 Coq.Arith.EqNat <> <> lib
R1006:1008 Coq.Arith.PeanoNat Nat <> mod
R1035:1037 Coq.micromega.Lia <> <> lib
R1064:1067 Coq.Lists.List <> <> lib
R1077:1089 Coq.Lists.List ListNotations <> mod
R1116:1129 Coq.Strings.String <> <> lib
R1155:1158 LF.Maps <> <> lib
mod 1671:1674 <> AExp
ind 1791:1794 AExp aexp
constr 1810:1813 AExp ANum
constr 1829:1833 AExp APlus
constr 1854:1859 AExp AMinus
constr 1880:1884 AExp AMult
R1820:1822 Coq.Init.Datatypes <> nat ind
binder 1816:1816 <> n:3
R1844:1847 LF.Imp <> aexp:1 ind
binder 1836:1837 <> a1:4
binder 1839:1840 <> a2:5
R1870:1873 LF.Imp <> aexp:1 ind
binder 1862:1863 <> a1:6
binder 1865:1866 <> a2:7
R1895:1898 LF.Imp <> aexp:1 ind
binder 1887:1888 <> a1:8
binder 1890:1891 <> a2:9
scheme 1791:1794 AExp aexp_rect
scheme 1791:1794 AExp aexp_ind
scheme 1791:1794 AExp aexp_rec
scheme 1791:1794 AExp aexp_sind
ind 1913:1916 AExp bexp
constr 1932:1936 AExp BTrue
constr 1942:1947 AExp BFalse
constr 1953:1955 AExp BEq
constr 1976:1979 AExp BNeq
constr 2000:2002 AExp BLe
constr 2023:2025 AExp BGt
constr 2046:2049 AExp BNot
constr 2066:2069 AExp BAnd
R1966:1969 LF.Imp AExp aexp ind
binder 1958:1959 <> a1:12
binder 1961:1962 <> a2:13
R1990:1993 LF.Imp AExp aexp ind
binder 1982:1983 <> a1:14
binder 1985:1986 <> a2:15
R2013:2016 LF.Imp AExp aexp ind
binder 2005:2006 <> a1:16
binder 2008:2009 <> a2:17
R2036:2039 LF.Imp AExp aexp ind
binder 2028:2029 <> a1:18
binder 2031:2032 <> a2:19
R2056:2059 LF.Imp <> bexp:10 ind
binder 2052:2052 <> b:20
R2080:2083 LF.Imp <> bexp:10 ind
binder 2072:2073 <> b1:21
binder 2075:2076 <> b2:22
scheme 1913:1916 AExp bexp_rect
scheme 1913:1916 AExp bexp_ind
scheme 1913:1916 AExp bexp_rec
scheme 1913:1916 AExp bexp_sind
def 4731:4735 AExp aeval
R4742:4745 LF.Imp AExp aexp ind
binder 4738:4738 <> a:23
R4750:4752 Coq.Init.Datatypes <> nat ind
R4765:4765 LF.Imp <> a:23 var
R4776:4779 LF.Imp AExp ANum constr
R4792:4796 LF.Imp AExp APlus constr
R4808:4808 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R4817:4821 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R4830:4830 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R4809:4813 LF.Imp <> aeval:24 def
R4822:4826 LF.Imp <> aeval:24 def
R4836:4841 LF.Imp AExp AMinus constr
R4852:4852 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R4861:4865 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R4874:4874 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R4853:4857 LF.Imp <> aeval:24 def
R4866:4870 LF.Imp <> aeval:24 def
R4880:4884 LF.Imp AExp AMult constr
R4896:4896 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R4905:4909 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R4918:4918 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R4897:4901 LF.Imp <> aeval:24 def
R4910:4914 LF.Imp <> aeval:24 def
def 4936:4946 AExp test_aeval1
R4982:4984 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4951:4955 LF.Imp AExp aeval def
R4958:4962 LF.Imp AExp APlus constr
R4965:4968 LF.Imp AExp ANum constr
R4974:4977 LF.Imp AExp ANum constr
def 5092:5096 AExp beval
R5103:5106 LF.Imp AExp bexp ind
binder 5099:5099 <> b:26
R5111:5114 Coq.Init.Datatypes <> bool ind
R5127:5127 LF.Imp <> b:26 var
R5138:5142 LF.Imp AExp BTrue constr
R5153:5156 Coq.Init.Datatypes <> true constr
R5162:5167 LF.Imp AExp BFalse constr
R5177:5181 Coq.Init.Datatypes <> false constr
R5187:5189 LF.Imp AExp BEq constr
R5202:5202 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R5211:5216 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R5225:5225 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R5203:5207 LF.Imp AExp aeval def
R5217:5221 LF.Imp AExp aeval def
R5231:5234 LF.Imp AExp BNeq constr
R5246:5249 Coq.Init.Datatypes <> negb def
R5252:5252 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R5261:5266 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R5275:5275 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R5253:5257 LF.Imp AExp aeval def
R5267:5271 LF.Imp AExp aeval def
R5282:5284 LF.Imp AExp BLe constr
R5297:5297 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R5306:5312 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R5321:5321 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R5298:5302 LF.Imp AExp aeval def
R5313:5317 LF.Imp AExp aeval def
R5327:5329 LF.Imp AExp BGt constr
R5342:5345 Coq.Init.Datatypes <> negb def
R5348:5348 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R5357:5363 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R5372:5372 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R5349:5353 LF.Imp AExp aeval def
R5364:5368 LF.Imp AExp aeval def
R5379:5382 LF.Imp AExp BNot constr
R5394:5397 Coq.Init.Datatypes <> negb def
R5400:5404 LF.Imp <> beval:27 def
R5414:5417 LF.Imp AExp BAnd constr
R5429:5432 Coq.Init.Datatypes <> andb def
R5446:5450 LF.Imp <> beval:27 def
R5435:5439 LF.Imp <> beval:27 def
def 5861:5874 AExp optimize_0plus
R5879:5882 LF.Imp AExp aexp ind
binder 5877:5877 <> a:29
R5887:5890 LF.Imp AExp aexp ind
R5903:5903 LF.Imp <> a:29 var
R5914:5917 LF.Imp AExp ANum constr
R5924:5927 LF.Imp AExp ANum constr
R5935:5939 LF.Imp AExp APlus constr
R5942:5945 LF.Imp AExp ANum constr
R5956:5969 LF.Imp <> optimize_0plus:30 def
R5978:5982 LF.Imp AExp APlus constr
R5994:5998 LF.Imp AExp APlus constr
R6002:6015 LF.Imp <> optimize_0plus:30 def
R6022:6035 LF.Imp <> optimize_0plus:30 def
R6045:6050 LF.Imp AExp AMinus constr
R6061:6066 LF.Imp AExp AMinus constr
R6069:6082 LF.Imp <> optimize_0plus:30 def
R6089:6102 LF.Imp <> optimize_0plus:30 def
R6112:6116 LF.Imp AExp AMult constr
R6128:6132 LF.Imp AExp AMult constr
R6136:6149 LF.Imp <> optimize_0plus:30 def
R6156:6169 LF.Imp <> optimize_0plus:30 def
def 6337:6355 AExp test_optimize_0plus
R6489:6493 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6360:6373 LF.Imp AExp optimize_0plus def
R6376:6380 LF.Imp AExp APlus constr
R6383:6386 LF.Imp AExp ANum constr
R6416:6420 LF.Imp AExp APlus constr
R6423:6426 LF.Imp AExp ANum constr
R6463:6467 LF.Imp AExp APlus constr
R6470:6473 LF.Imp AExp ANum constr
R6479:6482 LF.Imp AExp ANum constr
R6494:6498 LF.Imp AExp APlus constr
R6501:6504 LF.Imp AExp ANum constr
R6510:6513 LF.Imp AExp ANum constr
prf 6739:6758 AExp optimize_0plus_sound
binder 6768:6768 <> a:32
R6797:6799 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6773:6777 LF.Imp AExp aeval def
R6780:6793 LF.Imp AExp optimize_0plus def
R6795:6795 LF.Imp <> a:32 var
R6800:6804 LF.Imp AExp aeval def
R6806:6806 LF.Imp <> a:32 var
prf 8946:8951 AExp silly1
binder 8963:8963 <> P:33
R8975:8978 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8974:8974 LF.Imp <> P:33 var
R8979:8979 LF.Imp <> P:33 var
prf 9149:9154 AExp silly2
binder 9165:9166 <> ae:34
R9177:9179 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9169:9173 LF.Imp AExp aeval def
R9175:9176 LF.Imp <> ae:34 var
R9180:9184 LF.Imp AExp aeval def
R9186:9187 LF.Imp <> ae:34 var
prf 9841:9843 AExp foo
binder 9854:9854 <> n:35
R9864:9866 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9858:9862 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R9863:9863 LF.Imp <> n:35 var
R9867:9870 Coq.Init.Datatypes <> true constr
prf 10117:10120 AExp foo'
binder 10131:10131 <> n:36
R10141:10143 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10135:10139 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R10140:10140 LF.Imp <> n:36 var
R10144:10147 Coq.Init.Datatypes <> true constr
prf 10484:10504 AExp optimize_0plus_sound'
binder 10514:10514 <> a:37
R10543:10545 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10519:10523 LF.Imp AExp aeval def
R10526:10539 LF.Imp AExp optimize_0plus def
R10541:10541 LF.Imp <> a:37 var
R10546:10550 LF.Imp AExp aeval def
R10552:10552 LF.Imp <> a:37 var
prf 13382:13403 AExp optimize_0plus_sound''
binder 13413:13413 <> a:38
R13442:13444 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13418:13422 LF.Imp AExp aeval def
R13425:13438 LF.Imp AExp optimize_0plus def
R13440:13440 LF.Imp <> a:38 var
R13445:13449 LF.Imp AExp aeval def
R13451:13451 LF.Imp <> a:38 var
prf 14879:14882 AExp In10
R14886:14887 Coq.Lists.List <> In def
R14892:14892 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14894:14894 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14896:14896 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14898:14898 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14900:14900 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14902:14902 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14904:14904 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14906:14906 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14908:14908 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14910:14910 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14913:14913 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
prf 15172:15176 AExp In10'
R15180:15181 Coq.Lists.List <> In def
R15186:15186 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15188:15188 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15190:15190 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15192:15192 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15194:15194 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15196:15196 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15198:15198 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15200:15200 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15202:15202 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15204:15204 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15207:15207 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
prf 15531:15541 AExp repeat_loop
R15559:15561 Coq.Init.Datatypes <> nat ind
binder 15553:15553 <> m:39
binder 15555:15555 <> n:40
R15572:15574 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15568:15570 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R15567:15567 LF.Imp <> m:39 var
R15571:15571 LF.Imp <> n:40 var
R15576:15578 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R15575:15575 LF.Imp <> n:40 var
R15579:15579 LF.Imp <> m:39 var
R15835:15846 Coq.Arith.PeanoNat Nat add_comm thm
R15835:15846 Coq.Arith.PeanoNat Nat add_comm thm
R15835:15846 Coq.Arith.PeanoNat Nat add_comm thm
def 16878:16893 AExp optimize_0plus_b
R16900:16903 LF.Imp AExp bexp ind
binder 16896:16896 <> b:41
R16908:16911 LF.Imp AExp bexp ind
R16924:16924 LF.Imp <> b:41 var
R16935:16939 LF.Imp AExp BTrue constr
R16944:16948 LF.Imp AExp BTrue constr
R16954:16959 LF.Imp AExp BFalse constr
R16964:16969 LF.Imp AExp BFalse constr
R16975:16977 LF.Imp AExp BEq constr
R16988:16990 LF.Imp AExp BEq constr
R16993:17006 LF.Imp AExp optimize_0plus def
R17013:17026 LF.Imp AExp optimize_0plus def
R17036:17039 LF.Imp AExp BNeq constr
R17050:17053 LF.Imp AExp BNeq constr
R17056:17069 LF.Imp AExp optimize_0plus def
R17076:17089 LF.Imp AExp optimize_0plus def
R17099:17101 LF.Imp AExp BLe constr
R17112:17114 LF.Imp AExp BLe constr
R17117:17130 LF.Imp AExp optimize_0plus def
R17137:17150 LF.Imp AExp optimize_0plus def
R17160:17162 LF.Imp AExp BGt constr
R17173:17175 LF.Imp AExp BGt constr
R17178:17191 LF.Imp AExp optimize_0plus def
R17198:17211 LF.Imp AExp optimize_0plus def
R17221:17224 LF.Imp AExp BNot constr
R17231:17234 LF.Imp AExp BNot constr
R17237:17252 LF.Imp <> optimize_0plus_b:42 def
R17254:17254 LF.Imp <> b:41 var
R17261:17264 LF.Imp AExp BAnd constr
R17275:17278 LF.Imp AExp BAnd constr
R17281:17296 LF.Imp <> optimize_0plus_b:42 def
R17303:17318 LF.Imp <> optimize_0plus_b:42 def
def 17340:17361 AExp optimize_0plus_b_test1
R17430:17452 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17481:17481 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17366:17381 LF.Imp AExp optimize_0plus_b def
R17384:17387 LF.Imp AExp BNot constr
R17390:17392 LF.Imp AExp BGt constr
R17395:17399 LF.Imp AExp APlus constr
R17402:17405 LF.Imp AExp ANum constr
R17411:17414 LF.Imp AExp ANum constr
R17421:17424 LF.Imp AExp ANum constr
R17453:17456 LF.Imp AExp BNot constr
R17459:17461 LF.Imp AExp BGt constr
R17464:17467 LF.Imp AExp ANum constr
R17473:17476 LF.Imp AExp ANum constr
def 17518:17539 AExp optimize_0plus_b_test2
R17614:17636 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17671:17671 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17544:17559 LF.Imp AExp optimize_0plus_b def
R17562:17565 LF.Imp AExp BAnd constr
R17568:17570 LF.Imp AExp BLe constr
R17573:17577 LF.Imp AExp APlus constr
R17580:17583 LF.Imp AExp ANum constr
R17589:17592 LF.Imp AExp ANum constr
R17599:17602 LF.Imp AExp ANum constr
R17608:17612 LF.Imp AExp BTrue constr
R17637:17640 LF.Imp AExp BAnd constr
R17643:17645 LF.Imp AExp BLe constr
R17648:17651 LF.Imp AExp ANum constr
R17657:17660 LF.Imp AExp ANum constr
R17666:17670 LF.Imp AExp BTrue constr
prf 17710:17731 AExp optimize_0plus_b_sound
binder 17742:17742 <> b:44
R17773:17775 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17747:17751 LF.Imp AExp beval def
R17754:17769 LF.Imp AExp optimize_0plus_b def
R17771:17771 LF.Imp <> b:44 var
R17776:17780 LF.Imp AExp beval def
R17782:17782 LF.Imp <> b:44 var
R17838:17853 LF.Imp AExp optimize_0plus_b def
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17938:17953 LF.Imp AExp optimize_0plus_b def
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17887:17906 LF.Imp AExp optimize_0plus_sound thm
R17938:17953 LF.Imp AExp optimize_0plus_b def
R17938:17953 LF.Imp AExp optimize_0plus_b def
prf 20259:20273 AExp invert_example1
R20291:20293 Coq.Init.Datatypes <> nat ind
binder 20284:20284 <> a:45
binder 20286:20286 <> b:46
binder 20288:20288 <> c:47
R20311:20314 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20303:20305 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20297:20297 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R20299:20300 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R20302:20302 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R20298:20298 LF.Imp <> a:45 var
R20301:20301 LF.Imp <> b:46 var
R20306:20306 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R20308:20308 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R20310:20310 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R20307:20307 LF.Imp <> a:45 var
R20309:20309 LF.Imp <> c:47 var
R20316:20318 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20315:20315 LF.Imp <> b:46 var
R20319:20319 LF.Imp <> c:47 var
def 21146:21169 AExp silly_presburger_example
binder 21180:21180 <> m:48
binder 21182:21182 <> n:49
binder 21184:21184 <> o:50
binder 21186:21186 <> p:51
R21222:21227 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21205:21208 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R21196:21199 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R21192:21194 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R21191:21191 LF.Imp <> m:48 var
R21195:21195 LF.Imp <> n:49 var
R21201:21203 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R21200:21200 LF.Imp <> n:49 var
R21204:21204 LF.Imp <> o:50 var
R21214:21216 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21210:21212 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R21209:21209 LF.Imp <> o:50 var
R21218:21220 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R21217:21217 LF.Imp <> p:51 var
R21229:21232 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R21228:21228 LF.Imp <> m:48 var
R21233:21233 LF.Imp <> p:51 var
def 21272:21284 AExp add_comm__lia
binder 21295:21295 <> m:52
binder 21297:21297 <> n:53
R21309:21311 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21305:21307 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R21304:21304 LF.Imp <> m:52 var
R21308:21308 LF.Imp <> n:53 var
R21313:21315 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R21312:21312 LF.Imp <> n:53 var
R21316:21316 LF.Imp <> m:52 var
def 21355:21368 AExp add_assoc__lia
binder 21379:21379 <> m:54
binder 21381:21381 <> n:55
binder 21383:21383 <> p:56
R21401:21403 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21391:21394 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R21400:21400 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R21390:21390 LF.Imp <> m:54 var
R21396:21398 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R21395:21395 LF.Imp <> n:55 var
R21399:21399 LF.Imp <> p:56 var
R21409:21411 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R21405:21407 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R21404:21404 LF.Imp <> m:54 var
R21408:21408 LF.Imp <> n:55 var
R21412:21412 LF.Imp <> p:56 var
mod 23343:23358 <> AExp.aevalR_first_try
ind 23372:23377 AExp.aevalR_first_try aevalR
constr 23408:23413 AExp.aevalR_first_try E_ANum
constr 23455:23461 AExp.aevalR_first_try E_APlus
constr 23579:23586 AExp.aevalR_first_try E_AMinus
constr 23705:23711 AExp.aevalR_first_try E_AMult
R23385:23388 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23381:23384 LF.Imp AExp aexp ind
R23392:23395 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23389:23391 Coq.Init.Datatypes <> nat ind
R23420:23422 Coq.Init.Datatypes <> nat ind
binder 23416:23416 <> n:59
R23433:23438 LF.Imp <> aevalR:57 ind
R23449:23449 LF.Imp <> n:59 var
R23441:23444 LF.Imp AExp ANum constr
R23446:23446 LF.Imp <> n:59 var
R23472:23475 LF.Imp AExp aexp ind
binder 23464:23465 <> e1:60
binder 23467:23468 <> e2:61
R23487:23489 Coq.Init.Datatypes <> nat ind
binder 23479:23480 <> n1:62
binder 23482:23483 <> n2:63
R23512:23521 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23500:23505 LF.Imp <> aevalR:57 ind
R23510:23511 LF.Imp <> n1:62 var
R23507:23508 LF.Imp <> e1:60 var
R23534:23543 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23522:23527 LF.Imp <> aevalR:57 ind
R23532:23533 LF.Imp <> n2:63 var
R23529:23530 LF.Imp <> e2:61 var
R23544:23549 LF.Imp <> aevalR:57 ind
R23568:23570 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R23566:23567 LF.Imp <> n1:62 var
R23571:23572 LF.Imp <> n2:63 var
R23552:23556 LF.Imp AExp APlus constr
R23558:23559 LF.Imp <> e1:60 var
R23561:23562 LF.Imp <> e2:61 var
R23597:23600 LF.Imp AExp aexp ind
binder 23589:23590 <> e1:64
binder 23592:23593 <> e2:65
R23612:23614 Coq.Init.Datatypes <> nat ind
binder 23604:23605 <> n1:66
binder 23607:23608 <> n2:67
R23637:23646 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23625:23630 LF.Imp <> aevalR:57 ind
R23635:23636 LF.Imp <> n1:66 var
R23632:23633 LF.Imp <> e1:64 var
R23659:23668 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23647:23652 LF.Imp <> aevalR:57 ind
R23657:23658 LF.Imp <> n2:67 var
R23654:23655 LF.Imp <> e2:65 var
R23669:23674 LF.Imp <> aevalR:57 ind
R23694:23696 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R23692:23693 LF.Imp <> n1:66 var
R23697:23698 LF.Imp <> n2:67 var
R23677:23682 LF.Imp AExp AMinus constr
R23684:23685 LF.Imp <> e1:64 var
R23687:23688 LF.Imp <> e2:65 var
R23722:23725 LF.Imp AExp aexp ind
binder 23714:23715 <> e1:68
binder 23717:23718 <> e2:69
R23737:23739 Coq.Init.Datatypes <> nat ind
binder 23729:23730 <> n1:70
binder 23732:23733 <> n2:71
R23762:23771 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23750:23755 LF.Imp <> aevalR:57 ind
R23760:23761 LF.Imp <> n1:70 var
R23757:23758 LF.Imp <> e1:68 var
R23784:23793 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23772:23777 LF.Imp <> aevalR:57 ind
R23782:23783 LF.Imp <> n2:71 var
R23779:23780 LF.Imp <> e2:69 var
R23794:23799 LF.Imp <> aevalR:57 ind
R23818:23820 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R23816:23817 LF.Imp <> n1:70 var
R23821:23822 LF.Imp <> n2:71 var
R23802:23806 LF.Imp AExp AMult constr
R23808:23809 LF.Imp <> e1:68 var
R23811:23812 LF.Imp <> e2:69 var
scheme 23372:23377 AExp.aevalR_first_try aevalR_ind
scheme 23372:23377 AExp.aevalR_first_try aevalR_sind
mod 23834:23848 <> AExp.aevalR_first_try.HypothesisNames
ind 24015:24020 AExp.aevalR_first_try.HypothesisNames aevalR
constr 24051:24056 AExp.aevalR_first_try.HypothesisNames E_ANum
constr 24098:24104 AExp.aevalR_first_try.HypothesisNames E_APlus
constr 24230:24237 AExp.aevalR_first_try.HypothesisNames E_AMinus
constr 24364:24370 AExp.aevalR_first_try.HypothesisNames E_AMult
R24028:24031 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24024:24027 LF.Imp AExp aexp ind
R24035:24038 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24032:24034 Coq.Init.Datatypes <> nat ind
R24063:24065 Coq.Init.Datatypes <> nat ind
binder 24059:24059 <> n:74
R24076:24081 LF.Imp <> aevalR:72 ind
R24092:24092 LF.Imp <> n:74 var
R24084:24087 LF.Imp AExp ANum constr
R24089:24089 LF.Imp <> n:74 var
R24115:24118 LF.Imp AExp aexp ind
binder 24107:24108 <> e1:75
binder 24110:24111 <> e2:76
R24130:24132 Coq.Init.Datatypes <> nat ind
binder 24122:24123 <> n1:77
binder 24125:24126 <> n2:78
R24147:24152 LF.Imp <> aevalR:72 ind
R24157:24158 LF.Imp <> n1:77 var
R24154:24155 LF.Imp <> e1:75 var
binder 24142:24143 <> H1:79
R24173:24178 LF.Imp <> aevalR:72 ind
R24183:24184 LF.Imp <> n2:78 var
R24180:24181 LF.Imp <> e2:76 var
binder 24168:24169 <> H2:80
R24195:24200 LF.Imp <> aevalR:72 ind
R24219:24221 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R24217:24218 LF.Imp <> n1:77 var
R24222:24223 LF.Imp <> n2:78 var
R24203:24207 LF.Imp AExp APlus constr
R24209:24210 LF.Imp <> e1:75 var
R24212:24213 LF.Imp <> e2:76 var
R24248:24251 LF.Imp AExp aexp ind
binder 24240:24241 <> e1:81
binder 24243:24244 <> e2:82
R24263:24265 Coq.Init.Datatypes <> nat ind
binder 24255:24256 <> n1:83
binder 24258:24259 <> n2:84
R24280:24285 LF.Imp <> aevalR:72 ind
R24290:24291 LF.Imp <> n1:83 var
R24287:24288 LF.Imp <> e1:81 var
binder 24275:24276 <> H1:85
R24306:24311 LF.Imp <> aevalR:72 ind
R24316:24317 LF.Imp <> n2:84 var
R24313:24314 LF.Imp <> e2:82 var
binder 24301:24302 <> H2:86
R24328:24333 LF.Imp <> aevalR:72 ind
R24353:24355 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R24351:24352 LF.Imp <> n1:83 var
R24356:24357 LF.Imp <> n2:84 var
R24336:24341 LF.Imp AExp AMinus constr
R24343:24344 LF.Imp <> e1:81 var
R24346:24347 LF.Imp <> e2:82 var
R24381:24384 LF.Imp AExp aexp ind
binder 24373:24374 <> e1:87
binder 24376:24377 <> e2:88
R24396:24398 Coq.Init.Datatypes <> nat ind
binder 24388:24389 <> n1:89
binder 24391:24392 <> n2:90
R24413:24418 LF.Imp <> aevalR:72 ind
R24423:24424 LF.Imp <> n1:89 var
R24420:24421 LF.Imp <> e1:87 var
binder 24408:24409 <> H1:91
R24439:24444 LF.Imp <> aevalR:72 ind
R24449:24450 LF.Imp <> n2:90 var
R24446:24447 LF.Imp <> e2:88 var
binder 24434:24435 <> H2:92
R24461:24466 LF.Imp <> aevalR:72 ind
R24485:24487 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R24483:24484 LF.Imp <> n1:89 var
R24488:24489 LF.Imp <> n2:90 var
R24469:24473 LF.Imp AExp AMult constr
R24475:24476 LF.Imp <> e1:87 var
R24478:24479 LF.Imp <> e2:88 var
scheme 24015:24020 AExp.aevalR_first_try.HypothesisNames aevalR_ind
scheme 24015:24020 AExp.aevalR_first_try.HypothesisNames aevalR_sind
R24673:24687 LF.Imp AExp.aevalR_first_try.HypothesisNames <> mod
R24889:24894 LF.Imp AExp.aevalR_first_try aevalR ind
not 24864:24864 AExp.aevalR_first_try ::type_scope:x_'==>'_x
R24975:24990 LF.Imp AExp.aevalR_first_try <> mod
ind 25237:25242 AExp aevalR
constr 25273:25278 AExp E_ANum
constr 25317:25323 AExp E_APlus
constr 25437:25444 AExp E_AMinus
constr 25558:25564 AExp E_AMult
R25250:25253 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25246:25249 LF.Imp AExp aexp ind
R25257:25260 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25254:25256 Coq.Init.Datatypes <> nat ind
R25699:25704 LF.Imp <> aevalR:94 ind
R25285:25287 Coq.Init.Datatypes <> nat ind
binder 25281:25281 <> n:95
R25298:25298 LF.Imp AExp ::type_scope:x_'==>'_x not
R25305:25310 LF.Imp AExp ::type_scope:x_'==>'_x not
R25299:25302 LF.Imp AExp ANum constr
R25304:25304 LF.Imp <> n:95 var
R25311:25311 LF.Imp <> n:95 var
R25334:25337 LF.Imp AExp aexp ind
binder 25326:25327 <> e1:96
binder 25329:25330 <> e2:97
R25349:25351 Coq.Init.Datatypes <> nat ind
binder 25341:25342 <> n1:98
binder 25344:25345 <> n2:99
R25362:25362 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25372:25382 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25365:25369 LF.Imp AExp ::type_scope:x_'==>'_x not
R25363:25364 LF.Imp <> e1:96 var
R25370:25371 LF.Imp <> n1:98 var
R25383:25383 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25393:25403 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25386:25390 LF.Imp AExp ::type_scope:x_'==>'_x not
R25384:25385 LF.Imp <> e2:97 var
R25391:25392 LF.Imp <> n2:99 var
R25404:25404 LF.Imp AExp ::type_scope:x_'==>'_x not
R25416:25423 LF.Imp AExp ::type_scope:x_'==>'_x not
R25431:25431 LF.Imp AExp ::type_scope:x_'==>'_x not
R25405:25409 LF.Imp AExp APlus constr
R25411:25412 LF.Imp <> e1:96 var
R25414:25415 LF.Imp <> e2:97 var
R25426:25428 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R25424:25425 LF.Imp <> n1:98 var
R25429:25430 LF.Imp <> n2:99 var
R25455:25458 LF.Imp AExp aexp ind
binder 25447:25448 <> e1:100
binder 25450:25451 <> e2:101
R25470:25472 Coq.Init.Datatypes <> nat ind
binder 25462:25463 <> n1:102
binder 25465:25466 <> n2:103
R25483:25483 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25493:25503 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25486:25490 LF.Imp AExp ::type_scope:x_'==>'_x not
R25484:25485 LF.Imp <> e1:100 var
R25491:25492 LF.Imp <> n1:102 var
R25504:25504 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25514:25524 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25507:25511 LF.Imp AExp ::type_scope:x_'==>'_x not
R25505:25506 LF.Imp <> e2:101 var
R25512:25513 LF.Imp <> n2:103 var
R25525:25525 LF.Imp AExp ::type_scope:x_'==>'_x not
R25538:25544 LF.Imp AExp ::type_scope:x_'==>'_x not
R25552:25552 LF.Imp AExp ::type_scope:x_'==>'_x not
R25526:25531 LF.Imp AExp AMinus constr
R25533:25534 LF.Imp <> e1:100 var
R25536:25537 LF.Imp <> e2:101 var
R25547:25549 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R25545:25546 LF.Imp <> n1:102 var
R25550:25551 LF.Imp <> n2:103 var
R25575:25578 LF.Imp AExp aexp ind
binder 25567:25568 <> e1:104
binder 25570:25571 <> e2:105
R25590:25592 Coq.Init.Datatypes <> nat ind
binder 25582:25583 <> n1:106
binder 25585:25586 <> n2:107
R25603:25603 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25613:25623 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25606:25610 LF.Imp AExp ::type_scope:x_'==>'_x not
R25604:25605 LF.Imp <> e1:104 var
R25611:25612 LF.Imp <> n1:106 var
R25624:25624 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25634:25644 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25627:25631 LF.Imp AExp ::type_scope:x_'==>'_x not
R25625:25626 LF.Imp <> e2:105 var
R25632:25633 LF.Imp <> n2:107 var
R25645:25645 LF.Imp AExp ::type_scope:x_'==>'_x not
R25657:25664 LF.Imp AExp ::type_scope:x_'==>'_x not
R25672:25672 LF.Imp AExp ::type_scope:x_'==>'_x not
R25646:25650 LF.Imp AExp AMult constr
R25652:25653 LF.Imp <> e1:104 var
R25655:25656 LF.Imp <> e2:105 var
R25667:25669 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R25665:25666 LF.Imp <> n1:106 var
R25670:25671 LF.Imp <> n2:107 var
scheme 25237:25242 AExp aevalR_ind
scheme 25237:25242 AExp aevalR_sind
R25699:25704 LF.Imp AExp aevalR ind
not 25683:25683 AExp ::type_scope:x_'==>'_x
def 29846:29873 AExp manual_grade_for_beval_rules
R29877:29882 Coq.Init.Datatypes <> option ind
R29888:29888 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R29885:29887 Coq.Init.Datatypes <> nat ind
R29889:29894 Coq.Strings.String <> string ind
R29900:29903 Coq.Init.Datatypes <> None constr
prf 30150:30165 AExp aevalR_iff_aeval
binder 30176:30176 <> a:108
binder 30178:30178 <> n:109
R30183:30183 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R30191:30196 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R30185:30189 LF.Imp AExp ::type_scope:x_'==>'_x not
R30184:30184 LF.Imp <> a:108 var
R30190:30190 LF.Imp <> n:109 var
R30204:30206 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30197:30201 LF.Imp AExp aeval def
R30203:30203 LF.Imp <> a:108 var
R30207:30207 LF.Imp <> n:109 var
R30669:30674 LF.Imp AExp E_ANum constr
R30669:30674 LF.Imp AExp E_ANum constr
R30707:30713 LF.Imp AExp E_APlus constr
R30707:30713 LF.Imp AExp E_APlus constr
R30813:30820 LF.Imp AExp E_AMinus constr
R30813:30820 LF.Imp AExp E_AMinus constr
R30919:30925 LF.Imp AExp E_AMult constr
R30919:30925 LF.Imp AExp E_AMult constr
prf 31091:31107 AExp aevalR_iff_aeval'
binder 31118:31118 <> a:110
binder 31120:31120 <> n:111
R31125:31125 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R31133:31138 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R31127:31131 LF.Imp AExp ::type_scope:x_'==>'_x not
R31126:31126 LF.Imp <> a:110 var
R31132:31132 LF.Imp <> n:111 var
R31146:31148 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31139:31143 LF.Imp AExp aeval def
R31145:31145 LF.Imp <> a:110 var
R31149:31149 LF.Imp <> n:111 var
ind 31639:31644 AExp bevalR
constr 31676:31682 AExp E_BTrue
constr 31712:31719 AExp E_BFalse
constr 31750:31754 AExp E_BEq
constr 31850:31855 AExp E_BNeq
constr 31958:31962 AExp E_BLe
constr 32059:32063 AExp E_BGt
constr 32167:32172 AExp E_BNot
constr 32248:32253 AExp E_BAnd
R31652:31655 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31648:31651 LF.Imp AExp bexp ind
R31660:31663 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31656:31659 Coq.Init.Datatypes <> bool ind
R32382:32387 LF.Imp <> bevalR:113 ind
R31697:31702 LF.Imp AExp ::type_scope:x_'==>b'_x not
R31692:31696 LF.Imp AExp BTrue constr
R31703:31706 Coq.Init.Datatypes <> true constr
R31734:31739 LF.Imp AExp ::type_scope:x_'==>b'_x not
R31728:31733 LF.Imp AExp BFalse constr
R31740:31744 Coq.Init.Datatypes <> false constr
R31765:31768 LF.Imp AExp aexp ind
binder 31757:31758 <> a1:114
binder 31760:31761 <> a2:115
R31780:31782 Coq.Init.Datatypes <> nat ind
binder 31772:31773 <> n1:116
binder 31775:31776 <> n2:117
R31788:31788 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31798:31802 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31791:31795 LF.Imp AExp ::type_scope:x_'==>'_x not
R31789:31790 LF.Imp <> a1:114 var
R31796:31797 LF.Imp <> n1:116 var
R31803:31803 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31813:31817 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31806:31810 LF.Imp AExp ::type_scope:x_'==>'_x not
R31804:31805 LF.Imp <> a2:115 var
R31811:31812 LF.Imp <> n2:117 var
R31818:31818 LF.Imp AExp ::type_scope:x_'==>b'_x not
R31828:31835 LF.Imp AExp ::type_scope:x_'==>b'_x not
R31844:31844 LF.Imp AExp ::type_scope:x_'==>b'_x not
R31819:31821 LF.Imp AExp BEq constr
R31823:31824 LF.Imp <> a1:114 var
R31826:31827 LF.Imp <> a2:115 var
R31838:31841 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R31836:31837 LF.Imp <> n1:116 var
R31842:31843 LF.Imp <> n2:117 var
R31866:31869 LF.Imp AExp aexp ind
binder 31858:31859 <> a1:118
binder 31861:31862 <> a2:119
R31881:31883 Coq.Init.Datatypes <> nat ind
binder 31873:31874 <> n1:120
binder 31876:31877 <> n2:121
R31888:31888 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31898:31902 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31891:31895 LF.Imp AExp ::type_scope:x_'==>'_x not
R31889:31890 LF.Imp <> a1:118 var
R31896:31897 LF.Imp <> n1:120 var
R31903:31903 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31913:31917 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31906:31910 LF.Imp AExp ::type_scope:x_'==>'_x not
R31904:31905 LF.Imp <> a2:119 var
R31911:31912 LF.Imp <> n2:121 var
R31918:31918 LF.Imp AExp ::type_scope:x_'==>b'_x not
R31929:31936 LF.Imp AExp ::type_scope:x_'==>b'_x not
R31952:31952 LF.Imp AExp ::type_scope:x_'==>b'_x not
R31919:31922 LF.Imp AExp BNeq constr
R31924:31925 LF.Imp <> a1:118 var
R31927:31928 LF.Imp <> a2:119 var
R31937:31940 Coq.Init.Datatypes <> negb def
R31945:31948 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R31943:31944 LF.Imp <> n1:120 var
R31949:31950 LF.Imp <> n2:121 var
R31973:31976 LF.Imp AExp aexp ind
binder 31965:31966 <> a1:122
binder 31968:31969 <> a2:123
R31988:31990 Coq.Init.Datatypes <> nat ind
binder 31980:31981 <> n1:124
binder 31983:31984 <> n2:125
R31996:31996 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32006:32010 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31999:32003 LF.Imp AExp ::type_scope:x_'==>'_x not
R31997:31998 LF.Imp <> a1:122 var
R32004:32005 LF.Imp <> n1:124 var
R32011:32011 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32021:32025 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32014:32018 LF.Imp AExp ::type_scope:x_'==>'_x not
R32012:32013 LF.Imp <> a2:123 var
R32019:32020 LF.Imp <> n2:125 var
R32026:32026 LF.Imp AExp ::type_scope:x_'==>b'_x not
R32036:32043 LF.Imp AExp ::type_scope:x_'==>b'_x not
R32053:32053 LF.Imp AExp ::type_scope:x_'==>b'_x not
R32027:32029 LF.Imp AExp BLe constr
R32031:32032 LF.Imp <> a1:122 var
R32034:32035 LF.Imp <> a2:123 var
R32046:32050 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R32044:32045 LF.Imp <> n1:124 var
R32051:32052 LF.Imp <> n2:125 var
R32074:32077 LF.Imp AExp aexp ind
binder 32066:32067 <> a1:126
binder 32069:32070 <> a2:127
R32089:32091 Coq.Init.Datatypes <> nat ind
binder 32081:32082 <> n1:128
binder 32084:32085 <> n2:129
R32097:32097 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32107:32111 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32100:32104 LF.Imp AExp ::type_scope:x_'==>'_x not
R32098:32099 LF.Imp <> a1:126 var
R32105:32106 LF.Imp <> n1:128 var
R32112:32112 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32122:32126 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32115:32119 LF.Imp AExp ::type_scope:x_'==>'_x not
R32113:32114 LF.Imp <> a2:127 var
R32120:32121 LF.Imp <> n2:129 var
R32127:32127 LF.Imp AExp ::type_scope:x_'==>b'_x not
R32137:32144 LF.Imp AExp ::type_scope:x_'==>b'_x not
R32161:32161 LF.Imp AExp ::type_scope:x_'==>b'_x not
R32128:32130 LF.Imp AExp BGt constr
R32132:32133 LF.Imp <> a1:126 var
R32135:32136 LF.Imp <> a2:127 var
R32145:32148 Coq.Init.Datatypes <> negb def
R32153:32157 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R32151:32152 LF.Imp <> n1:128 var
R32158:32159 LF.Imp <> n2:129 var
R32179:32182 LF.Imp AExp bexp ind
binder 32175:32175 <> b:130
R32191:32194 Coq.Init.Datatypes <> bool ind
binder 32186:32187 <> b':131
R32205:32205 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32215:32219 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32207:32212 LF.Imp AExp ::type_scope:x_'==>b'_x not
R32206:32206 LF.Imp <> b:130 var
R32213:32214 LF.Imp <> b':131 var
R32220:32220 LF.Imp AExp ::type_scope:x_'==>b'_x not
R32227:32234 LF.Imp AExp ::type_scope:x_'==>b'_x not
R32242:32242 LF.Imp AExp ::type_scope:x_'==>b'_x not
R32221:32224 LF.Imp AExp BNot constr
R32226:32226 LF.Imp <> b:130 var
R32235:32238 Coq.Init.Datatypes <> negb def
R32240:32241 LF.Imp <> b':131 var
R32264:32267 LF.Imp AExp bexp ind
binder 32256:32257 <> b1:132
binder 32259:32260 <> b2:133
R32281:32284 Coq.Init.Datatypes <> bool ind
binder 32271:32273 <> b1':134
binder 32275:32277 <> b2':135
R32289:32289 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32301:32305 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32292:32297 LF.Imp AExp ::type_scope:x_'==>b'_x not
R32290:32291 LF.Imp <> b1:132 var
R32298:32300 LF.Imp <> b1':134 var
R32306:32306 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32318:32322 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32309:32314 LF.Imp AExp ::type_scope:x_'==>b'_x not
R32307:32308 LF.Imp <> b2:133 var
R32315:32317 LF.Imp <> b2':135 var
R32323:32323 LF.Imp AExp ::type_scope:x_'==>b'_x not
R32334:32341 LF.Imp AExp ::type_scope:x_'==>b'_x not
R32354:32354 LF.Imp AExp ::type_scope:x_'==>b'_x not
R32324:32327 LF.Imp AExp BAnd constr
R32329:32330 LF.Imp <> b1:132 var
R32332:32333 LF.Imp <> b2:133 var
R32342:32345 Coq.Init.Datatypes <> andb def
R32351:32353 LF.Imp <> b2':135 var
R32347:32349 LF.Imp <> b1':134 var
scheme 31639:31644 AExp bevalR_ind
scheme 31639:31644 AExp bevalR_sind
R32382:32387 LF.Imp AExp bevalR ind
not 32365:32365 AExp ::type_scope:x_'==>b'_x
prf 32416:32431 AExp bevalR_iff_beval
binder 32442:32442 <> b:136
binder 32444:32445 <> bv:137
R32459:32463 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R32451:32456 LF.Imp AExp ::type_scope:x_'==>b'_x not
R32450:32450 LF.Imp <> b:136 var
R32457:32458 LF.Imp <> bv:137 var
R32471:32473 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32464:32468 LF.Imp AExp beval def
R32470:32470 LF.Imp <> b:136 var
R32474:32475 LF.Imp <> bv:137 var
R32561:32576 LF.Imp AExp aevalR_iff_aeval thm
R32596:32611 LF.Imp AExp aevalR_iff_aeval thm
R32561:32576 LF.Imp AExp aevalR_iff_aeval thm
R32561:32576 LF.Imp AExp aevalR_iff_aeval thm
R32561:32576 LF.Imp AExp aevalR_iff_aeval thm
R32561:32576 LF.Imp AExp aevalR_iff_aeval thm
R32561:32576 LF.Imp AExp aevalR_iff_aeval thm
R32561:32576 LF.Imp AExp aevalR_iff_aeval thm
R32596:32611 LF.Imp AExp aevalR_iff_aeval thm
R32596:32611 LF.Imp AExp aevalR_iff_aeval thm
R32596:32611 LF.Imp AExp aevalR_iff_aeval thm
R32596:32611 LF.Imp AExp aevalR_iff_aeval thm
R32596:32611 LF.Imp AExp aevalR_iff_aeval thm
R32759:32774 LF.Imp AExp aevalR_iff_aeval thm
R32759:32774 LF.Imp AExp aevalR_iff_aeval thm
R32759:32774 LF.Imp AExp aevalR_iff_aeval thm
R32759:32774 LF.Imp AExp aevalR_iff_aeval thm
R32759:32774 LF.Imp AExp aevalR_iff_aeval thm
R32759:32774 LF.Imp AExp aevalR_iff_aeval thm
R32759:32774 LF.Imp AExp aevalR_iff_aeval thm
R32759:32774 LF.Imp AExp aevalR_iff_aeval thm
R32759:32774 LF.Imp AExp aevalR_iff_aeval thm
R32759:32774 LF.Imp AExp aevalR_iff_aeval thm
R32759:32774 LF.Imp AExp aevalR_iff_aeval thm
R32759:32774 LF.Imp AExp aevalR_iff_aeval thm
R32861:32864 LF.Imp AExp <> mod
mod 33334:33348 <> aevalR_division
ind 33461:33464 aevalR_division aexp
constr 33480:33483 aevalR_division ANum
constr 33499:33503 aevalR_division APlus
constr 33524:33529 aevalR_division AMinus
constr 33550:33554 aevalR_division AMult
constr 33575:33578 aevalR_division ADiv
R33490:33492 Coq.Init.Datatypes <> nat ind
binder 33486:33486 <> n:140
R33514:33517 LF.Imp <> aexp:138 ind
binder 33506:33507 <> a1:141
binder 33509:33510 <> a2:142
R33540:33543 LF.Imp <> aexp:138 ind
binder 33532:33533 <> a1:143
binder 33535:33536 <> a2:144
R33565:33568 LF.Imp <> aexp:138 ind
binder 33557:33558 <> a1:145
binder 33560:33561 <> a2:146
R33589:33592 LF.Imp <> aexp:138 ind
binder 33581:33582 <> a1:147
binder 33584:33585 <> a2:148
scheme 33461:33464 aevalR_division aexp_rect
scheme 33461:33464 aevalR_division aexp_ind
scheme 33461:33464 aevalR_division aexp_rec
scheme 33461:33464 aevalR_division aexp_sind
ind 33934:33939 aevalR_division aevalR
constr 33970:33975 aevalR_division E_ANum
constr 34014:34020 aevalR_division E_APlus
constr 34121:34128 aevalR_division E_AMinus
constr 34230:34236 aevalR_division E_AMult
constr 34337:34342 aevalR_division E_ADiv
R33947:33950 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33943:33946 LF.Imp aevalR_division aexp ind
R33954:33957 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33951:33953 Coq.Init.Datatypes <> nat ind
R34522:34527 LF.Imp <> aevalR:150 ind
R33982:33984 Coq.Init.Datatypes <> nat ind
binder 33978:33978 <> n:151
R33995:33995 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R34002:34007 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R33996:33999 LF.Imp aevalR_division ANum constr
R34001:34001 LF.Imp <> n:151 var
R34008:34008 LF.Imp <> n:151 var
R34031:34034 LF.Imp aevalR_division aexp ind
binder 34023:34024 <> a1:152
binder 34026:34027 <> a2:153
R34046:34048 Coq.Init.Datatypes <> nat ind
binder 34038:34039 <> n1:154
binder 34041:34042 <> n2:155
R34059:34059 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34069:34073 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34062:34066 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R34060:34061 LF.Imp <> a1:152 var
R34067:34068 LF.Imp <> n1:154 var
R34074:34074 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34084:34088 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34077:34081 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R34075:34076 LF.Imp <> a2:153 var
R34082:34083 LF.Imp <> n2:155 var
R34089:34089 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R34101:34107 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R34115:34115 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R34090:34094 LF.Imp aevalR_division APlus constr
R34096:34097 LF.Imp <> a1:152 var
R34099:34100 LF.Imp <> a2:153 var
R34110:34112 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R34108:34109 LF.Imp <> n1:154 var
R34113:34114 LF.Imp <> n2:155 var
R34139:34142 LF.Imp aevalR_division aexp ind
binder 34131:34132 <> a1:156
binder 34134:34135 <> a2:157
R34154:34156 Coq.Init.Datatypes <> nat ind
binder 34146:34147 <> n1:158
binder 34149:34150 <> n2:159
R34167:34167 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34177:34181 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34170:34174 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R34168:34169 LF.Imp <> a1:156 var
R34175:34176 LF.Imp <> n1:158 var
R34182:34182 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34192:34196 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34185:34189 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R34183:34184 LF.Imp <> a2:157 var
R34190:34191 LF.Imp <> n2:159 var
R34197:34197 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R34210:34216 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R34224:34224 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R34198:34203 LF.Imp aevalR_division AMinus constr
R34205:34206 LF.Imp <> a1:156 var
R34208:34209 LF.Imp <> a2:157 var
R34219:34221 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R34217:34218 LF.Imp <> n1:158 var
R34222:34223 LF.Imp <> n2:159 var
R34247:34250 LF.Imp aevalR_division aexp ind
binder 34239:34240 <> a1:160
binder 34242:34243 <> a2:161
R34262:34264 Coq.Init.Datatypes <> nat ind
binder 34254:34255 <> n1:162
binder 34257:34258 <> n2:163
R34275:34275 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34285:34289 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34278:34282 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R34276:34277 LF.Imp <> a1:160 var
R34283:34284 LF.Imp <> n1:162 var
R34290:34290 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34300:34304 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34293:34297 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R34291:34292 LF.Imp <> a2:161 var
R34298:34299 LF.Imp <> n2:163 var
R34305:34305 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R34317:34323 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R34331:34331 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R34306:34310 LF.Imp aevalR_division AMult constr
R34312:34313 LF.Imp <> a1:160 var
R34315:34316 LF.Imp <> a2:161 var
R34326:34328 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R34324:34325 LF.Imp <> n1:162 var
R34329:34330 LF.Imp <> n2:163 var
R34353:34356 LF.Imp aevalR_division aexp ind
binder 34345:34346 <> a1:164
binder 34348:34349 <> a2:165
R34371:34373 Coq.Init.Datatypes <> nat ind
binder 34360:34361 <> n1:166
binder 34363:34364 <> n2:167
binder 34366:34367 <> n3:168
R34410:34410 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34420:34424 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34413:34417 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R34411:34412 LF.Imp <> a1:164 var
R34418:34419 LF.Imp <> n1:166 var
R34425:34425 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34435:34439 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34428:34432 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R34426:34427 LF.Imp <> a2:165 var
R34433:34434 LF.Imp <> n2:167 var
R34440:34440 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34447:34457 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34443:34445 Coq.Init.Peano <> ::nat_scope:x_'>'_x not
R34441:34442 LF.Imp <> n2:167 var
R34458:34458 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34474:34478 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34469:34471 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34459:34462 Coq.Init.Peano <> mult abbrev
R34464:34465 LF.Imp <> n2:167 var
R34467:34468 LF.Imp <> n3:168 var
R34472:34473 LF.Imp <> n1:166 var
R34479:34479 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R34490:34495 LF.Imp aevalR_division ::type_scope:x_'==>'_x not
R34480:34483 LF.Imp aevalR_division ADiv constr
R34485:34486 LF.Imp <> a1:164 var
R34488:34489 LF.Imp <> a2:165 var
R34496:34497 LF.Imp <> n3:168 var
scheme 33934:33939 aevalR_division aevalR_ind
scheme 33934:33939 aevalR_division aevalR_sind
R34522:34527 LF.Imp aevalR_division aevalR ind
not 34506:34506 aevalR_division ::type_scope:x_'==>'_x
R34706:34720 LF.Imp aevalR_division <> mod
mod 34731:34745 <> aevalR_extended
ind 35224:35227 aevalR_extended aexp
constr 35243:35246 aevalR_extended AAny
constr 35293:35296 aevalR_extended ANum
constr 35312:35316 aevalR_extended APlus
constr 35337:35342 aevalR_extended AMinus
constr 35363:35367 aevalR_extended AMult
R35303:35305 Coq.Init.Datatypes <> nat ind
binder 35299:35299 <> n:171
R35327:35330 LF.Imp <> aexp:169 ind
binder 35319:35320 <> a1:172
binder 35322:35323 <> a2:173
R35353:35356 LF.Imp <> aexp:169 ind
binder 35345:35346 <> a1:174
binder 35348:35349 <> a2:175
R35378:35381 LF.Imp <> aexp:169 ind
binder 35370:35371 <> a1:176
binder 35373:35374 <> a2:177
scheme 35224:35227 aevalR_extended aexp_rect
scheme 35224:35227 aevalR_extended aexp_ind
scheme 35224:35227 aevalR_extended aexp_rec
scheme 35224:35227 aevalR_extended aexp_sind
ind 35578:35583 aevalR_extended aevalR
constr 35614:35618 aevalR_extended E_Any
constr 35691:35696 aevalR_extended E_ANum
constr 35735:35741 aevalR_extended E_APlus
constr 35842:35849 aevalR_extended E_AMinus
constr 35951:35957 aevalR_extended E_AMult
R35591:35594 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35587:35590 LF.Imp aevalR_extended aexp ind
R35598:35601 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35595:35597 Coq.Init.Datatypes <> nat ind
R36077:36082 LF.Imp <> aevalR:179 ind
R35625:35627 Coq.Init.Datatypes <> nat ind
binder 35621:35621 <> n:180
R35642:35646 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R35638:35641 LF.Imp aevalR_extended AAny constr
R35647:35647 LF.Imp <> n:180 var
R35703:35705 Coq.Init.Datatypes <> nat ind
binder 35699:35699 <> n:181
R35716:35716 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R35723:35728 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R35717:35720 LF.Imp aevalR_extended ANum constr
R35722:35722 LF.Imp <> n:181 var
R35729:35729 LF.Imp <> n:181 var
R35752:35755 LF.Imp aevalR_extended aexp ind
binder 35744:35745 <> a1:182
binder 35747:35748 <> a2:183
R35767:35769 Coq.Init.Datatypes <> nat ind
binder 35759:35760 <> n1:184
binder 35762:35763 <> n2:185
R35780:35780 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35790:35794 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35783:35787 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R35781:35782 LF.Imp <> a1:182 var
R35788:35789 LF.Imp <> n1:184 var
R35795:35795 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35805:35809 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35798:35802 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R35796:35797 LF.Imp <> a2:183 var
R35803:35804 LF.Imp <> n2:185 var
R35810:35810 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R35822:35828 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R35836:35836 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R35811:35815 LF.Imp aevalR_extended APlus constr
R35817:35818 LF.Imp <> a1:182 var
R35820:35821 LF.Imp <> a2:183 var
R35831:35833 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R35829:35830 LF.Imp <> n1:184 var
R35834:35835 LF.Imp <> n2:185 var
R35860:35863 LF.Imp aevalR_extended aexp ind
binder 35852:35853 <> a1:186
binder 35855:35856 <> a2:187
R35875:35877 Coq.Init.Datatypes <> nat ind
binder 35867:35868 <> n1:188
binder 35870:35871 <> n2:189
R35888:35888 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35898:35902 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35891:35895 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R35889:35890 LF.Imp <> a1:186 var
R35896:35897 LF.Imp <> n1:188 var
R35903:35903 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35913:35917 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35906:35910 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R35904:35905 LF.Imp <> a2:187 var
R35911:35912 LF.Imp <> n2:189 var
R35918:35918 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R35931:35937 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R35945:35945 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R35919:35924 LF.Imp aevalR_extended AMinus constr
R35926:35927 LF.Imp <> a1:186 var
R35929:35930 LF.Imp <> a2:187 var
R35940:35942 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R35938:35939 LF.Imp <> n1:188 var
R35943:35944 LF.Imp <> n2:189 var
R35968:35971 LF.Imp aevalR_extended aexp ind
binder 35960:35961 <> a1:190
binder 35963:35964 <> a2:191
R35983:35985 Coq.Init.Datatypes <> nat ind
binder 35975:35976 <> n1:192
binder 35978:35979 <> n2:193
R35996:35996 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36006:36010 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35999:36003 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R35997:35998 LF.Imp <> a1:190 var
R36004:36005 LF.Imp <> n1:192 var
R36011:36011 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36021:36025 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36014:36018 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R36012:36013 LF.Imp <> a2:191 var
R36019:36020 LF.Imp <> n2:193 var
R36026:36026 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R36038:36044 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R36052:36052 LF.Imp aevalR_extended ::type_scope:x_'==>'_x not
R36027:36031 LF.Imp aevalR_extended AMult constr
R36033:36034 LF.Imp <> a1:190 var
R36036:36037 LF.Imp <> a2:191 var
R36047:36049 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R36045:36046 LF.Imp <> n1:192 var
R36050:36051 LF.Imp <> n2:193 var
scheme 35578:35583 aevalR_extended aevalR_ind
scheme 35578:35583 aevalR_extended aevalR_sind
R36077:36082 LF.Imp aevalR_extended aevalR ind
not 36061:36061 aevalR_extended ::type_scope:x_'==>'_x
R36108:36122 LF.Imp aevalR_extended <> mod
def 38758:38762 <> state
R38767:38775 LF.Maps <> total_map def
R38777:38779 Coq.Init.Datatypes <> nat ind
ind 39003:39006 <> aexp
constr 39022:39025 <> ANum
constr 39041:39043 <> AId
constr 39090:39094 <> APlus
constr 39115:39120 <> AMinus
constr 39141:39145 <> AMult
R39032:39034 Coq.Init.Datatypes <> nat ind
binder 39028:39028 <> n:196
R39050:39055 Coq.Strings.String <> string ind
binder 39046:39046 <> x:197
R39105:39108 LF.Imp <> aexp:194 ind
binder 39097:39098 <> a1:198
binder 39100:39101 <> a2:199
R39131:39134 LF.Imp <> aexp:194 ind
binder 39123:39124 <> a1:200
binder 39126:39127 <> a2:201
R39156:39159 LF.Imp <> aexp:194 ind
binder 39148:39149 <> a1:202
binder 39151:39152 <> a2:203
scheme 39003:39006 <> aexp_rect
scheme 39003:39006 <> aexp_ind
scheme 39003:39006 <> aexp_rec
scheme 39003:39006 <> aexp_sind
def 39277:39277 <> W
R39281:39286 Coq.Strings.String <> string ind
def 39307:39307 <> X
R39311:39316 Coq.Strings.String <> string ind
def 39337:39337 <> Y
R39341:39346 Coq.Strings.String <> string ind
def 39367:39367 <> Z
R39371:39376 Coq.Strings.String <> string ind
ind 39769:39772 <> bexp
constr 39788:39792 <> BTrue
constr 39798:39803 <> BFalse
constr 39809:39811 <> BEq
constr 39832:39835 <> BNeq
constr 39856:39858 <> BLe
constr 39879:39881 <> BGt
constr 39902:39905 <> BNot
constr 39922:39925 <> BAnd
R39822:39825 LF.Imp <> aexp ind
binder 39814:39815 <> a1:206
binder 39817:39818 <> a2:207
R39846:39849 LF.Imp <> aexp ind
binder 39838:39839 <> a1:208
binder 39841:39842 <> a2:209
R39869:39872 LF.Imp <> aexp ind
binder 39861:39862 <> a1:210
binder 39864:39865 <> a2:211
R39892:39895 LF.Imp <> aexp ind
binder 39884:39885 <> a1:212
binder 39887:39888 <> a2:213
R39912:39915 LF.Imp <> bexp:204 ind
binder 39908:39908 <> b:214
R39936:39939 LF.Imp <> bexp:204 ind
binder 39928:39929 <> b1:215
binder 39931:39932 <> b2:216
scheme 39769:39772 <> bexp_rect
scheme 39769:39772 <> bexp_ind
scheme 39769:39772 <> bexp_rec
scheme 39769:39772 <> bexp_sind
R41193:41222 LF.Imp <> AId constr
R41225:41252 LF.Imp <> ANum constr
not 41347:41347 <> ::com_scope:'<{'_x_'}>'
not 41403:41403 <> :com_aux:com_scope:x
not 41480:41480 <> :com:com_scope:'('_x_')'
not 41546:41546 <> :com:com_scope:x
not 41625:41625 <> :com:com_scope:x_x_'..'_x
R41849:41853 LF.Imp <> APlus constr
not 41835:41835 <> :com::x_'+'_x
R41932:41937 LF.Imp <> AMinus constr
not 41918:41918 <> :com::x_'-'_x
R42016:42020 LF.Imp <> AMult constr
not 42002:42002 <> :com::x_'*'_x
R42098:42101 Coq.Init.Datatypes <> true constr
not 42085:42085 <> :::'true'
R42139:42143 LF.Imp <> BTrue constr
not 42126:42126 <> :com::'true'
R42195:42199 Coq.Init.Datatypes <> false constr
not 42182:42182 <> :::'false'
R42237:42242 LF.Imp <> BFalse constr
not 42224:42224 <> :com::'false'
R42295:42297 LF.Imp <> BLe constr
not 42281:42281 <> :com::x_'<='_x
R42374:42376 LF.Imp <> BGt constr
not 42360:42360 <> :com::x_'>'_x
R42453:42455 LF.Imp <> BEq constr
not 42439:42439 <> :com::x_'='_x
R42532:42535 LF.Imp <> BNeq constr
not 42518:42518 <> :com::x_'<>'_x
R42612:42615 LF.Imp <> BAnd constr
not 42598:42598 <> :com::x_'&&'_x
R42694:42697 LF.Imp <> BNot constr
not 42680:42680 <> :com::'~'_x
def 42930:42941 <> example_aexp
R42945:42948 LF.Imp <> aexp ind
R42953:42955 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R42967:42969 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R42957:42959 LF.Imp <> :com::x_'+'_x not
R42960:42960 LF.Imp <> :com:com_scope:'('_x_')' not
R42966:42966 LF.Imp <> :com:com_scope:'('_x_')' not
R42962:42964 LF.Imp <> :com::x_'*'_x not
R42961:42961 LF.Imp <> X def
def 42983:42994 <> example_bexp
R42998:43001 LF.Imp <> bexp ind
R43006:43008 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R43026:43028 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R43013:43016 LF.Imp <> :com::x_'&&'_x not
R43009:43012 LF.Imp <> :com::'true' not
R43017:43017 LF.Imp <> :com::'~'_x not
R43018:43018 LF.Imp <> :com:com_scope:'('_x_')' not
R43025:43025 LF.Imp <> :com:com_scope:'('_x_')' not
R43020:43023 LF.Imp <> :com::x_'<='_x not
R43019:43019 LF.Imp <> X def
def 43287:43291 <> aeval
R43299:43303 LF.Imp <> state def
binder 43294:43295 <> st:217
R43341:43344 LF.Imp <> aexp ind
binder 43337:43337 <> a:218
R43349:43351 Coq.Init.Datatypes <> nat ind
R43364:43364 LF.Imp <> a:218 var
R43375:43378 LF.Imp <> ANum constr
R43391:43393 LF.Imp <> AId constr
R43400:43401 LF.Imp <> st:217 var
R43455:43456 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R43464:43465 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R43459:43461 LF.Imp <> :com::x_'+'_x not
R43470:43470 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R43482:43486 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R43498:43498 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R43471:43475 LF.Imp <> aeval:219 def
R43477:43478 LF.Imp <> st:217 var
R43487:43491 LF.Imp <> aeval:219 def
R43493:43494 LF.Imp <> st:217 var
R43504:43505 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R43513:43514 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R43508:43510 LF.Imp <> :com::x_'-'_x not
R43519:43519 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R43531:43535 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R43547:43547 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R43520:43524 LF.Imp <> aeval:219 def
R43526:43527 LF.Imp <> st:217 var
R43536:43540 LF.Imp <> aeval:219 def
R43542:43543 LF.Imp <> st:217 var
R43553:43554 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R43562:43563 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R43557:43559 LF.Imp <> :com::x_'*'_x not
R43568:43568 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R43580:43584 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R43596:43596 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R43569:43573 LF.Imp <> aeval:219 def
R43575:43576 LF.Imp <> st:217 var
R43585:43589 LF.Imp <> aeval:219 def
R43591:43592 LF.Imp <> st:217 var
def 43615:43619 <> beval
R43627:43631 LF.Imp <> state def
binder 43622:43623 <> st:221
R43669:43672 LF.Imp <> bexp ind
binder 43665:43665 <> b:222
R43677:43680 Coq.Init.Datatypes <> bool ind
R43693:43693 LF.Imp <> b:222 var
R43704:43705 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R43710:43711 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R43706:43709 LF.Imp <> :com::'true' not
R43721:43724 LF.Imp <> :::'true' not
R43730:43731 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R43737:43738 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R43732:43736 LF.Imp <> :com::'false' not
R43747:43751 LF.Imp <> :::'false' not
R43757:43758 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R43766:43767 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R43761:43763 LF.Imp <> :com::x_'='_x not
R43774:43774 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R43786:43791 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R43803:43803 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R43775:43779 LF.Imp <> aeval def
R43781:43782 LF.Imp <> st:221 var
R43792:43796 LF.Imp <> aeval def
R43798:43799 LF.Imp <> st:221 var
R43809:43810 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R43819:43820 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R43813:43816 LF.Imp <> :com::x_'<>'_x not
R43826:43829 Coq.Init.Datatypes <> negb def
R43832:43832 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R43844:43849 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R43861:43861 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R43833:43837 LF.Imp <> aeval def
R43839:43840 LF.Imp <> st:221 var
R43850:43854 LF.Imp <> aeval def
R43856:43857 LF.Imp <> st:221 var
R43868:43869 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R43878:43879 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R43872:43875 LF.Imp <> :com::x_'<='_x not
R43885:43885 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R43897:43903 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R43915:43915 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R43886:43890 LF.Imp <> aeval def
R43892:43893 LF.Imp <> st:221 var
R43904:43908 LF.Imp <> aeval def
R43910:43911 LF.Imp <> st:221 var
R43921:43922 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R43930:43931 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R43925:43927 LF.Imp <> :com::x_'>'_x not
R43938:43941 Coq.Init.Datatypes <> negb def
R43944:43944 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R43956:43962 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R43974:43974 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R43945:43949 LF.Imp <> aeval def
R43951:43952 LF.Imp <> st:221 var
R43963:43967 LF.Imp <> aeval def
R43969:43970 LF.Imp <> st:221 var
R43981:43982 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R43987:43988 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R43983:43984 LF.Imp <> :com::'~'_x not
R43998:44001 Coq.Init.Datatypes <> negb def
R44004:44008 LF.Imp <> beval:223 def
R44010:44011 LF.Imp <> st:221 var
R44021:44022 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R44031:44032 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R44025:44028 LF.Imp <> :com::x_'&&'_x not
R44038:44041 Coq.Init.Datatypes <> andb def
R44058:44062 LF.Imp <> beval:223 def
R44064:44065 LF.Imp <> st:221 var
R44044:44048 LF.Imp <> beval:223 def
R44050:44051 LF.Imp <> st:221 var
def 44222:44229 <> empty_st
R44235:44240 LF.Maps <> :::'''_'''_'!->'_x not
R44376:44380 LF.Maps <> :::x_'!->'_x_';'_x not
R44382:44384 LF.Maps <> :::x_'!->'_x_';'_x not
R44385:44392 LF.Imp <> empty_st def
not 44359:44359 <> :::x_'!->'_x
def 44420:44424 <> aexp1
R44465:44469 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44432:44436 LF.Imp <> aeval def
R44440:44444 LF.Imp <> :::x_'!->'_x not
R44439:44439 LF.Imp <> X def
R44448:44450 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R44462:44464 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R44452:44454 LF.Imp <> :com::x_'+'_x not
R44455:44455 LF.Imp <> :com:com_scope:'('_x_')' not
R44461:44461 LF.Imp <> :com:com_scope:'('_x_')' not
R44457:44459 LF.Imp <> :com::x_'*'_x not
R44456:44456 LF.Imp <> X def
def 44508:44512 <> aexp2
R44563:44567 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44520:44524 LF.Imp <> aeval def
R44528:44532 LF.Maps <> :::x_'!->'_x_';'_x not
R44534:44536 LF.Maps <> :::x_'!->'_x_';'_x not
R44538:44542 LF.Imp <> :::x_'!->'_x not
R44537:44537 LF.Imp <> Y def
R44527:44527 LF.Imp <> X def
R44546:44548 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R44560:44562 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R44550:44552 LF.Imp <> :com::x_'+'_x not
R44549:44549 LF.Imp <> Z def
R44553:44553 LF.Imp <> :com:com_scope:'('_x_')' not
R44559:44559 LF.Imp <> :com:com_scope:'('_x_')' not
R44555:44557 LF.Imp <> :com::x_'*'_x not
R44554:44554 LF.Imp <> X def
R44558:44558 LF.Imp <> Y def
def 44606:44610 <> bexp1
R44657:44661 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44618:44622 LF.Imp <> beval def
R44626:44630 LF.Imp <> :::x_'!->'_x not
R44625:44625 LF.Imp <> X def
R44634:44636 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R44654:44656 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R44641:44644 LF.Imp <> :com::x_'&&'_x not
R44637:44640 LF.Imp <> :com::'true' not
R44645:44645 LF.Imp <> :com::'~'_x not
R44646:44646 LF.Imp <> :com:com_scope:'('_x_')' not
R44653:44653 LF.Imp <> :com:com_scope:'('_x_')' not
R44648:44651 LF.Imp <> :com::x_'<='_x not
R44647:44647 LF.Imp <> X def
R44662:44665 LF.Imp <> :::'true' not
ind 45253:45255 <> com
constr 45271:45275 <> CSkip
constr 45281:45285 <> CAsgn
constr 45315:45318 <> CSeq
constr 45338:45340 <> CIf
constr 45371:45376 <> CWhile
R45292:45297 Coq.Strings.String <> string ind
binder 45288:45288 <> x:227
R45305:45308 LF.Imp <> aexp ind
binder 45301:45301 <> a:228
R45329:45331 LF.Imp <> com:225 ind
binder 45321:45322 <> c1:229
binder 45324:45325 <> c2:230
R45347:45350 LF.Imp <> bexp ind
binder 45343:45343 <> b:231
R45362:45364 LF.Imp <> com:225 ind
binder 45354:45355 <> c1:232
binder 45357:45358 <> c2:233
R45383:45386 LF.Imp <> bexp ind
binder 45379:45379 <> b:234
R45394:45396 LF.Imp <> com:225 ind
binder 45390:45390 <> c:235
scheme 45253:45255 <> com_rect
scheme 45253:45255 <> com_ind
scheme 45253:45255 <> com_rec
scheme 45253:45255 <> com_sind
R45574:45578 LF.Imp <> CSkip constr
not 45552:45552 <> :com:com_scope:'skip'
R45652:45656 LF.Imp <> CAsgn constr
not 45629:45629 <> :com:com_scope:x_':='_x
R45812:45815 LF.Imp <> CSeq constr
not 45791:45791 <> :com:com_scope:x_';'_x
R45962:45964 LF.Imp <> CIf constr
not 45916:45916 <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end'
R46129:46134 LF.Imp <> CWhile constr
not 46091:46091 <> :com:com_scope:'while'_x_'do'_x_'end'
def 46454:46464 <> fact_in_coq
R46468:46470 LF.Imp <> com ind
R46477:46479 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R46567:46569 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R46486:46492 LF.Imp <> :com:com_scope:x_';'_x not
R46481:46484 LF.Imp <> :com:com_scope:x_':='_x not
R46480:46480 LF.Imp <> Z def
R46485:46485 LF.Imp <> X def
R46499:46505 LF.Imp <> :com:com_scope:x_';'_x not
R46494:46497 LF.Imp <> :com:com_scope:x_':='_x not
R46493:46493 LF.Imp <> Y def
R46506:46511 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R46518:46528 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R46558:46566 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R46513:46516 LF.Imp <> :com::x_'<>'_x not
R46512:46512 LF.Imp <> Z def
R46539:46547 LF.Imp <> :com:com_scope:x_';'_x not
R46530:46533 LF.Imp <> :com:com_scope:x_':='_x not
R46529:46529 LF.Imp <> Y def
R46535:46537 LF.Imp <> :com::x_'*'_x not
R46534:46534 LF.Imp <> Y def
R46538:46538 LF.Imp <> Z def
R46549:46552 LF.Imp <> :com:com_scope:x_':='_x not
R46548:46548 LF.Imp <> Z def
R46554:46556 LF.Imp <> :com::x_'-'_x not
R46553:46553 LF.Imp <> Z def
def 50018:50022 <> plus2
R50026:50028 LF.Imp <> com ind
R50035:50037 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R50048:50050 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R50039:50042 LF.Imp <> :com:com_scope:x_':='_x not
R50038:50038 LF.Imp <> X def
R50044:50046 LF.Imp <> :com::x_'+'_x not
R50043:50043 LF.Imp <> X def
def 50065:50074 <> XtimesYinZ
R50078:50080 LF.Imp <> com ind
R50087:50089 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R50100:50102 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R50091:50094 LF.Imp <> :com:com_scope:x_':='_x not
R50090:50090 LF.Imp <> Z def
R50096:50098 LF.Imp <> :com::x_'*'_x not
R50095:50095 LF.Imp <> X def
R50099:50099 LF.Imp <> Y def
def 50207:50226 <> subtract_slowly_body
R50230:50232 LF.Imp <> com ind
R50239:50241 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R50270:50272 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R50252:50259 LF.Imp <> :com:com_scope:x_';'_x not
R50243:50246 LF.Imp <> :com:com_scope:x_':='_x not
R50242:50242 LF.Imp <> Z def
R50248:50250 LF.Imp <> :com::x_'-'_x not
R50247:50247 LF.Imp <> Z def
R50261:50264 LF.Imp <> :com:com_scope:x_':='_x not
R50260:50260 LF.Imp <> X def
R50266:50268 LF.Imp <> :com::x_'-'_x not
R50265:50265 LF.Imp <> X def
def 50287:50301 <> subtract_slowly
R50305:50307 LF.Imp <> com ind
R50314:50316 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R50369:50371 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R50317:50322 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R50329:50339 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R50360:50368 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R50324:50327 LF.Imp <> :com::x_'<>'_x not
R50323:50323 LF.Imp <> X def
R50340:50359 LF.Imp <> subtract_slowly_body def
def 50386:50409 <> subtract_3_from_5_slowly
R50413:50415 LF.Imp <> com ind
R50422:50424 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R50468:50470 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R50431:50438 LF.Imp <> :com:com_scope:x_';'_x not
R50426:50429 LF.Imp <> :com:com_scope:x_':='_x not
R50425:50425 LF.Imp <> X def
R50445:50452 LF.Imp <> :com:com_scope:x_';'_x not
R50440:50443 LF.Imp <> :com:com_scope:x_':='_x not
R50439:50439 LF.Imp <> Z def
R50453:50467 LF.Imp <> subtract_slowly def
def 50587:50590 <> loop
R50594:50596 LF.Imp <> com ind
R50603:50605 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R50640:50642 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R50606:50611 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R50616:50626 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R50631:50639 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R50612:50615 LF.Imp <> :com::'true' not
R50627:50630 LF.Imp <> :com:com_scope:'skip' not
def 51174:51191 <> ceval_fun_no_while
R51199:51203 LF.Imp <> state def
binder 51194:51195 <> st:236
R51211:51213 LF.Imp <> com ind
binder 51207:51207 <> c:237
R51218:51222 LF.Imp <> state def
R51235:51235 LF.Imp <> c:237 var
R51248:51250 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R51255:51257 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R51251:51254 LF.Imp <> :com:com_scope:'skip' not
R51270:51271 LF.Imp <> st:236 var
R51279:51281 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R51288:51290 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R51283:51286 LF.Imp <> :com:com_scope:x_':='_x not
R51305:51310 LF.Maps <> :::x_'!->'_x_';'_x not
R51321:51324 LF.Maps <> :::x_'!->'_x_';'_x not
R51325:51326 LF.Imp <> st:236 var
R51311:51315 LF.Imp <> aeval def
R51317:51318 LF.Imp <> st:236 var
R51335:51337 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R51345:51347 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R51340:51342 LF.Imp <> :com:com_scope:x_';'_x not
R51371:51388 LF.Imp <> ceval_fun_no_while:238 def
R51390:51391 LF.Imp <> st:236 var
binder 51364:51366 <> st':240
R51407:51424 LF.Imp <> ceval_fun_no_while:238 def
R51426:51428 LF.Imp <> st':240 var
R51439:51441 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R51466:51467 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R51442:51444 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R51446:51451 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R51454:51459 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R51462:51465 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R51484:51488 LF.Imp <> beval def
R51490:51491 LF.Imp <> st:236 var
R51551:51568 LF.Imp <> ceval_fun_no_while:238 def
R51570:51571 LF.Imp <> st:236 var
R51511:51528 LF.Imp <> ceval_fun_no_while:238 def
R51530:51531 LF.Imp <> st:236 var
R51582:51584 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R51601:51603 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R51585:51590 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R51592:51595 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R51597:51600 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R51616:51617 LF.Imp <> st:236 var
ind 55932:55936 <> ceval
constr 55977:55982 <> E_Skip
constr 56025:56030 <> E_Asgn
constr 56118:56122 <> E_Seq
constr 56242:56249 <> E_IfTrue
constr 56377:56385 <> E_IfFalse
constr 56514:56525 <> E_WhileFalse
constr 56612:56622 <> E_WhileTrue
R55943:55946 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55940:55942 LF.Imp <> com ind
R55952:55955 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55947:55951 LF.Imp <> state def
R55961:55964 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55956:55960 LF.Imp <> state def
R56815:56819 LF.Imp <> ceval:242 ind
binder 55993:55994 <> st:243
R56005:56008 LF.Imp <> :::x_'=['_x_']=>'_x not
R56013:56017 LF.Imp <> :::x_'=['_x_']=>'_x not
R56009:56012 LF.Imp <> :com:com_scope:'skip' not
R56003:56004 LF.Imp <> st:243 var
R56018:56019 LF.Imp <> st:243 var
binder 56042:56043 <> st:244
binder 56045:56045 <> a:245
binder 56047:56047 <> n:246
binder 56049:56049 <> x:247
R56072:56081 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56068:56070 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56058:56062 LF.Imp <> aeval def
R56064:56065 LF.Imp <> st:244 var
R56067:56067 LF.Imp <> a:245 var
R56071:56071 LF.Imp <> n:246 var
R56084:56087 LF.Imp <> :::x_'=['_x_']=>'_x not
R56094:56099 LF.Imp <> :::x_'=['_x_']=>'_x not
R56112:56112 LF.Imp <> :::x_'=['_x_']=>'_x not
R56089:56092 LF.Imp <> :com:com_scope:x_':='_x not
R56088:56088 LF.Imp <> x:247 var
R56093:56093 LF.Imp <> a:245 var
R56082:56083 LF.Imp <> st:244 var
R56101:56105 LF.Maps <> :::x_'!->'_x_';'_x not
R56107:56109 LF.Maps <> :::x_'!->'_x_';'_x not
R56110:56111 LF.Imp <> st:244 var
R56100:56100 LF.Imp <> x:247 var
R56106:56106 LF.Imp <> n:246 var
binder 56133:56134 <> c1:248
binder 56136:56137 <> c2:249
binder 56139:56140 <> st:250
binder 56142:56144 <> st':251
binder 56146:56149 <> st'':252
R56175:56185 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56160:56164 LF.Imp <> :::x_'=['_x_']=>'_x not
R56167:56171 LF.Imp <> :::x_'=['_x_']=>'_x not
R56165:56166 LF.Imp <> c1:248 var
R56158:56159 LF.Imp <> st:250 var
R56172:56174 LF.Imp <> st':251 var
R56204:56213 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56189:56192 LF.Imp <> :::x_'=['_x_']=>'_x not
R56195:56199 LF.Imp <> :::x_'=['_x_']=>'_x not
R56193:56194 LF.Imp <> c2:249 var
R56186:56188 LF.Imp <> st':251 var
R56200:56203 LF.Imp <> st'':252 var
R56216:56220 LF.Imp <> :::x_'=['_x_']=>'_x not
R56228:56232 LF.Imp <> :::x_'=['_x_']=>'_x not
R56223:56225 LF.Imp <> :com:com_scope:x_';'_x not
R56221:56222 LF.Imp <> c1:248 var
R56226:56227 LF.Imp <> c2:249 var
R56214:56215 LF.Imp <> st:250 var
R56233:56236 LF.Imp <> st'':252 var
binder 56260:56261 <> st:253
binder 56263:56265 <> st':254
binder 56267:56267 <> b:255
binder 56269:56270 <> c1:256
binder 56272:56273 <> c2:257
R56299:56308 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56292:56294 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56282:56286 LF.Imp <> beval def
R56288:56289 LF.Imp <> st:253 var
R56291:56291 LF.Imp <> b:255 var
R56295:56298 LF.Imp <> :::'true' not
R56325:56334 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56311:56314 LF.Imp <> :::x_'=['_x_']=>'_x not
R56317:56321 LF.Imp <> :::x_'=['_x_']=>'_x not
R56315:56316 LF.Imp <> c1:256 var
R56309:56310 LF.Imp <> st:253 var
R56322:56324 LF.Imp <> st':254 var
R56337:56340 LF.Imp <> :::x_'=['_x_']=>'_x not
R56365:56368 LF.Imp <> :::x_'=['_x_']=>'_x not
R56341:56343 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R56345:56350 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R56353:56358 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R56361:56364 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R56344:56344 LF.Imp <> b:255 var
R56351:56352 LF.Imp <> c1:256 var
R56359:56360 LF.Imp <> c2:257 var
R56335:56336 LF.Imp <> st:253 var
R56369:56371 LF.Imp <> st':254 var
binder 56396:56397 <> st:258
binder 56399:56401 <> st':259
binder 56403:56403 <> b:260
binder 56405:56406 <> c1:261
binder 56408:56409 <> c2:262
R56436:56445 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56428:56430 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56418:56422 LF.Imp <> beval def
R56424:56425 LF.Imp <> st:258 var
R56427:56427 LF.Imp <> b:260 var
R56431:56435 LF.Imp <> :::'false' not
R56462:56471 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56448:56451 LF.Imp <> :::x_'=['_x_']=>'_x not
R56454:56458 LF.Imp <> :::x_'=['_x_']=>'_x not
R56452:56453 LF.Imp <> c2:262 var
R56446:56447 LF.Imp <> st:258 var
R56459:56461 LF.Imp <> st':259 var
R56474:56477 LF.Imp <> :::x_'=['_x_']=>'_x not
R56502:56505 LF.Imp <> :::x_'=['_x_']=>'_x not
R56478:56480 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R56482:56487 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R56490:56495 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R56498:56501 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R56481:56481 LF.Imp <> b:260 var
R56488:56489 LF.Imp <> c1:261 var
R56496:56497 LF.Imp <> c2:262 var
R56472:56473 LF.Imp <> st:258 var
R56506:56508 LF.Imp <> st':259 var
binder 56536:56536 <> b:263
binder 56538:56539 <> st:264
binder 56541:56541 <> c:265
R56568:56577 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56560:56562 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56550:56554 LF.Imp <> beval def
R56556:56557 LF.Imp <> st:264 var
R56559:56559 LF.Imp <> b:263 var
R56563:56567 LF.Imp <> :::'false' not
R56580:56583 LF.Imp <> :::x_'=['_x_']=>'_x not
R56600:56604 LF.Imp <> :::x_'=['_x_']=>'_x not
R56584:56589 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R56591:56594 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R56596:56599 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R56590:56590 LF.Imp <> b:263 var
R56595:56595 LF.Imp <> c:265 var
R56578:56579 LF.Imp <> st:264 var
R56605:56606 LF.Imp <> st:264 var
binder 56633:56634 <> st:266
binder 56636:56638 <> st':267
binder 56640:56643 <> st'':268
binder 56645:56645 <> b:269
binder 56647:56647 <> c:270
R56673:56682 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56666:56668 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56656:56660 LF.Imp <> beval def
R56662:56663 LF.Imp <> st:266 var
R56665:56665 LF.Imp <> b:269 var
R56669:56672 LF.Imp <> :::'true' not
R56699:56708 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56685:56689 LF.Imp <> :::x_'=['_x_']=>'_x not
R56691:56695 LF.Imp <> :::x_'=['_x_']=>'_x not
R56690:56690 LF.Imp <> c:270 var
R56683:56684 LF.Imp <> st:266 var
R56696:56698 LF.Imp <> st':267 var
R56741:56750 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56712:56715 LF.Imp <> :::x_'=['_x_']=>'_x not
R56732:56736 LF.Imp <> :::x_'=['_x_']=>'_x not
R56716:56721 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R56723:56726 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R56728:56731 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R56722:56722 LF.Imp <> b:269 var
R56727:56727 LF.Imp <> c:270 var
R56709:56711 LF.Imp <> st':267 var
R56737:56740 LF.Imp <> st'':268 var
R56753:56757 LF.Imp <> :::x_'=['_x_']=>'_x not
R56774:56778 LF.Imp <> :::x_'=['_x_']=>'_x not
R56758:56763 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R56765:56768 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R56770:56773 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R56764:56764 LF.Imp <> b:269 var
R56769:56769 LF.Imp <> c:270 var
R56751:56752 LF.Imp <> st:266 var
R56779:56782 LF.Imp <> st'':268 var
scheme 55932:55936 <> ceval_ind
scheme 55932:55936 <> ceval_sind
R56815:56819 LF.Imp <> ceval ind
not 56793:56793 <> :::x_'=['_x_']=>'_x
def 57089:57102 <> ceval_example1
R57115:57123 LF.Imp <> :::x_'=['_x_']=>'_x not
R57195:57202 LF.Imp <> :::x_'=['_x_']=>'_x not
R57220:57220 LF.Imp <> :::x_'=['_x_']=>'_x not
R57130:57136 LF.Imp <> :com:com_scope:x_';'_x not
R57125:57128 LF.Imp <> :com:com_scope:x_':='_x not
R57124:57124 LF.Imp <> X def
R57137:57139 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R57148:57160 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R57167:57179 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R57186:57194 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R57140:57140 LF.Imp <> :com:com_scope:'('_x_')' not
R57147:57147 LF.Imp <> :com:com_scope:'('_x_')' not
R57142:57145 LF.Imp <> :com::x_'<='_x not
R57141:57141 LF.Imp <> X def
R57162:57165 LF.Imp <> :com:com_scope:x_':='_x not
R57161:57161 LF.Imp <> Y def
R57181:57184 LF.Imp <> :com:com_scope:x_':='_x not
R57180:57180 LF.Imp <> Z def
R57107:57114 LF.Imp <> empty_st def
R57204:57208 LF.Maps <> :::x_'!->'_x_';'_x not
R57210:57212 LF.Maps <> :::x_'!->'_x_';'_x not
R57214:57218 LF.Imp <> :::x_'!->'_x not
R57213:57213 LF.Imp <> X def
R57203:57203 LF.Imp <> Z def
R57297:57301 LF.Imp <> :::x_'!->'_x not
R57296:57296 LF.Imp <> X def
R57284:57288 LF.Imp <> E_Seq constr
R57297:57301 LF.Imp <> :::x_'!->'_x not
R57296:57296 LF.Imp <> X def
R57284:57288 LF.Imp <> E_Seq constr
R57345:57350 LF.Imp <> E_Asgn constr
R57345:57350 LF.Imp <> E_Asgn constr
R57397:57405 LF.Imp <> E_IfFalse constr
R57397:57405 LF.Imp <> E_IfFalse constr
R57439:57444 LF.Imp <> E_Asgn constr
R57439:57444 LF.Imp <> E_Asgn constr
def 57531:57544 <> ceval_example2
R57557:57564 LF.Imp <> :::x_'=['_x_']=>'_x not
R57595:57602 LF.Imp <> :::x_'=['_x_']=>'_x not
R57630:57630 LF.Imp <> :::x_'=['_x_']=>'_x not
R57571:57576 LF.Imp <> :com:com_scope:x_';'_x not
R57566:57569 LF.Imp <> :com:com_scope:x_':='_x not
R57565:57565 LF.Imp <> X def
R57583:57588 LF.Imp <> :com:com_scope:x_';'_x not
R57578:57581 LF.Imp <> :com:com_scope:x_':='_x not
R57577:57577 LF.Imp <> Y def
R57590:57593 LF.Imp <> :com:com_scope:x_':='_x not
R57589:57589 LF.Imp <> Z def
R57549:57556 LF.Imp <> empty_st def
R57604:57608 LF.Maps <> :::x_'!->'_x_';'_x not
R57610:57612 LF.Maps <> :::x_'!->'_x_';'_x not
R57614:57618 LF.Maps <> :::x_'!->'_x_';'_x not
R57620:57622 LF.Maps <> :::x_'!->'_x_';'_x not
R57624:57628 LF.Imp <> :::x_'!->'_x not
R57623:57623 LF.Imp <> X def
R57613:57613 LF.Imp <> Y def
R57603:57603 LF.Imp <> Z def
R57661:57665 LF.Imp <> :::x_'!->'_x not
R57660:57660 LF.Imp <> X def
R57648:57652 LF.Imp <> E_Seq constr
R57661:57665 LF.Imp <> :::x_'!->'_x not
R57660:57660 LF.Imp <> X def
R57648:57652 LF.Imp <> E_Seq constr
R57680:57685 LF.Imp <> E_Asgn constr
R57680:57685 LF.Imp <> E_Asgn constr
R57724:57728 LF.Maps <> :::x_'!->'_x_';'_x not
R57730:57732 LF.Maps <> :::x_'!->'_x_';'_x not
R57734:57738 LF.Imp <> :::x_'!->'_x not
R57733:57733 LF.Imp <> X def
R57723:57723 LF.Imp <> Y def
R57711:57715 LF.Imp <> E_Seq constr
R57724:57728 LF.Maps <> :::x_'!->'_x_';'_x not
R57730:57732 LF.Maps <> :::x_'!->'_x_';'_x not
R57734:57738 LF.Imp <> :::x_'!->'_x not
R57733:57733 LF.Imp <> X def
R57723:57723 LF.Imp <> Y def
R57711:57715 LF.Imp <> E_Seq constr
R57755:57760 LF.Imp <> E_Asgn constr
R57755:57760 LF.Imp <> E_Asgn constr
R57788:57793 LF.Imp <> E_Asgn constr
R57788:57793 LF.Imp <> E_Asgn constr
R57855:57868 LF.Imp <> ceval_example2 ex
def 58279:58286 <> pup_to_n
R58290:58292 LF.Imp <> com ind
R58299:58301 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R58378:58380 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R58308:58315 LF.Imp <> :com:com_scope:x_';'_x not
R58303:58306 LF.Imp <> :com:com_scope:x_':='_x not
R58302:58302 LF.Imp <> Y def
R58316:58321 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R58328:58338 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R58369:58377 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R58323:58326 LF.Imp <> :com::x_'<>'_x not
R58322:58322 LF.Imp <> X def
R58349:58358 LF.Imp <> :com:com_scope:x_';'_x not
R58340:58343 LF.Imp <> :com:com_scope:x_':='_x not
R58339:58339 LF.Imp <> Y def
R58345:58347 LF.Imp <> :com::x_'+'_x not
R58344:58344 LF.Imp <> Y def
R58348:58348 LF.Imp <> X def
R58360:58363 LF.Imp <> :com:com_scope:x_':='_x not
R58359:58359 LF.Imp <> X def
R58365:58367 LF.Imp <> :com::x_'-'_x not
R58364:58364 LF.Imp <> X def
prf 58392:58405 <> pup_to_2_ceval
R58411:58411 LF.Imp <> :::x_'=['_x_']=>'_x not
R58419:58427 LF.Imp <> :::x_'=['_x_']=>'_x not
R58436:58443 LF.Imp <> :::x_'=['_x_']=>'_x not
R58501:58501 LF.Imp <> :::x_'=['_x_']=>'_x not
R58428:58435 LF.Imp <> pup_to_n def
R58413:58417 LF.Imp <> :::x_'!->'_x not
R58412:58412 LF.Imp <> X def
R58445:58449 LF.Maps <> :::x_'!->'_x_';'_x not
R58451:58453 LF.Maps <> :::x_'!->'_x_';'_x not
R58455:58459 LF.Maps <> :::x_'!->'_x_';'_x not
R58461:58463 LF.Maps <> :::x_'!->'_x_';'_x not
R58465:58469 LF.Maps <> :::x_'!->'_x_';'_x not
R58471:58473 LF.Maps <> :::x_'!->'_x_';'_x not
R58475:58479 LF.Maps <> :::x_'!->'_x_';'_x not
R58481:58483 LF.Maps <> :::x_'!->'_x_';'_x not
R58485:58489 LF.Maps <> :::x_'!->'_x_';'_x not
R58491:58493 LF.Maps <> :::x_'!->'_x_';'_x not
R58495:58499 LF.Imp <> :::x_'!->'_x not
R58494:58494 LF.Imp <> X def
R58484:58484 LF.Imp <> Y def
R58474:58474 LF.Imp <> Y def
R58464:58464 LF.Imp <> X def
R58454:58454 LF.Imp <> Y def
R58444:58444 LF.Imp <> X def
R58532:58536 LF.Maps <> :::x_'!->'_x_';'_x not
R58538:58540 LF.Maps <> :::x_'!->'_x_';'_x not
R58542:58546 LF.Imp <> :::x_'!->'_x not
R58541:58541 LF.Imp <> X def
R58531:58531 LF.Imp <> Y def
R58519:58523 LF.Imp <> E_Seq constr
R58532:58536 LF.Maps <> :::x_'!->'_x_';'_x not
R58538:58540 LF.Maps <> :::x_'!->'_x_';'_x not
R58542:58546 LF.Imp <> :::x_'!->'_x not
R58541:58541 LF.Imp <> X def
R58531:58531 LF.Imp <> Y def
R58519:58523 LF.Imp <> E_Seq constr
R58559:58564 LF.Imp <> E_Asgn constr
R58559:58564 LF.Imp <> E_Asgn constr
R58607:58611 LF.Maps <> :::x_'!->'_x_';'_x not
R58613:58615 LF.Maps <> :::x_'!->'_x_';'_x not
R58617:58621 LF.Maps <> :::x_'!->'_x_';'_x not
R58623:58625 LF.Maps <> :::x_'!->'_x_';'_x not
R58627:58631 LF.Maps <> :::x_'!->'_x_';'_x not
R58633:58635 LF.Maps <> :::x_'!->'_x_';'_x not
R58637:58641 LF.Imp <> :::x_'!->'_x not
R58636:58636 LF.Imp <> X def
R58626:58626 LF.Imp <> Y def
R58616:58616 LF.Imp <> Y def
R58606:58606 LF.Imp <> X def
R58588:58598 LF.Imp <> E_WhileTrue constr
R58607:58611 LF.Maps <> :::x_'!->'_x_';'_x not
R58613:58615 LF.Maps <> :::x_'!->'_x_';'_x not
R58617:58621 LF.Maps <> :::x_'!->'_x_';'_x not
R58623:58625 LF.Maps <> :::x_'!->'_x_';'_x not
R58627:58631 LF.Maps <> :::x_'!->'_x_';'_x not
R58633:58635 LF.Maps <> :::x_'!->'_x_';'_x not
R58637:58641 LF.Imp <> :::x_'!->'_x not
R58636:58636 LF.Imp <> X def
R58626:58626 LF.Imp <> Y def
R58616:58616 LF.Imp <> Y def
R58606:58606 LF.Imp <> X def
R58588:58598 LF.Imp <> E_WhileTrue constr
R58680:58684 LF.Maps <> :::x_'!->'_x_';'_x not
R58686:58688 LF.Maps <> :::x_'!->'_x_';'_x not
R58690:58694 LF.Maps <> :::x_'!->'_x_';'_x not
R58696:58698 LF.Maps <> :::x_'!->'_x_';'_x not
R58700:58704 LF.Imp <> :::x_'!->'_x not
R58699:58699 LF.Imp <> X def
R58689:58689 LF.Imp <> Y def
R58679:58679 LF.Imp <> Y def
R58667:58671 LF.Imp <> E_Seq constr
R58680:58684 LF.Maps <> :::x_'!->'_x_';'_x not
R58686:58688 LF.Maps <> :::x_'!->'_x_';'_x not
R58690:58694 LF.Maps <> :::x_'!->'_x_';'_x not
R58696:58698 LF.Maps <> :::x_'!->'_x_';'_x not
R58700:58704 LF.Imp <> :::x_'!->'_x not
R58699:58699 LF.Imp <> X def
R58689:58689 LF.Imp <> Y def
R58679:58679 LF.Imp <> Y def
R58667:58671 LF.Imp <> E_Seq constr
R58717:58722 LF.Imp <> E_Asgn constr
R58717:58722 LF.Imp <> E_Asgn constr
R58746:58751 LF.Imp <> E_Asgn constr
R58746:58751 LF.Imp <> E_Asgn constr
R58794:58798 LF.Maps <> :::x_'!->'_x_';'_x not
R58800:58802 LF.Maps <> :::x_'!->'_x_';'_x not
R58804:58808 LF.Maps <> :::x_'!->'_x_';'_x not
R58810:58812 LF.Maps <> :::x_'!->'_x_';'_x not
R58814:58818 LF.Maps <> :::x_'!->'_x_';'_x not
R58820:58822 LF.Maps <> :::x_'!->'_x_';'_x not
R58824:58828 LF.Maps <> :::x_'!->'_x_';'_x not
R58830:58832 LF.Maps <> :::x_'!->'_x_';'_x not
R58834:58838 LF.Maps <> :::x_'!->'_x_';'_x not
R58840:58842 LF.Maps <> :::x_'!->'_x_';'_x not
R58844:58848 LF.Imp <> :::x_'!->'_x not
R58843:58843 LF.Imp <> X def
R58833:58833 LF.Imp <> Y def
R58823:58823 LF.Imp <> Y def
R58813:58813 LF.Imp <> X def
R58803:58803 LF.Imp <> Y def
R58793:58793 LF.Imp <> X def
R58775:58785 LF.Imp <> E_WhileTrue constr
R58794:58798 LF.Maps <> :::x_'!->'_x_';'_x not
R58800:58802 LF.Maps <> :::x_'!->'_x_';'_x not
R58804:58808 LF.Maps <> :::x_'!->'_x_';'_x not
R58810:58812 LF.Maps <> :::x_'!->'_x_';'_x not
R58814:58818 LF.Maps <> :::x_'!->'_x_';'_x not
R58820:58822 LF.Maps <> :::x_'!->'_x_';'_x not
R58824:58828 LF.Maps <> :::x_'!->'_x_';'_x not
R58830:58832 LF.Maps <> :::x_'!->'_x_';'_x not
R58834:58838 LF.Maps <> :::x_'!->'_x_';'_x not
R58840:58842 LF.Maps <> :::x_'!->'_x_';'_x not
R58844:58848 LF.Imp <> :::x_'!->'_x not
R58843:58843 LF.Imp <> X def
R58833:58833 LF.Imp <> Y def
R58823:58823 LF.Imp <> Y def
R58813:58813 LF.Imp <> X def
R58803:58803 LF.Imp <> Y def
R58793:58793 LF.Imp <> X def
R58775:58785 LF.Imp <> E_WhileTrue constr
R58887:58891 LF.Maps <> :::x_'!->'_x_';'_x not
R58893:58895 LF.Maps <> :::x_'!->'_x_';'_x not
R58897:58901 LF.Maps <> :::x_'!->'_x_';'_x not
R58903:58905 LF.Maps <> :::x_'!->'_x_';'_x not
R58907:58911 LF.Maps <> :::x_'!->'_x_';'_x not
R58913:58915 LF.Maps <> :::x_'!->'_x_';'_x not
R58917:58921 LF.Maps <> :::x_'!->'_x_';'_x not
R58923:58925 LF.Maps <> :::x_'!->'_x_';'_x not
R58927:58931 LF.Imp <> :::x_'!->'_x not
R58926:58926 LF.Imp <> X def
R58916:58916 LF.Imp <> Y def
R58906:58906 LF.Imp <> Y def
R58896:58896 LF.Imp <> X def
R58886:58886 LF.Imp <> Y def
R58874:58878 LF.Imp <> E_Seq constr
R58887:58891 LF.Maps <> :::x_'!->'_x_';'_x not
R58893:58895 LF.Maps <> :::x_'!->'_x_';'_x not
R58897:58901 LF.Maps <> :::x_'!->'_x_';'_x not
R58903:58905 LF.Maps <> :::x_'!->'_x_';'_x not
R58907:58911 LF.Maps <> :::x_'!->'_x_';'_x not
R58913:58915 LF.Maps <> :::x_'!->'_x_';'_x not
R58917:58921 LF.Maps <> :::x_'!->'_x_';'_x not
R58923:58925 LF.Maps <> :::x_'!->'_x_';'_x not
R58927:58931 LF.Imp <> :::x_'!->'_x not
R58926:58926 LF.Imp <> X def
R58916:58916 LF.Imp <> Y def
R58906:58906 LF.Imp <> Y def
R58896:58896 LF.Imp <> X def
R58886:58886 LF.Imp <> Y def
R58874:58878 LF.Imp <> E_Seq constr
R58944:58949 LF.Imp <> E_Asgn constr
R58944:58949 LF.Imp <> E_Asgn constr
R58973:58978 LF.Imp <> E_Asgn constr
R58973:58978 LF.Imp <> E_Asgn constr
R59002:59013 LF.Imp <> E_WhileFalse constr
R59002:59013 LF.Imp <> E_WhileFalse constr
prf 59716:59734 <> ceval_deterministic
binder 59744:59744 <> c:271
binder 59746:59747 <> st:272
binder 59749:59751 <> st1:273
binder 59753:59755 <> st2:274
R59778:59787 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59765:59768 LF.Imp <> :::x_'=['_x_']=>'_x not
R59770:59774 LF.Imp <> :::x_'=['_x_']=>'_x not
R59769:59769 LF.Imp <> c:271 var
R59763:59764 LF.Imp <> st:272 var
R59775:59777 LF.Imp <> st1:273 var
R59803:59811 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59790:59793 LF.Imp <> :::x_'=['_x_']=>'_x not
R59795:59799 LF.Imp <> :::x_'=['_x_']=>'_x not
R59794:59794 LF.Imp <> c:271 var
R59788:59789 LF.Imp <> st:272 var
R59800:59802 LF.Imp <> st2:274 var
R59815:59817 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59812:59814 LF.Imp <> st1:273 var
R59818:59820 LF.Imp <> st2:274 var
prf 61200:61209 <> plus2_spec
binder 61220:61221 <> st:275
binder 61223:61223 <> n:276
binder 61225:61227 <> st':277
R61240:61245 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61236:61238 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61232:61233 LF.Imp <> st:275 var
R61235:61235 LF.Imp <> X def
R61239:61239 LF.Imp <> n:276 var
R61265:61270 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61248:61251 LF.Imp <> :::x_'=['_x_']=>'_x not
R61257:61261 LF.Imp <> :::x_'=['_x_']=>'_x not
R61252:61256 LF.Imp <> plus2 def
R61246:61247 LF.Imp <> st:275 var
R61262:61264 LF.Imp <> st':277 var
R61276:61278 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61271:61273 LF.Imp <> st':277 var
R61275:61275 LF.Imp <> X def
R61280:61282 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R61279:61279 LF.Imp <> n:276 var
R61609:61619 LF.Maps <> t_update_eq thm
R61609:61619 LF.Maps <> t_update_eq thm
prf 61760:61774 <> XtimesYinZ_spec
binder 61785:61786 <> st:278
binder 61788:61788 <> n:279
binder 61790:61790 <> m:280
binder 61792:61794 <> st':281
R61807:61812 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61803:61805 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61799:61800 LF.Imp <> st:278 var
R61802:61802 LF.Imp <> X def
R61806:61806 LF.Imp <> n:279 var
R61821:61826 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61817:61819 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61813:61814 LF.Imp <> st:278 var
R61816:61816 LF.Imp <> Y def
R61820:61820 LF.Imp <> m:280 var
R61851:61856 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61829:61832 LF.Imp <> :::x_'=['_x_']=>'_x not
R61843:61847 LF.Imp <> :::x_'=['_x_']=>'_x not
R61833:61842 LF.Imp <> XtimesYinZ def
R61827:61828 LF.Imp <> st:278 var
R61848:61850 LF.Imp <> st':281 var
R61862:61864 Coq.Init.Logic <> ::type_scope:x_'='_x not
R61857:61859 LF.Imp <> st':281 var
R61861:61861 LF.Imp <> Z def
R61866:61868 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R61865:61865 LF.Imp <> n:279 var
R61869:61869 LF.Imp <> m:280 var
R61966:61976 LF.Maps <> t_update_eq thm
R61966:61976 LF.Maps <> t_update_eq thm
def 62037:62068 <> manual_grade_for_XtimesYinZ_spec
R62072:62077 Coq.Init.Datatypes <> option ind
R62083:62083 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R62080:62082 Coq.Init.Datatypes <> nat ind
R62084:62089 Coq.Strings.String <> string ind
R62095:62098 Coq.Init.Datatypes <> None constr
prf 62198:62213 <> loop_never_stops
binder 62224:62225 <> st:282
binder 62227:62229 <> st':283
R62234:62235 Coq.Init.Logic <> ::type_scope:'~'_x not
R62254:62254 Coq.Init.Logic <> ::type_scope:'~'_x not
R62238:62241 LF.Imp <> :::x_'=['_x_']=>'_x not
R62246:62250 LF.Imp <> :::x_'=['_x_']=>'_x not
R62242:62245 LF.Imp <> loop def
R62236:62237 LF.Imp <> st:282 var
R62251:62253 LF.Imp <> st':283 var
R62295:62298 LF.Imp <> loop def
R62322:62324 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R62347:62349 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R62325:62330 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R62335:62338 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R62343:62346 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R62331:62334 LF.Imp <> :com::'true' not
R62339:62342 LF.Imp <> :com:com_scope:'skip' not
R62322:62324 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R62347:62349 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R62325:62330 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R62335:62338 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R62343:62346 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R62331:62334 LF.Imp <> :com::'true' not
R62339:62342 LF.Imp <> :com:com_scope:'skip' not
def 62871:62879 <> no_whiles
R62886:62888 LF.Imp <> com ind
binder 62882:62882 <> c:284
R62893:62896 Coq.Init.Datatypes <> bool ind
R62909:62909 LF.Imp <> c:284 var
R62920:62922 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R62927:62929 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R62923:62926 LF.Imp <> :com:com_scope:'skip' not
R62940:62943 LF.Imp <> :::'true' not
R62949:62951 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R62958:62960 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R62953:62956 LF.Imp <> :com:com_scope:x_':='_x not
R62971:62974 LF.Imp <> :::'true' not
R62980:62982 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R62990:62992 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R62985:62987 LF.Imp <> :com:com_scope:x_';'_x not
R63003:63006 Coq.Init.Datatypes <> andb def
R63024:63032 LF.Imp <> no_whiles:285 def
R63009:63017 LF.Imp <> no_whiles:285 def
R63042:63044 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R63069:63071 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R63045:63047 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R63049:63054 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R63057:63062 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R63065:63068 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R63082:63085 Coq.Init.Datatypes <> andb def
R63103:63111 LF.Imp <> no_whiles:285 def
R63088:63096 LF.Imp <> no_whiles:285 def
R63121:63123 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R63140:63142 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R63124:63129 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R63131:63134 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R63136:63139 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R63154:63158 LF.Imp <> :::'false' not
ind 63454:63463 <> no_whilesR
constr 63485:63488 <> skip
constr 63518:63523 <> assign
constr 63565:63567 <> seq
constr 63648:63650 <> if_
R63469:63472 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R63466:63468 LF.Imp <> com ind
R63492:63501 LF.Imp <> no_whilesR:287 ind
R63503:63505 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R63510:63512 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R63506:63509 LF.Imp <> :com:com_scope:'skip' not
binder 63534:63534 <> x:289
binder 63536:63536 <> a:290
R63539:63548 LF.Imp <> no_whilesR:287 ind
R63550:63552 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R63557:63559 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R63554:63555 LF.Imp <> :com:com_scope:x_':='_x not
R63553:63553 LF.Imp <> x:289 var
R63556:63556 LF.Imp <> a:290 var
binder 63578:63579 <> c1:291
binder 63581:63582 <> c2:292
R63598:63601 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R63585:63594 LF.Imp <> no_whilesR:287 ind
R63596:63597 LF.Imp <> c1:291 var
R63615:63618 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R63602:63611 LF.Imp <> no_whilesR:287 ind
R63613:63614 LF.Imp <> c2:292 var
R63619:63628 LF.Imp <> no_whilesR:287 ind
R63630:63632 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R63640:63642 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R63635:63637 LF.Imp <> :com:com_scope:x_';'_x not
R63633:63634 LF.Imp <> c1:291 var
R63638:63639 LF.Imp <> c2:292 var
binder 63661:63662 <> c1:293
binder 63664:63665 <> c2:294
binder 63667:63667 <> b:295
R63683:63686 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R63670:63679 LF.Imp <> no_whilesR:287 ind
R63681:63682 LF.Imp <> c1:293 var
R63700:63703 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R63687:63696 LF.Imp <> no_whilesR:287 ind
R63698:63699 LF.Imp <> c2:294 var
R63704:63713 LF.Imp <> no_whilesR:287 ind
R63715:63717 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R63742:63744 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R63718:63720 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R63722:63727 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R63730:63735 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R63738:63741 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R63721:63721 LF.Imp <> b:295 var
R63728:63729 LF.Imp <> c1:293 var
R63736:63737 LF.Imp <> c2:294 var
scheme 63454:63463 <> no_whilesR_ind
scheme 63454:63463 <> no_whilesR_sind
prf 63757:63769 <> no_whiles_eqv
binder 63781:63781 <> c:296
R63802:63806 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R63795:63797 Coq.Init.Logic <> ::type_scope:x_'='_x not
R63784:63792 LF.Imp <> no_whiles def
R63794:63794 LF.Imp <> c:296 var
R63798:63801 LF.Imp <> :::'true' not
R63807:63816 LF.Imp <> no_whilesR ind
R63818:63818 LF.Imp <> c:296 var
R63941:63949 Coq.Init.Datatypes <> andb_prop thm
R63941:63949 Coq.Init.Datatypes <> andb_prop thm
R63941:63949 Coq.Init.Datatypes <> andb_prop thm
R63941:63949 Coq.Init.Datatypes <> andb_prop thm
R63941:63949 Coq.Init.Datatypes <> andb_prop thm
R64110:64122 Coq.Bool.Bool <> andb_true_iff thm
R64110:64122 Coq.Bool.Bool <> andb_true_iff thm
R64110:64122 Coq.Bool.Bool <> andb_true_iff thm
R64110:64122 Coq.Bool.Bool <> andb_true_iff thm
R64110:64122 Coq.Bool.Bool <> andb_true_iff thm
prf 64485:64505 <> no_whiles_terminating
binder 64516:64516 <> c:297
R64533:64538 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R64521:64530 LF.Imp <> no_whilesR ind
R64532:64532 LF.Imp <> c:297 var
binder 64546:64547 <> st:298
R64550:64556 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R64560:64565 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 64557:64559 <> st':299
R64568:64571 LF.Imp <> :::x_'=['_x_']=>'_x not
R64573:64577 LF.Imp <> :::x_'=['_x_']=>'_x not
R64572:64572 LF.Imp <> c:297 var
R64566:64567 LF.Imp <> st:298 var
R64578:64580 LF.Imp <> st':299 var
R64651:64656 LF.Imp <> E_Skip constr
R64651:64656 LF.Imp <> E_Skip constr
R64683:64688 LF.Maps <> :::x_'!->'_x_';'_x not
R64699:64702 LF.Maps <> :::x_'!->'_x_';'_x not
R64689:64693 LF.Imp <> aeval def
R64683:64688 LF.Maps <> :::x_'!->'_x_';'_x not
R64699:64702 LF.Maps <> :::x_'!->'_x_';'_x not
R64689:64693 LF.Imp <> aeval def
R64719:64724 LF.Imp <> E_Asgn constr
R64719:64724 LF.Imp <> E_Asgn constr
R64772:64778 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R64782:64783 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 64779:64781 <> st':300
R64786:64789 LF.Imp <> :::x_'=['_x_']=>'_x not
R64792:64796 LF.Imp <> :::x_'=['_x_']=>'_x not
R64797:64799 LF.Imp <> st':300 var
R64772:64778 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R64782:64783 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 64779:64781 <> st':301
R64786:64789 LF.Imp <> :::x_'=['_x_']=>'_x not
R64792:64796 LF.Imp <> :::x_'=['_x_']=>'_x not
R64797:64799 LF.Imp <> st':301 var
R64888:64894 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R64899:64900 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 64895:64898 <> st'':302
R64904:64907 LF.Imp <> :::x_'=['_x_']=>'_x not
R64910:64914 LF.Imp <> :::x_'=['_x_']=>'_x not
R64915:64918 LF.Imp <> st'':302 var
R64888:64894 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R64899:64900 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 64895:64898 <> st'':303
R64904:64907 LF.Imp <> :::x_'=['_x_']=>'_x not
R64910:64914 LF.Imp <> :::x_'=['_x_']=>'_x not
R64915:64918 LF.Imp <> st'':303 var
R65018:65022 LF.Imp <> E_Seq constr
R65018:65022 LF.Imp <> E_Seq constr
R65112:65118 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R65122:65123 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 65119:65121 <> st':304
R65126:65129 LF.Imp <> :::x_'=['_x_']=>'_x not
R65132:65136 LF.Imp <> :::x_'=['_x_']=>'_x not
R65137:65139 LF.Imp <> st':304 var
R65112:65118 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R65122:65123 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 65119:65121 <> st':305
R65126:65129 LF.Imp <> :::x_'=['_x_']=>'_x not
R65132:65136 LF.Imp <> :::x_'=['_x_']=>'_x not
R65137:65139 LF.Imp <> st':305 var
R65228:65234 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R65239:65240 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 65235:65238 <> st'':306
R65243:65246 LF.Imp <> :::x_'=['_x_']=>'_x not
R65249:65253 LF.Imp <> :::x_'=['_x_']=>'_x not
R65254:65257 LF.Imp <> st'':306 var
R65228:65234 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R65239:65240 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 65235:65238 <> st'':307
R65243:65246 LF.Imp <> :::x_'=['_x_']=>'_x not
R65249:65253 LF.Imp <> :::x_'=['_x_']=>'_x not
R65254:65257 LF.Imp <> st'':307 var
R65342:65346 LF.Imp <> beval def
R65342:65346 LF.Imp <> beval def
R65385:65392 LF.Imp <> E_IfTrue constr
R65385:65392 LF.Imp <> E_IfTrue constr
R65458:65466 LF.Imp <> E_IfFalse constr
R65458:65466 LF.Imp <> E_IfFalse constr
def 65571:65608 <> manual_grade_for_no_whiles_terminating
R65612:65617 Coq.Init.Datatypes <> option ind
R65623:65623 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R65620:65622 Coq.Init.Datatypes <> nat ind
R65624:65629 Coq.Strings.String <> string ind
R65635:65638 Coq.Init.Datatypes <> None constr
ind 67178:67183 <> sinstr
constr 67197:67201 <> SPush
constr 67215:67219 <> SLoad
constr 67236:67240 <> SPlus
constr 67244:67249 <> SMinus
constr 67253:67257 <> SMult
R67208:67210 Coq.Init.Datatypes <> nat ind
binder 67204:67204 <> n:310
R67226:67231 Coq.Strings.String <> string ind
binder 67222:67222 <> x:311
scheme 67178:67183 <> sinstr_rect
scheme 67178:67183 <> sinstr_ind
scheme 67178:67183 <> sinstr_rec
scheme 67178:67183 <> sinstr_sind
def 68031:68039 <> s_execute
R68047:68051 LF.Imp <> state def
binder 68042:68043 <> st:312
R68063:68066 Coq.Init.Datatypes <> list ind
R68068:68070 Coq.Init.Datatypes <> nat ind
binder 68055:68059 <> stack:313
R68100:68103 Coq.Init.Datatypes <> list ind
R68105:68110 LF.Imp <> sinstr ind
binder 68093:68096 <> prog:314
R68132:68135 Coq.Init.Datatypes <> list ind
R68137:68139 Coq.Init.Datatypes <> nat ind
R68152:68155 LF.Imp <> prog:314 var
R68166:68167 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R68172:68176 LF.Imp <> stack:313 var
R68189:68192 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R68182:68186 LF.Imp <> SPush constr
R68201:68209 LF.Imp <> s_execute:315 def
R68216:68219 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R68220:68224 LF.Imp <> stack:313 var
R68211:68212 LF.Imp <> st:312 var
R68243:68246 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R68236:68240 LF.Imp <> SLoad constr
R68255:68263 LF.Imp <> s_execute:315 def
R68279:68282 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R68269:68273 LF.Imp <> aeval def
R68275:68276 LF.Imp <> st:312 var
R68283:68287 LF.Imp <> stack:313 var
R68265:68266 LF.Imp <> st:312 var
R68304:68307 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R68299:68303 LF.Imp <> SPlus constr
R68327:68331 LF.Imp <> stack:313 var
R68346:68349 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R68352:68355 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R68365:68373 LF.Imp <> s_execute:315 def
R68386:68389 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R68381:68383 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R68375:68376 LF.Imp <> st:312 var
R68413:68421 LF.Imp <> s_execute:315 def
R68426:68430 LF.Imp <> stack:313 var
R68423:68424 LF.Imp <> st:312 var
R68455:68458 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R68449:68454 LF.Imp <> SMinus constr
R68478:68482 LF.Imp <> stack:313 var
R68497:68500 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R68503:68506 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R68516:68524 LF.Imp <> s_execute:315 def
R68537:68540 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R68532:68534 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R68526:68527 LF.Imp <> st:312 var
R68564:68572 LF.Imp <> s_execute:315 def
R68577:68581 LF.Imp <> stack:313 var
R68574:68575 LF.Imp <> st:312 var
R68605:68608 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R68600:68604 LF.Imp <> SMult constr
R68628:68632 LF.Imp <> stack:313 var
R68647:68650 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R68653:68656 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R68666:68674 LF.Imp <> s_execute:315 def
R68687:68690 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R68682:68684 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R68676:68677 LF.Imp <> st:312 var
R68714:68722 LF.Imp <> s_execute:315 def
R68727:68731 LF.Imp <> stack:313 var
R68724:68725 LF.Imp <> st:312 var
R68760:68768 LF.Imp <> s_execute def
def 68780:68789 <> s_execute1
R68862:68867 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68798:68806 LF.Imp <> s_execute def
R68808:68815 LF.Imp <> empty_st def
R68817:68818 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R68827:68827 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R68835:68836 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R68844:68845 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R68853:68854 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R68861:68861 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R68828:68832 LF.Imp <> SPush constr
R68837:68841 LF.Imp <> SPush constr
R68846:68850 LF.Imp <> SPush constr
R68855:68860 LF.Imp <> SMinus constr
R68868:68868 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R68870:68871 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R68873:68873 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
def 68910:68919 <> s_execute2
R68993:68998 Coq.Init.Logic <> ::type_scope:x_'='_x not
R68928:68936 LF.Imp <> s_execute def
R68940:68944 LF.Imp <> :::x_'!->'_x not
R68939:68939 LF.Imp <> X def
R68948:68948 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R68950:68950 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R68952:68952 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R68961:68961 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R68969:68970 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R68978:68979 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R68985:68986 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R68992:68992 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R68962:68966 LF.Imp <> SPush constr
R68971:68975 LF.Imp <> SLoad constr
R68977:68977 LF.Imp <> X def
R68980:68984 LF.Imp <> SMult constr
R68987:68991 LF.Imp <> SPlus constr
R68999:68999 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R69002:69003 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R69005:69005 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
def 69242:69250 <> s_compile
R69257:69260 LF.Imp <> aexp ind
binder 69253:69253 <> e:320
R69265:69268 Coq.Init.Datatypes <> list ind
R69270:69275 LF.Imp <> sinstr ind
R69288:69288 LF.Imp <> e:320 var
R69299:69302 LF.Imp <> ANum constr
R69309:69309 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R69317:69317 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R69310:69314 LF.Imp <> SPush constr
R69323:69325 LF.Imp <> AId constr
R69332:69332 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R69340:69340 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R69333:69337 LF.Imp <> SLoad constr
R69346:69350 LF.Imp <> APlus constr
R69373:69376 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R69361:69369 LF.Imp <> s_compile:321 def
R69389:69392 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R69377:69385 LF.Imp <> s_compile:321 def
R69393:69393 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R69399:69399 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R69394:69398 LF.Imp <> SPlus constr
R69405:69410 LF.Imp <> AMinus constr
R69433:69436 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R69421:69429 LF.Imp <> s_compile:321 def
R69449:69452 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R69437:69445 LF.Imp <> s_compile:321 def
R69453:69453 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R69460:69460 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R69454:69459 LF.Imp <> SMinus constr
R69466:69470 LF.Imp <> AMult constr
R69493:69496 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R69481:69489 LF.Imp <> s_compile:321 def
R69509:69512 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R69497:69505 LF.Imp <> s_compile:321 def
R69513:69513 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R69519:69519 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R69514:69518 LF.Imp <> SMult constr
def 69626:69635 <> s_compile1
R69668:69672 Coq.Init.Logic <> ::type_scope:x_'='_x not
R69641:69649 LF.Imp <> s_compile def
R69651:69653 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R69665:69667 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R69655:69657 LF.Imp <> :com::x_'-'_x not
R69654:69654 LF.Imp <> X def
R69658:69658 LF.Imp <> :com:com_scope:'('_x_')' not
R69664:69664 LF.Imp <> :com:com_scope:'('_x_')' not
R69660:69662 LF.Imp <> :com::x_'*'_x not
R69663:69663 LF.Imp <> Y def
R69673:69673 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R69681:69682 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R69690:69691 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R69699:69700 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R69706:69707 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R69714:69714 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R69674:69678 LF.Imp <> SLoad constr
R69680:69680 LF.Imp <> X def
R69683:69687 LF.Imp <> SPush constr
R69692:69696 LF.Imp <> SLoad constr
R69698:69698 LF.Imp <> Y def
R69701:69705 LF.Imp <> SMult constr
R69708:69713 LF.Imp <> SMinus constr
prf 70035:70045 <> execute_app
binder 70056:70057 <> st:323
binder 70059:70060 <> p1:324
binder 70062:70063 <> p2:325
binder 70065:70069 <> stack:326
R70103:70105 Coq.Init.Logic <> ::type_scope:x_'='_x not
R70074:70082 LF.Imp <> s_execute def
R70084:70085 LF.Imp <> st:323 var
R70087:70091 LF.Imp <> stack:326 var
R70096:70099 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R70094:70095 LF.Imp <> p1:324 var
R70100:70101 LF.Imp <> p2:325 var
R70106:70114 LF.Imp <> s_execute def
R70116:70117 LF.Imp <> st:323 var
R70120:70128 LF.Imp <> s_execute def
R70130:70131 LF.Imp <> st:323 var
R70133:70137 LF.Imp <> stack:326 var
R70139:70140 LF.Imp <> p1:324 var
R70143:70144 LF.Imp <> p2:325 var
prf 70669:70689 <> s_compile_correct_aux
binder 70700:70701 <> st:327
binder 70703:70703 <> e:328
binder 70705:70709 <> stack:329
R70746:70748 Coq.Init.Logic <> ::type_scope:x_'='_x not
R70714:70722 LF.Imp <> s_execute def
R70724:70725 LF.Imp <> st:327 var
R70727:70731 LF.Imp <> stack:329 var
R70734:70742 LF.Imp <> s_compile def
R70744:70744 LF.Imp <> e:328 var
R70759:70762 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R70749:70753 LF.Imp <> aeval def
R70755:70756 LF.Imp <> st:327 var
R70758:70758 LF.Imp <> e:328 var
R70763:70767 LF.Imp <> stack:329 var
R70893:70903 LF.Imp <> execute_app thm
R70893:70903 LF.Imp <> execute_app thm
R70893:70903 LF.Imp <> execute_app thm
R70893:70903 LF.Imp <> execute_app thm
R70893:70903 LF.Imp <> execute_app thm
R70893:70903 LF.Imp <> execute_app thm
R70893:70903 LF.Imp <> execute_app thm
R70893:70903 LF.Imp <> execute_app thm
R70893:70903 LF.Imp <> execute_app thm
R70893:70903 LF.Imp <> execute_app thm
R70893:70903 LF.Imp <> execute_app thm
R70893:70903 LF.Imp <> execute_app thm
R70893:70903 LF.Imp <> execute_app thm
R70893:70903 LF.Imp <> execute_app thm
R70893:70903 LF.Imp <> execute_app thm
R70893:70903 LF.Imp <> execute_app thm
R70979:70986 Coq.Arith.PeanoNat Nat add_comm thm
R70979:70986 Coq.Arith.PeanoNat Nat add_comm thm
R70979:70986 Coq.Arith.PeanoNat Nat add_comm thm
R71018:71025 Coq.Arith.PeanoNat Nat mul_comm thm
R71018:71025 Coq.Arith.PeanoNat Nat mul_comm thm
R71018:71025 Coq.Arith.PeanoNat Nat mul_comm thm
prf 71128:71144 <> s_compile_correct
R71161:71165 LF.Imp <> state def
binder 71156:71157 <> st:330
R71173:71176 LF.Imp <> aexp ind
binder 71169:71169 <> e:331
R71211:71213 Coq.Init.Logic <> ::type_scope:x_'='_x not
R71182:71190 LF.Imp <> s_execute def
R71192:71193 LF.Imp <> st:330 var
R71195:71196 Coq.Lists.List ListNotations ::list_scope:'['_']' not
R71199:71207 LF.Imp <> s_compile def
R71209:71209 LF.Imp <> e:331 var
R71214:71215 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R71226:71227 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R71216:71220 LF.Imp <> aeval def
R71222:71223 LF.Imp <> st:330 var
R71225:71225 LF.Imp <> e:331 var
R71260:71280 LF.Imp <> s_compile_correct_aux thm
R71260:71280 LF.Imp <> s_compile_correct_aux thm
def 72199:72217 <> beval_short_circuit
R72225:72229 LF.Imp <> state def
binder 72220:72221 <> st:332
R72237:72240 LF.Imp <> bexp ind
binder 72233:72233 <> b:333
R72245:72248 Coq.Init.Datatypes <> bool ind
R72261:72261 LF.Imp <> b:333 var
R72272:72273 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R72278:72279 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R72274:72277 LF.Imp <> :com::'true' not
R72289:72292 LF.Imp <> :::'true' not
R72298:72299 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R72305:72306 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R72300:72304 LF.Imp <> :com::'false' not
R72315:72319 LF.Imp <> :::'false' not
R72325:72326 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R72334:72335 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R72329:72331 LF.Imp <> :com::x_'='_x not
R72342:72342 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R72354:72359 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R72371:72371 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R72343:72347 LF.Imp <> aeval def
R72349:72350 LF.Imp <> st:332 var
R72360:72364 LF.Imp <> aeval def
R72366:72367 LF.Imp <> st:332 var
R72377:72378 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R72387:72388 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R72381:72384 LF.Imp <> :com::x_'<>'_x not
R72394:72397 Coq.Init.Datatypes <> negb def
R72400:72400 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R72412:72417 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R72429:72429 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R72401:72405 LF.Imp <> aeval def
R72407:72408 LF.Imp <> st:332 var
R72418:72422 LF.Imp <> aeval def
R72424:72425 LF.Imp <> st:332 var
R72436:72437 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R72446:72447 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R72440:72443 LF.Imp <> :com::x_'<='_x not
R72453:72453 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R72465:72471 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R72483:72483 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R72454:72458 LF.Imp <> aeval def
R72460:72461 LF.Imp <> st:332 var
R72472:72476 LF.Imp <> aeval def
R72478:72479 LF.Imp <> st:332 var
R72489:72490 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R72498:72499 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R72493:72495 LF.Imp <> :com::x_'>'_x not
R72506:72509 Coq.Init.Datatypes <> negb def
R72512:72512 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R72524:72530 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R72542:72542 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R72513:72517 LF.Imp <> aeval def
R72519:72520 LF.Imp <> st:332 var
R72531:72535 LF.Imp <> aeval def
R72537:72538 LF.Imp <> st:332 var
R72549:72550 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R72555:72556 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R72551:72552 LF.Imp <> :com::'~'_x not
R72566:72569 Coq.Init.Datatypes <> negb def
R72572:72576 LF.Imp <> beval def
R72578:72579 LF.Imp <> st:332 var
R72589:72590 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R72599:72600 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R72593:72596 LF.Imp <> :com::x_'&&'_x not
R72612:72616 LF.Imp <> beval def
R72618:72619 LF.Imp <> st:332 var
R72651:72655 LF.Imp <> :::'false' not
R72660:72664 LF.Imp <> :::'false' not
R72688:72691 LF.Imp <> :::'true' not
R72696:72700 LF.Imp <> beval def
R72702:72703 LF.Imp <> st:332 var
mod 72759:72766 <> BreakImp
ind 73104:73106 BreakImp com
constr 73122:73126 BreakImp CSkip
constr 73132:73137 BreakImp CBreak
constr 73181:73185 BreakImp CAsgn
constr 73215:73218 BreakImp CSeq
constr 73238:73240 BreakImp CIf
constr 73271:73276 BreakImp CWhile
R73192:73197 Coq.Strings.String <> string ind
binder 73188:73188 <> x:337
R73205:73208 LF.Imp <> aexp ind
binder 73201:73201 <> a:338
R73229:73231 LF.Imp <> com:335 ind
binder 73221:73222 <> c1:339
binder 73224:73225 <> c2:340
R73247:73250 LF.Imp <> bexp ind
binder 73243:73243 <> b:341
R73262:73264 LF.Imp <> com:335 ind
binder 73254:73255 <> c1:342
binder 73257:73258 <> c2:343
R73283:73286 LF.Imp <> bexp ind
binder 73279:73279 <> b:344
R73294:73296 LF.Imp <> com:335 ind
binder 73290:73290 <> c:345
scheme 73104:73106 BreakImp com_rect
scheme 73104:73106 BreakImp com_ind
scheme 73104:73106 BreakImp com_rec
scheme 73104:73106 BreakImp com_sind
R73323:73328 LF.Imp BreakImp CBreak constr
not 73310:73310 BreakImp :com::'break'
R73389:73393 LF.Imp BreakImp CSkip constr
not 73367:73367 BreakImp :com:com_scope:'skip'
R73467:73471 LF.Imp BreakImp CAsgn constr
not 73444:73444 BreakImp :com:com_scope:x_':='_x
R73627:73630 LF.Imp BreakImp CSeq constr
not 73606:73606 BreakImp :com:com_scope:x_';'_x
R73765:73767 LF.Imp BreakImp CIf constr
not 73719:73719 BreakImp :com:com_scope:'if'_x_'then'_x_'else'_x_'end'
R73932:73937 LF.Imp BreakImp CWhile constr
not 73894:73894 BreakImp :com:com_scope:'while'_x_'do'_x_'end'
ind 75072:75077 BreakImp result
constr 75093:75101 BreakImp SContinue
constr 75107:75112 BreakImp SBreak
scheme 75072:75077 BreakImp result_rect
scheme 75072:75077 BreakImp result_ind
scheme 75072:75077 BreakImp result_rec
scheme 75072:75077 BreakImp result_sind
ind 77527:77531 BreakImp ceval
constr 77582:77587 BreakImp E_Skip
constr 77643:77649 BreakImp E_Break
constr 77702:77707 BreakImp E_Asgn
constr 77806:77811 BreakImp E_Seq1
constr 77949:77954 BreakImp E_Seq2
constr 78054:78061 BreakImp E_IfTrue
constr 78200:78208 BreakImp E_IfFalse
constr 78348:78359 BreakImp E_WhileTrue1
constr 78496:78507 BreakImp E_WhileTrue2
R77538:77541 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R77535:77537 LF.Imp BreakImp com ind
R77547:77550 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R77542:77546 LF.Imp <> state def
R77557:77560 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R77551:77556 LF.Imp BreakImp result ind
R77566:77569 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R77561:77565 LF.Imp <> state def
R78744:78748 LF.Imp <> ceval:349 ind
binder 77598:77599 <> st:350
R77610:77613 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R77619:77623 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R77626:77628 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R77614:77618 LF.Imp BreakImp CSkip constr
R77608:77609 LF.Imp <> st:350 var
R77629:77637 LF.Imp BreakImp SContinue constr
R77624:77625 LF.Imp <> st:350 var
binder 77660:77661 <> st:351
R77672:77675 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R77681:77685 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R77688:77690 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R77676:77680 LF.Imp BreakImp :com::'break' not
R77670:77671 LF.Imp <> st:351 var
R77691:77696 LF.Imp BreakImp SBreak constr
R77686:77687 LF.Imp <> st:351 var
binder 77718:77718 <> x:352
binder 77720:77720 <> a:353
binder 77722:77723 <> st:354
binder 77725:77725 <> n:355
R77748:77757 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R77744:77746 Coq.Init.Logic <> ::type_scope:x_'='_x not
R77734:77738 LF.Imp <> aeval def
R77740:77741 LF.Imp <> st:354 var
R77743:77743 LF.Imp <> a:353 var
R77747:77747 LF.Imp <> n:355 var
R77760:77763 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R77770:77775 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R77788:77791 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R77765:77768 LF.Imp BreakImp :com:com_scope:x_':='_x not
R77764:77764 LF.Imp <> x:352 var
R77769:77769 LF.Imp <> a:353 var
R77758:77759 LF.Imp <> st:354 var
R77792:77800 LF.Imp BreakImp SContinue constr
R77777:77781 LF.Maps <> :::x_'!->'_x_';'_x not
R77783:77785 LF.Maps <> :::x_'!->'_x_';'_x not
R77786:77787 LF.Imp <> st:354 var
R77776:77776 LF.Imp <> x:352 var
R77782:77782 LF.Imp <> n:355 var
binder 77822:77823 <> c1:356
binder 77825:77826 <> c2:357
binder 77828:77828 <> s:358
binder 77830:77831 <> st:359
binder 77833:77835 <> st':360
binder 77837:77840 <> st'':361
R77877:77886 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R77851:77854 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R77857:77861 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R77865:77867 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R77855:77856 LF.Imp <> c1:356 var
R77849:77850 LF.Imp <> st:359 var
R77868:77876 LF.Imp BreakImp SContinue constr
R77862:77864 LF.Imp <> st':360 var
R77909:77918 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R77890:77893 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R77896:77900 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R77905:77907 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R77894:77895 LF.Imp <> c2:357 var
R77887:77889 LF.Imp <> st':360 var
R77908:77908 LF.Imp <> s:358 var
R77901:77904 LF.Imp <> st'':361 var
R77921:77924 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R77931:77935 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R77940:77942 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R77927:77928 LF.Imp BreakImp :com:com_scope:x_';'_x not
R77925:77926 LF.Imp <> c1:356 var
R77929:77930 LF.Imp <> c2:357 var
R77919:77920 LF.Imp <> st:359 var
R77943:77943 LF.Imp <> s:358 var
R77936:77939 LF.Imp <> st'':361 var
binder 77965:77966 <> c1:362
binder 77968:77969 <> c2:363
binder 77971:77972 <> st:364
binder 77974:77976 <> st':365
R78010:78019 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R77987:77990 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R77993:77997 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78001:78003 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R77991:77992 LF.Imp <> c1:362 var
R77985:77986 LF.Imp <> st:364 var
R78004:78009 LF.Imp BreakImp SBreak constr
R77998:78000 LF.Imp <> st':365 var
R78022:78025 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78032:78036 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78040:78042 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78028:78029 LF.Imp BreakImp :com:com_scope:x_';'_x not
R78026:78027 LF.Imp <> c1:362 var
R78030:78031 LF.Imp <> c2:363 var
R78020:78021 LF.Imp <> st:364 var
R78043:78048 LF.Imp BreakImp SBreak constr
R78037:78039 LF.Imp <> st':365 var
binder 78072:78072 <> b:366
binder 78074:78075 <> c1:367
binder 78077:78078 <> c2:368
binder 78080:78080 <> s:369
binder 78082:78083 <> st:370
binder 78085:78087 <> st':371
R78113:78122 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R78106:78108 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78096:78100 LF.Imp <> beval def
R78102:78103 LF.Imp <> st:370 var
R78105:78105 LF.Imp <> b:366 var
R78109:78112 LF.Imp <> :::'true' not
R78143:78152 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R78125:78128 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78131:78135 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78139:78141 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78129:78130 LF.Imp <> c1:367 var
R78123:78124 LF.Imp <> st:370 var
R78142:78142 LF.Imp <> s:369 var
R78136:78138 LF.Imp <> st':371 var
R78155:78158 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78183:78187 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78191:78193 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78159:78161 LF.Imp BreakImp :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R78163:78168 LF.Imp BreakImp :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R78171:78176 LF.Imp BreakImp :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R78179:78182 LF.Imp BreakImp :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R78162:78162 LF.Imp <> b:366 var
R78169:78170 LF.Imp <> c1:367 var
R78177:78178 LF.Imp <> c2:368 var
R78153:78154 LF.Imp <> st:370 var
R78194:78194 LF.Imp <> s:369 var
R78188:78190 LF.Imp <> st':371 var
binder 78219:78219 <> b:372
binder 78221:78222 <> c1:373
binder 78224:78225 <> c2:374
binder 78227:78227 <> s:375
binder 78229:78230 <> st:376
binder 78232:78234 <> st':377
R78261:78270 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R78253:78255 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78243:78247 LF.Imp <> beval def
R78249:78250 LF.Imp <> st:376 var
R78252:78252 LF.Imp <> b:372 var
R78256:78260 LF.Imp <> :::'false' not
R78291:78300 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R78273:78276 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78279:78283 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78287:78289 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78277:78278 LF.Imp <> c2:374 var
R78271:78272 LF.Imp <> st:376 var
R78290:78290 LF.Imp <> s:375 var
R78284:78286 LF.Imp <> st':377 var
R78303:78306 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78331:78335 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78339:78341 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78307:78309 LF.Imp BreakImp :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R78311:78316 LF.Imp BreakImp :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R78319:78324 LF.Imp BreakImp :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R78327:78330 LF.Imp BreakImp :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R78310:78310 LF.Imp <> b:372 var
R78317:78318 LF.Imp <> c1:373 var
R78325:78326 LF.Imp <> c2:374 var
R78301:78302 LF.Imp <> st:376 var
R78342:78342 LF.Imp <> s:375 var
R78336:78338 LF.Imp <> st':377 var
binder 78370:78370 <> b:378
binder 78372:78372 <> c:379
binder 78374:78375 <> st:380
binder 78377:78379 <> st':381
R78405:78414 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R78398:78400 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78388:78392 LF.Imp <> beval def
R78394:78395 LF.Imp <> st:380 var
R78397:78397 LF.Imp <> b:378 var
R78401:78404 LF.Imp <> :::'true' not
R78439:78448 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R78417:78420 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78422:78426 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78430:78432 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78421:78421 LF.Imp <> c:379 var
R78415:78416 LF.Imp <> st:380 var
R78433:78438 LF.Imp BreakImp SBreak constr
R78427:78429 LF.Imp <> st':381 var
R78451:78454 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78471:78475 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78479:78481 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78455:78460 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R78462:78465 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R78467:78470 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R78461:78461 LF.Imp <> b:378 var
R78466:78466 LF.Imp <> c:379 var
R78449:78450 LF.Imp <> st:380 var
R78482:78490 LF.Imp BreakImp SContinue constr
R78476:78478 LF.Imp <> st':381 var
binder 78518:78518 <> b:382
binder 78520:78520 <> c:383
binder 78522:78523 <> st:384
binder 78525:78527 <> st':385
binder 78529:78532 <> st'':386
R78558:78567 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R78551:78553 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78541:78545 LF.Imp <> beval def
R78547:78548 LF.Imp <> st:384 var
R78550:78550 LF.Imp <> b:382 var
R78554:78557 LF.Imp <> :::'true' not
R78595:78604 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R78570:78573 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78575:78579 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78583:78585 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78574:78574 LF.Imp <> c:383 var
R78568:78569 LF.Imp <> st:384 var
R78586:78594 LF.Imp BreakImp SContinue constr
R78580:78582 LF.Imp <> st':385 var
R78649:78658 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R78608:78611 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78628:78632 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78637:78639 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78612:78617 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R78619:78622 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R78624:78627 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R78618:78618 LF.Imp <> b:382 var
R78623:78623 LF.Imp <> c:383 var
R78605:78607 LF.Imp <> st':385 var
R78640:78648 LF.Imp BreakImp SContinue constr
R78633:78636 LF.Imp <> st'':386 var
R78661:78664 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78681:78685 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78690:78692 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78665:78670 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R78672:78675 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R78677:78680 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R78671:78671 LF.Imp <> b:382 var
R78676:78676 LF.Imp <> c:383 var
R78659:78660 LF.Imp <> st:384 var
R78693:78701 LF.Imp BreakImp SContinue constr
R78686:78689 LF.Imp <> st'':386 var
scheme 77527:77531 BreakImp ceval_ind
scheme 77527:77531 BreakImp ceval_sind
R78744:78748 LF.Imp BreakImp ceval ind
not 78712:78712 BreakImp :::x_'=['_x_']=>'_x_'/'_x
prf 78846:78857 BreakImp break_ignore
binder 78868:78868 <> c:387
binder 78870:78871 <> st:388
binder 78873:78875 <> st':389
binder 78877:78877 <> s:390
R78911:78919 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R78887:78890 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78899:78903 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78907:78909 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R78896:78897 LF.Imp BreakImp :com:com_scope:x_';'_x not
R78891:78895 LF.Imp BreakImp :com::'break' not
R78898:78898 LF.Imp <> c:387 var
R78885:78886 LF.Imp <> st:388 var
R78910:78910 LF.Imp <> s:390 var
R78904:78906 LF.Imp <> st':389 var
R78922:78924 Coq.Init.Logic <> ::type_scope:x_'='_x not
R78920:78921 LF.Imp <> st:388 var
R78925:78927 LF.Imp <> st':389 var
prf 79030:79043 BreakImp while_continue
binder 79054:79054 <> b:391
binder 79056:79056 <> c:392
binder 79058:79059 <> st:393
binder 79061:79063 <> st':394
binder 79065:79065 <> s:395
R79104:79109 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R79072:79075 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79092:79096 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79100:79102 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79076:79081 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R79083:79086 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R79088:79091 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R79082:79082 LF.Imp <> b:391 var
R79087:79087 LF.Imp <> c:392 var
R79070:79071 LF.Imp <> st:393 var
R79103:79103 LF.Imp <> s:395 var
R79097:79099 LF.Imp <> st':394 var
R79111:79113 Coq.Init.Logic <> ::type_scope:x_'='_x not
R79110:79110 LF.Imp <> s:395 var
R79114:79122 LF.Imp BreakImp SContinue constr
prf 79189:79208 BreakImp while_stops_on_break
binder 79219:79219 <> b:396
binder 79221:79221 <> c:397
binder 79223:79224 <> st:398
binder 79226:79228 <> st':399
R79250:79255 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R79243:79245 Coq.Init.Logic <> ::type_scope:x_'='_x not
R79233:79237 LF.Imp <> beval def
R79239:79240 LF.Imp <> st:398 var
R79242:79242 LF.Imp <> b:396 var
R79246:79249 LF.Imp <> :::'true' not
R79280:79285 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R79258:79261 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79263:79267 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79271:79273 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79262:79262 LF.Imp <> c:397 var
R79256:79257 LF.Imp <> st:398 var
R79274:79279 LF.Imp BreakImp SBreak constr
R79268:79270 LF.Imp <> st':399 var
R79288:79291 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79308:79312 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79316:79318 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79292:79297 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R79299:79302 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R79304:79307 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R79298:79298 LF.Imp <> b:396 var
R79303:79303 LF.Imp <> c:397 var
R79286:79287 LF.Imp <> st:398 var
R79319:79327 LF.Imp BreakImp SContinue constr
R79313:79315 LF.Imp <> st':399 var
R79375:79386 LF.Imp BreakImp E_WhileTrue1 constr
R79375:79386 LF.Imp BreakImp E_WhileTrue1 constr
prf 79423:79434 BreakImp seq_continue
binder 79445:79446 <> c1:400
binder 79448:79449 <> c2:401
binder 79451:79452 <> st:402
binder 79454:79456 <> st':403
binder 79458:79461 <> st'':404
R79494:79499 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R79468:79471 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79474:79478 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79482:79484 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79472:79473 LF.Imp <> c1:400 var
R79466:79467 LF.Imp <> st:402 var
R79485:79493 LF.Imp BreakImp SContinue constr
R79479:79481 LF.Imp <> st':403 var
R79530:79535 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R79503:79506 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79509:79513 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79518:79520 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79507:79508 LF.Imp <> c2:401 var
R79500:79502 LF.Imp <> st':403 var
R79521:79529 LF.Imp BreakImp SContinue constr
R79514:79517 LF.Imp <> st'':404 var
R79538:79541 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79549:79553 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79558:79560 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79544:79546 LF.Imp BreakImp :com:com_scope:x_';'_x not
R79542:79543 LF.Imp <> c1:400 var
R79547:79548 LF.Imp <> c2:401 var
R79536:79537 LF.Imp <> st:402 var
R79561:79569 LF.Imp BreakImp SContinue constr
R79554:79557 LF.Imp <> st'':404 var
R79595:79600 LF.Imp BreakImp E_Seq1 constr
R79595:79600 LF.Imp BreakImp E_Seq1 constr
prf 79638:79655 BreakImp seq_stops_on_break
binder 79666:79667 <> c1:405
binder 79669:79670 <> c2:406
binder 79672:79673 <> st:407
binder 79675:79677 <> st':408
R79707:79712 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R79684:79687 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79690:79694 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79698:79700 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79688:79689 LF.Imp <> c1:405 var
R79682:79683 LF.Imp <> st:407 var
R79701:79706 LF.Imp BreakImp SBreak constr
R79695:79697 LF.Imp <> st':408 var
R79715:79718 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79726:79730 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79734:79736 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79721:79723 LF.Imp BreakImp :com:com_scope:x_';'_x not
R79719:79720 LF.Imp <> c1:405 var
R79724:79725 LF.Imp <> c2:406 var
R79713:79714 LF.Imp <> st:407 var
R79737:79742 LF.Imp BreakImp SBreak constr
R79731:79733 LF.Imp <> st':408 var
R79768:79773 LF.Imp BreakImp E_Seq2 constr
R79768:79773 LF.Imp BreakImp E_Seq2 constr
prf 79878:79893 BreakImp while_break_true
binder 79904:79904 <> b:409
binder 79906:79906 <> c:410
binder 79908:79909 <> st:411
binder 79911:79913 <> st':412
R79960:79965 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R79920:79923 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79940:79944 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79948:79950 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R79924:79929 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R79931:79934 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R79936:79939 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R79930:79930 LF.Imp <> b:409 var
R79935:79935 LF.Imp <> c:410 var
R79918:79919 LF.Imp <> st:411 var
R79951:79959 LF.Imp BreakImp SContinue constr
R79945:79947 LF.Imp <> st':412 var
R79984:79989 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R79977:79979 Coq.Init.Logic <> ::type_scope:x_'='_x not
R79966:79970 LF.Imp <> beval def
R79972:79974 LF.Imp <> st':412 var
R79976:79976 LF.Imp <> b:409 var
R79980:79983 LF.Imp <> :::'true' not
R79990:79996 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R80001:80002 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 79997:80000 <> st'':413
R80007:80010 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R80012:80016 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R80020:80022 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R80011:80011 LF.Imp <> c:410 var
R80003:80006 LF.Imp <> st'':413 var
R80023:80028 LF.Imp BreakImp SBreak constr
R80017:80019 LF.Imp <> st':412 var
R80061:80062 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R80079:80080 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R80063:80068 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R80070:80073 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R80075:80078 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R80061:80062 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R80079:80080 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R80063:80068 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R80070:80073 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R80075:80078 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R80238:80240 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80216:80218 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R80235:80237 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R80219:80224 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R80226:80229 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R80231:80234 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R80241:80243 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R80260:80262 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R80244:80249 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R80251:80254 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R80256:80259 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R80238:80240 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80216:80218 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R80235:80237 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R80219:80224 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R80226:80229 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R80231:80234 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R80241:80243 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R80260:80262 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R80244:80249 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R80251:80254 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
R80256:80259 LF.Imp BreakImp :com:com_scope:'while'_x_'do'_x_'end' not
prf 80503:80521 BreakImp ceval_deterministic
R80534:80536 LF.Imp BreakImp com ind
binder 80532:80532 <> c:414
binder 80539:80540 <> st:415
binder 80542:80544 <> st1:416
binder 80546:80548 <> st2:417
binder 80550:80551 <> s1:418
binder 80553:80554 <> s2:419
R80582:80590 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R80564:80567 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R80569:80573 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R80577:80579 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R80568:80568 LF.Imp <> c:414 var
R80562:80563 LF.Imp <> st:415 var
R80580:80581 LF.Imp <> s1:418 var
R80574:80576 LF.Imp <> st1:416 var
R80611:80619 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R80593:80596 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R80598:80602 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R80606:80608 LF.Imp BreakImp :::x_'=['_x_']=>'_x_'/'_x not
R80597:80597 LF.Imp <> c:414 var
R80591:80592 LF.Imp <> st:415 var
R80609:80610 LF.Imp <> s2:419 var
R80603:80605 LF.Imp <> st2:417 var
R80629:80632 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R80623:80625 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80620:80622 LF.Imp <> st1:416 var
R80626:80628 LF.Imp <> st2:417 var
R80635:80637 Coq.Init.Logic <> ::type_scope:x_'='_x not
R80633:80634 LF.Imp <> s1:418 var
R80638:80639 LF.Imp <> s2:419 var
R81410:81417 LF.Imp BreakImp <> mod

DIGEST 350e0be6f874ac5f9f90c475fac38203
FLF.Tactics
R698:701 LF.Poly <> <> lib
prf 977:982 <> silly1
R1000:1002 Coq.Init.Datatypes <> nat ind
binder 994:994 <> n:1
binder 996:996 <> m:2
R1013:1018 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1009:1011 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1008:1008 LF.Tactics <> n:1 var
R1012:1012 LF.Tactics <> m:2 var
R1020:1022 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1019:1019 LF.Tactics <> n:1 var
R1023:1023 LF.Tactics <> m:2 var
prf 1540:1545 <> silly2
R1567:1569 Coq.Init.Datatypes <> nat ind
binder 1557:1557 <> n:3
binder 1559:1559 <> m:4
binder 1561:1561 <> o:5
binder 1563:1563 <> p:6
R1580:1585 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1576:1578 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1575:1575 LF.Tactics <> n:3 var
R1579:1579 LF.Tactics <> m:4 var
R1586:1586 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1609:1615 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1592:1595 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1588:1590 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1587:1587 LF.Tactics <> n:3 var
R1591:1591 LF.Tactics <> m:4 var
R1601:1603 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1596:1596 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1598:1598 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1600:1600 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1597:1597 LF.Tactics <> n:3 var
R1599:1599 LF.Tactics <> o:5 var
R1604:1604 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1606:1606 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1608:1608 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1605:1605 LF.Tactics <> m:4 var
R1607:1607 LF.Tactics <> p:6 var
R1621:1623 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1616:1616 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1618:1618 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1620:1620 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1617:1617 LF.Tactics <> n:3 var
R1619:1619 LF.Tactics <> o:5 var
R1624:1624 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1626:1626 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1628:1628 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1625:1625 LF.Tactics <> m:4 var
R1627:1627 LF.Tactics <> p:6 var
prf 2162:2168 <> silly2a
R2186:2188 Coq.Init.Datatypes <> nat ind
binder 2180:2180 <> n:7
binder 2182:2182 <> m:8
R2207:2213 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2199:2201 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2194:2194 LF.Poly <> :::'('_x_','_x_')' not
R2196:2196 LF.Poly <> :::'('_x_','_x_')' not
R2198:2198 LF.Poly <> :::'('_x_','_x_')' not
R2195:2195 LF.Tactics <> n:7 var
R2197:2197 LF.Tactics <> n:7 var
R2202:2202 LF.Poly <> :::'('_x_','_x_')' not
R2204:2204 LF.Poly <> :::'('_x_','_x_')' not
R2206:2206 LF.Poly <> :::'('_x_','_x_')' not
R2203:2203 LF.Tactics <> m:8 var
R2205:2205 LF.Tactics <> m:8 var
R2214:2214 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2261:2267 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2229:2231 Coq.Init.Datatypes <> nat ind
binder 2223:2223 <> q:9
binder 2225:2225 <> r:10
R2248:2251 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2240:2242 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2235:2235 LF.Poly <> :::'('_x_','_x_')' not
R2237:2237 LF.Poly <> :::'('_x_','_x_')' not
R2239:2239 LF.Poly <> :::'('_x_','_x_')' not
R2236:2236 LF.Tactics <> q:9 var
R2238:2238 LF.Tactics <> q:9 var
R2243:2243 LF.Poly <> :::'('_x_','_x_')' not
R2245:2245 LF.Poly <> :::'('_x_','_x_')' not
R2247:2247 LF.Poly <> :::'('_x_','_x_')' not
R2244:2244 LF.Tactics <> r:10 var
R2246:2246 LF.Tactics <> r:10 var
R2255:2257 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2252:2252 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2254:2254 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2253:2253 LF.Tactics <> q:9 var
R2258:2258 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2260:2260 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2259:2259 LF.Tactics <> r:10 var
R2271:2273 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2268:2268 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2270:2270 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2269:2269 LF.Tactics <> n:7 var
R2274:2274 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2276:2276 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2275:2275 LF.Tactics <> m:8 var
prf 2475:2482 <> silly_ex
binder 2493:2493 <> p:11
R2498:2498 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2544:2550 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 2506:2506 <> n:12
R2522:2525 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2515:2517 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2509:2512 LF.Basics <> even def
R2514:2514 LF.Tactics <> n:12 var
R2518:2521 LF.Basics <> true constr
R2536:2538 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2526:2529 LF.Basics <> even def
R2532:2532 Coq.Init.Datatypes <> S constr
R2534:2534 LF.Tactics <> n:12 var
R2539:2543 LF.Basics <> false constr
R2551:2551 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2592:2598 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 2559:2559 <> n:13
R2576:2579 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2568:2570 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2562:2565 LF.Basics <> even def
R2567:2567 LF.Tactics <> n:13 var
R2571:2575 LF.Basics <> false constr
R2585:2587 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2580:2582 LF.Basics <> odd def
R2584:2584 LF.Tactics <> n:13 var
R2588:2591 LF.Basics <> true constr
R2612:2617 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2605:2607 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2599:2602 LF.Basics <> even def
R2604:2604 LF.Tactics <> p:11 var
R2608:2611 LF.Basics <> true constr
R2627:2629 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2618:2620 LF.Basics <> odd def
R2623:2623 Coq.Init.Datatypes <> S constr
R2625:2625 LF.Tactics <> p:11 var
R2630:2633 LF.Basics <> true constr
prf 2971:2976 <> silly3
R2994:2996 Coq.Init.Datatypes <> nat ind
binder 2988:2988 <> n:14
binder 2990:2990 <> m:15
R3007:3012 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3003:3005 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3002:3002 LF.Tactics <> n:14 var
R3006:3006 LF.Tactics <> m:15 var
R3014:3016 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3013:3013 LF.Tactics <> m:15 var
R3017:3017 LF.Tactics <> n:14 var
prf 3624:3636 <> rev_exercise1
R3655:3658 LF.Poly <> list ind
R3660:3662 Coq.Init.Datatypes <> nat ind
binder 3648:3648 <> l:16
binder 3650:3651 <> l':17
R3678:3683 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3669:3671 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3668:3668 LF.Tactics <> l:16 var
R3672:3674 LF.Poly <> rev def
R3676:3677 LF.Tactics <> l':17 var
R3686:3688 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3684:3685 LF.Tactics <> l':17 var
R3689:3691 LF.Poly <> rev def
R3693:3693 LF.Tactics <> l:16 var
R3730:3732 LF.Poly <> rev def
R3770:3783 LF.Poly <> rev_involutive thm
R3770:3783 LF.Poly <> rev_involutive thm
def 4924:4939 <> trans_eq_example
R4965:4967 Coq.Init.Datatypes <> nat ind
binder 4951:4951 <> a:18
binder 4953:4953 <> b:19
binder 4955:4955 <> c:20
binder 4957:4957 <> d:21
binder 4959:4959 <> e:22
binder 4961:4961 <> f:23
R4989:4997 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4981:4983 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4976:4976 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4978:4978 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4980:4980 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4977:4977 LF.Tactics <> a:18 var
R4979:4979 LF.Tactics <> b:19 var
R4984:4984 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4986:4986 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4988:4988 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4985:4985 LF.Tactics <> c:20 var
R4987:4987 LF.Tactics <> d:21 var
R5011:5019 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5003:5005 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4998:4998 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5000:5000 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5002:5002 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4999:4999 LF.Tactics <> c:20 var
R5001:5001 LF.Tactics <> d:21 var
R5006:5006 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5008:5008 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5010:5010 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5007:5007 LF.Tactics <> e:22 var
R5009:5009 LF.Tactics <> f:23 var
R5025:5027 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5020:5020 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5022:5022 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5024:5024 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5021:5021 LF.Tactics <> a:18 var
R5023:5023 LF.Tactics <> b:19 var
R5028:5028 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5030:5030 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5032:5032 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5029:5029 LF.Tactics <> e:22 var
R5031:5031 LF.Tactics <> f:23 var
prf 5292:5299 <> trans_eq
binder 5311:5311 <> X:24
R5328:5328 LF.Tactics <> X:24 var
binder 5320:5320 <> n:25
binder 5322:5322 <> m:26
binder 5324:5324 <> o:27
R5339:5342 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5335:5337 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5334:5334 LF.Tactics <> n:25 var
R5338:5338 LF.Tactics <> m:26 var
R5348:5351 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5344:5346 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5343:5343 LF.Tactics <> m:26 var
R5347:5347 LF.Tactics <> o:27 var
R5353:5355 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5352:5352 LF.Tactics <> n:25 var
R5356:5356 LF.Tactics <> o:27 var
def 5611:5627 <> trans_eq_example'
R5653:5655 Coq.Init.Datatypes <> nat ind
binder 5639:5639 <> a:28
binder 5641:5641 <> b:29
binder 5643:5643 <> c:30
binder 5645:5645 <> d:31
binder 5647:5647 <> e:32
binder 5649:5649 <> f:33
R5677:5685 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5669:5671 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5664:5664 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5666:5666 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5668:5668 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5665:5665 LF.Tactics <> a:28 var
R5667:5667 LF.Tactics <> b:29 var
R5672:5672 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5674:5674 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5676:5676 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5673:5673 LF.Tactics <> c:30 var
R5675:5675 LF.Tactics <> d:31 var
R5699:5707 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5691:5693 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5686:5686 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5688:5688 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5690:5690 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5687:5687 LF.Tactics <> c:30 var
R5689:5689 LF.Tactics <> d:31 var
R5694:5694 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5696:5696 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5698:5698 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5695:5695 LF.Tactics <> e:32 var
R5697:5697 LF.Tactics <> f:33 var
R5713:5715 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5708:5708 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5710:5710 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5712:5712 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5709:5709 LF.Tactics <> a:28 var
R5711:5711 LF.Tactics <> b:29 var
R5716:5716 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5718:5718 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5720:5720 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5717:5717 LF.Tactics <> e:32 var
R5719:5719 LF.Tactics <> f:33 var
R6193:6193 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6195:6195 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6197:6197 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6175:6182 LF.Tactics <> trans_eq thm
R6193:6193 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6195:6195 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6197:6197 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6175:6182 LF.Tactics <> trans_eq thm
def 6677:6694 <> trans_eq_example''
R6720:6722 Coq.Init.Datatypes <> nat ind
binder 6706:6706 <> a:34
binder 6708:6708 <> b:35
binder 6710:6710 <> c:36
binder 6712:6712 <> d:37
binder 6714:6714 <> e:38
binder 6716:6716 <> f:39
R6744:6752 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6736:6738 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6731:6731 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6733:6733 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6735:6735 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6732:6732 LF.Tactics <> a:34 var
R6734:6734 LF.Tactics <> b:35 var
R6739:6739 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6741:6741 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6743:6743 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6740:6740 LF.Tactics <> c:36 var
R6742:6742 LF.Tactics <> d:37 var
R6766:6774 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6758:6760 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6753:6753 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6755:6755 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6757:6757 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6754:6754 LF.Tactics <> c:36 var
R6756:6756 LF.Tactics <> d:37 var
R6761:6761 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6763:6763 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6765:6765 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6762:6762 LF.Tactics <> e:38 var
R6764:6764 LF.Tactics <> f:39 var
R6780:6782 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6775:6775 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6777:6777 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6779:6779 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6776:6776 LF.Tactics <> a:34 var
R6778:6778 LF.Tactics <> b:35 var
R6783:6783 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6785:6785 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6787:6787 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6784:6784 LF.Tactics <> e:38 var
R6786:6786 LF.Tactics <> f:39 var
R6842:6842 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6844:6844 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6846:6846 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6842:6842 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6844:6844 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6846:6846 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 6959:6975 <> trans_eq_exercise
R6997:6999 Coq.Init.Datatypes <> nat ind
binder 6987:6987 <> n:40
binder 6989:6989 <> m:41
binder 6991:6991 <> o:42
binder 6993:6993 <> p:43
R7024:7032 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7009:7012 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7023:7023 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7008:7008 LF.Tactics <> m:41 var
R7013:7020 LF.Basics <> minustwo def
R7022:7022 LF.Tactics <> o:42 var
R7044:7052 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7033:7033 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7039:7042 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7035:7037 LF.Basics <> ::nat_scope:x_'+'_x not
R7034:7034 LF.Tactics <> n:40 var
R7038:7038 LF.Tactics <> p:43 var
R7043:7043 LF.Tactics <> m:41 var
R7053:7053 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7059:7063 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7074:7074 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7055:7057 LF.Basics <> ::nat_scope:x_'+'_x not
R7054:7054 LF.Tactics <> n:40 var
R7058:7058 LF.Tactics <> p:43 var
R7064:7071 LF.Basics <> minustwo def
R7073:7073 LF.Tactics <> o:42 var
R7118:7125 LF.Tactics <> trans_eq thm
R7118:7125 LF.Tactics <> trans_eq thm
prf 8507:8517 <> S_injective
R8535:8537 Coq.Init.Datatypes <> nat ind
binder 8529:8529 <> n:44
binder 8531:8531 <> m:45
R8552:8557 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8546:8548 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8543:8543 Coq.Init.Datatypes <> S constr
R8545:8545 LF.Tactics <> n:44 var
R8549:8549 Coq.Init.Datatypes <> S constr
R8551:8551 LF.Tactics <> m:45 var
R8559:8561 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8558:8558 LF.Tactics <> n:44 var
R8562:8562 LF.Tactics <> m:45 var
R8604:8606 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8607:8610 Coq.Init.Peano <> pred abbrev
R8613:8613 Coq.Init.Datatypes <> S constr
R8604:8606 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8607:8610 Coq.Init.Peano <> pred abbrev
R8613:8613 Coq.Init.Datatypes <> S constr
prf 9102:9113 <> S_injective'
R9131:9133 Coq.Init.Datatypes <> nat ind
binder 9125:9125 <> n:46
binder 9127:9127 <> m:47
R9148:9153 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9142:9144 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9139:9139 Coq.Init.Datatypes <> S constr
R9141:9141 LF.Tactics <> n:46 var
R9145:9145 Coq.Init.Datatypes <> S constr
R9147:9147 LF.Tactics <> m:47 var
R9155:9157 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9154:9154 LF.Tactics <> n:46 var
R9158:9158 LF.Tactics <> m:47 var
prf 9662:9674 <> injection_ex1
R9694:9696 Coq.Init.Datatypes <> nat ind
binder 9686:9686 <> n:48
binder 9688:9688 <> m:49
binder 9690:9690 <> o:50
R9715:9720 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9707:9709 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9702:9702 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9704:9704 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9706:9706 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9703:9703 LF.Tactics <> n:48 var
R9705:9705 LF.Tactics <> m:49 var
R9710:9710 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9712:9712 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9714:9714 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9711:9711 LF.Tactics <> o:50 var
R9713:9713 LF.Tactics <> o:50 var
R9722:9724 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9721:9721 LF.Tactics <> n:48 var
R9725:9725 LF.Tactics <> m:49 var
def 9910:9922 <> injection_ex3
binder 9934:9934 <> X:51
R9953:9953 LF.Tactics <> X:51 var
binder 9945:9945 <> x:52
binder 9947:9947 <> y:53
binder 9949:9949 <> z:54
R9963:9966 LF.Poly <> list ind
R9968:9968 LF.Tactics <> X:51 var
binder 9957:9957 <> l:55
binder 9959:9959 <> j:56
R9994:9999 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9985:9987 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9975:9978 LF.Poly <> :::x_'::'_x not
R9974:9974 LF.Tactics <> x:52 var
R9980:9983 LF.Poly <> :::x_'::'_x not
R9979:9979 LF.Tactics <> y:53 var
R9984:9984 LF.Tactics <> l:55 var
R9989:9992 LF.Poly <> :::x_'::'_x not
R9988:9988 LF.Tactics <> z:54 var
R9993:9993 LF.Tactics <> j:56 var
R10010:10015 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10001:10003 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10000:10000 LF.Tactics <> j:56 var
R10005:10008 LF.Poly <> :::x_'::'_x not
R10004:10004 LF.Tactics <> z:54 var
R10009:10009 LF.Tactics <> l:55 var
R10017:10019 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10016:10016 LF.Tactics <> x:52 var
R10020:10020 LF.Tactics <> y:53 var
R10216:10223 LF.Tactics <> trans_eq thm
R10216:10223 LF.Tactics <> trans_eq thm
R10313:10314 LF.Poly <> :::x_'::'_x not
R10293:10300 LF.Tactics <> trans_eq thm
R10313:10314 LF.Poly <> :::x_'::'_x not
R10293:10300 LF.Tactics <> trans_eq thm
prf 11103:11118 <> discriminate_ex1
R11136:11138 Coq.Init.Datatypes <> nat ind
binder 11130:11130 <> n:57
binder 11132:11132 <> m:58
R11156:11161 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11149:11151 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11144:11148 LF.Basics <> false constr
R11152:11155 LF.Basics <> true constr
R11163:11165 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11162:11162 LF.Tactics <> n:57 var
R11166:11166 LF.Tactics <> m:58 var
prf 11232:11247 <> discriminate_ex2
R11263:11265 Coq.Init.Datatypes <> nat ind
binder 11259:11259 <> n:59
R11278:11283 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11274:11276 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11271:11271 Coq.Init.Datatypes <> S constr
R11273:11273 LF.Tactics <> n:59 var
R11277:11277 Coq.Init.Datatypes <> O constr
R11289:11291 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11285:11287 LF.Basics <> ::nat_scope:x_'+'_x not
def 12115:12130 <> discriminate_ex3
binder 12144:12144 <> X:60
R12163:12163 LF.Tactics <> X:60 var
binder 12155:12155 <> x:61
binder 12157:12157 <> y:62
binder 12159:12159 <> z:63
R12173:12176 LF.Poly <> list ind
R12178:12178 LF.Tactics <> X:60 var
binder 12167:12167 <> l:64
binder 12169:12169 <> j:65
R12202:12209 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12197:12199 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12187:12190 LF.Poly <> :::x_'::'_x not
R12186:12186 LF.Tactics <> x:61 var
R12192:12195 LF.Poly <> :::x_'::'_x not
R12191:12191 LF.Tactics <> y:62 var
R12196:12196 LF.Tactics <> l:64 var
R12200:12201 LF.Poly <> :::'['_']' not
R12211:12213 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12210:12210 LF.Tactics <> x:61 var
R12214:12214 LF.Tactics <> z:63 var
prf 12481:12487 <> eqb_0_l
binder 12498:12498 <> n:66
R12517:12520 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12510:12512 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12505:12508 LF.Basics <> ::nat_scope:x_'=?'_x not
R12509:12509 LF.Tactics <> n:66 var
R12513:12516 LF.Basics <> true constr
R12522:12524 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12521:12521 LF.Tactics <> n:66 var
prf 13407:13413 <> f_equal
binder 13425:13425 <> A:67
binder 13427:13427 <> B:68
R13442:13445 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13441:13441 LF.Tactics <> A:67 var
R13446:13446 LF.Tactics <> B:68 var
binder 13438:13438 <> f:69
R13455:13455 LF.Tactics <> A:67 var
binder 13450:13450 <> x:70
binder 13452:13452 <> y:71
R13466:13469 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13462:13464 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13461:13461 LF.Tactics <> x:70 var
R13465:13465 LF.Tactics <> y:71 var
R13473:13475 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13470:13470 LF.Tactics <> f:69 var
R13472:13472 LF.Tactics <> x:70 var
R13476:13476 LF.Tactics <> f:69 var
R13478:13478 LF.Tactics <> y:71 var
prf 13550:13570 <> eq_implies_succ_equal
R13588:13590 Coq.Init.Datatypes <> nat ind
binder 13582:13582 <> n:72
binder 13584:13584 <> m:73
R13601:13604 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13597:13599 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13596:13596 LF.Tactics <> n:72 var
R13600:13600 LF.Tactics <> m:73 var
R13608:13610 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13605:13605 Coq.Init.Datatypes <> S constr
R13607:13607 LF.Tactics <> n:72 var
R13611:13611 Coq.Init.Datatypes <> S constr
R13613:13613 LF.Tactics <> m:73 var
R13643:13649 LF.Tactics <> f_equal thm
R13643:13649 LF.Tactics <> f_equal thm
prf 14095:14116 <> eq_implies_succ_equal'
R14134:14136 Coq.Init.Datatypes <> nat ind
binder 14128:14128 <> n:74
binder 14130:14130 <> m:75
R14147:14150 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14143:14145 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14142:14142 LF.Tactics <> n:74 var
R14146:14146 LF.Tactics <> m:75 var
R14154:14156 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14151:14151 Coq.Init.Datatypes <> S constr
R14153:14153 LF.Tactics <> n:74 var
R14157:14157 Coq.Init.Datatypes <> S constr
R14159:14159 LF.Tactics <> m:75 var
prf 14642:14646 <> S_inj
R14664:14666 Coq.Init.Datatypes <> nat ind
binder 14658:14658 <> n:76
binder 14660:14660 <> m:77
R14674:14677 LF.Basics <> bool ind
binder 14670:14670 <> b:78
R14703:14709 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14683:14683 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14698:14701 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14684:14684 LF.Basics <> ::nat_scope:x_'=?'_x not
R14688:14693 LF.Basics <> ::nat_scope:x_'=?'_x not
R14697:14697 LF.Basics <> ::nat_scope:x_'=?'_x not
R14685:14685 Coq.Init.Datatypes <> S constr
R14687:14687 LF.Tactics <> n:76 var
R14694:14694 Coq.Init.Datatypes <> S constr
R14696:14696 LF.Tactics <> m:77 var
R14702:14702 LF.Tactics <> b:78 var
R14710:14710 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14717:14720 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14712:14715 LF.Basics <> ::nat_scope:x_'=?'_x not
R14711:14711 LF.Tactics <> n:76 var
R14716:14716 LF.Tactics <> m:77 var
R14721:14721 LF.Tactics <> b:78 var
prf 15552:15557 <> silly4
R15579:15581 Coq.Init.Datatypes <> nat ind
binder 15569:15569 <> n:79
binder 15571:15571 <> m:80
binder 15573:15573 <> p:81
binder 15575:15575 <> q:82
R15587:15587 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15602:15608 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15593:15596 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15589:15591 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15588:15588 LF.Tactics <> n:79 var
R15592:15592 LF.Tactics <> m:80 var
R15598:15600 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15597:15597 LF.Tactics <> p:81 var
R15601:15601 LF.Tactics <> q:82 var
R15614:15619 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15610:15612 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15609:15609 LF.Tactics <> m:80 var
R15613:15613 LF.Tactics <> n:79 var
R15621:15623 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15620:15620 LF.Tactics <> q:82 var
R15624:15624 LF.Tactics <> p:81 var
prf 16934:16951 <> specialize_example
binder 16961:16961 <> n:83
R16969:16969 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16987:16993 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 16977:16977 <> m:84
R16983:16985 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16981:16981 LF.Basics <> ::nat_scope:x_'*'_x not
R16980:16980 LF.Tactics <> m:84 var
R16982:16982 LF.Tactics <> n:83 var
R16995:16997 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16994:16994 LF.Tactics <> n:83 var
R17076:17083 LF.Induction <> add_comm thm
R17076:17083 LF.Induction <> add_comm thm
R17076:17083 LF.Induction <> add_comm thm
def 17240:17258 <> trans_eq_example'''
R17284:17286 Coq.Init.Datatypes <> nat ind
binder 17270:17270 <> a:85
binder 17272:17272 <> b:86
binder 17274:17274 <> c:87
binder 17276:17276 <> d:88
binder 17278:17278 <> e:89
binder 17280:17280 <> f:90
R17308:17316 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17300:17302 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17295:17295 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R17297:17297 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R17299:17299 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R17296:17296 LF.Tactics <> a:85 var
R17298:17298 LF.Tactics <> b:86 var
R17303:17303 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R17305:17305 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R17307:17307 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R17304:17304 LF.Tactics <> c:87 var
R17306:17306 LF.Tactics <> d:88 var
R17330:17338 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17322:17324 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17317:17317 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R17319:17319 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R17321:17321 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R17318:17318 LF.Tactics <> c:87 var
R17320:17320 LF.Tactics <> d:88 var
R17325:17325 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R17327:17327 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R17329:17329 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R17326:17326 LF.Tactics <> e:89 var
R17328:17328 LF.Tactics <> f:90 var
R17344:17346 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17339:17339 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R17341:17341 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R17343:17343 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R17340:17340 LF.Tactics <> a:85 var
R17342:17342 LF.Tactics <> b:86 var
R17347:17347 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R17349:17349 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R17351:17351 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R17348:17348 LF.Tactics <> e:89 var
R17350:17350 LF.Tactics <> f:90 var
R17422:17422 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R17424:17424 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R17426:17426 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R17404:17411 LF.Tactics <> trans_eq thm
R17422:17422 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R17424:17424 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R17426:17426 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R17404:17411 LF.Tactics <> trans_eq thm
prf 18624:18646 <> double_injective_FAILED
binder 18657:18657 <> n:91
binder 18659:18659 <> m:92
R18683:18688 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18672:18674 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18664:18669 LF.Induction <> double def
R18671:18671 LF.Tactics <> n:91 var
R18675:18680 LF.Induction <> double def
R18682:18682 LF.Tactics <> m:92 var
R18690:18692 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18689:18689 LF.Tactics <> n:91 var
R18693:18693 LF.Tactics <> m:92 var
prf 21330:21345 <> double_injective
binder 21356:21356 <> n:93
binder 21358:21358 <> m:94
R21382:21387 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21371:21373 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21363:21368 LF.Induction <> double def
R21370:21370 LF.Tactics <> n:93 var
R21374:21379 LF.Induction <> double def
R21381:21381 LF.Tactics <> m:94 var
R21389:21391 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21388:21388 LF.Tactics <> n:93 var
R21392:21392 LF.Tactics <> m:94 var
prf 23316:23323 <> eqb_true
binder 23334:23334 <> n:95
binder 23336:23336 <> m:96
R23354:23357 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23347:23349 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23342:23345 LF.Basics <> ::nat_scope:x_'=?'_x not
R23341:23341 LF.Tactics <> n:95 var
R23346:23346 LF.Tactics <> m:96 var
R23350:23353 LF.Basics <> true constr
R23359:23361 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23358:23358 LF.Tactics <> n:95 var
R23362:23362 LF.Tactics <> m:96 var
def 24023:24053 <> manual_grade_for_informal_proof
R24057:24062 Coq.Init.Datatypes <> option ind
R24068:24068 LF.Poly <> ::type_scope:x_'*'_x not
R24065:24067 Coq.Init.Datatypes <> nat ind
R24069:24074 Coq.Strings.String <> string ind
R24080:24083 Coq.Init.Datatypes <> None constr
prf 24321:24338 <> plus_n_n_injective
binder 24349:24349 <> n:97
binder 24351:24351 <> m:98
R24369:24374 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24361:24363 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24357:24359 LF.Basics <> ::nat_scope:x_'+'_x not
R24356:24356 LF.Tactics <> n:97 var
R24360:24360 LF.Tactics <> n:97 var
R24365:24367 LF.Basics <> ::nat_scope:x_'+'_x not
R24364:24364 LF.Tactics <> m:98 var
R24368:24368 LF.Tactics <> m:98 var
R24376:24378 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24375:24375 LF.Tactics <> n:97 var
R24379:24379 LF.Tactics <> m:98 var
R24738:24746 LF.Induction <> plus_n_Sm thm
R24738:24746 LF.Induction <> plus_n_Sm thm
R24738:24746 LF.Induction <> plus_n_Sm thm
R24772:24780 LF.Induction <> plus_n_Sm thm
R24772:24780 LF.Induction <> plus_n_Sm thm
R24772:24780 LF.Induction <> plus_n_Sm thm
prf 25160:25188 <> double_injective_take2_FAILED
binder 25199:25199 <> n:99
binder 25201:25201 <> m:100
R25225:25230 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25214:25216 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25206:25211 LF.Induction <> double def
R25213:25213 LF.Tactics <> n:99 var
R25217:25222 LF.Induction <> double def
R25224:25224 LF.Tactics <> m:100 var
R25232:25234 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25231:25231 LF.Tactics <> n:99 var
R25235:25235 LF.Tactics <> m:100 var
prf 26488:26509 <> double_injective_take2
binder 26520:26520 <> n:101
binder 26522:26522 <> m:102
R26546:26551 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26535:26537 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26527:26532 LF.Induction <> double def
R26534:26534 LF.Tactics <> n:101 var
R26538:26543 LF.Induction <> double def
R26545:26545 LF.Tactics <> m:102 var
R26553:26555 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26552:26552 LF.Tactics <> n:101 var
R26556:26556 LF.Tactics <> m:102 var
prf 29168:29187 <> nth_error_after_last
R29202:29204 Coq.Init.Datatypes <> nat ind
binder 29198:29198 <> n:103
binder 29208:29208 <> X:104
R29223:29226 LF.Poly <> list ind
R29228:29228 LF.Tactics <> X:104 var
binder 29219:29219 <> l:105
R29246:29251 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29242:29244 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29234:29239 LF.Poly <> length def
R29241:29241 LF.Tactics <> l:105 var
R29245:29245 LF.Tactics <> n:103 var
R29265:29267 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29252:29260 LF.Poly <> nth_error def
R29264:29264 LF.Tactics <> n:103 var
R29262:29262 LF.Tactics <> l:105 var
R29268:29271 Coq.Init.Datatypes <> None constr
def 29909:29914 <> square
binder 29916:29916 <> n:106
R29922:29924 LF.Basics <> ::nat_scope:x_'*'_x not
R29921:29921 LF.Tactics <> n:106 var
R29925:29925 LF.Tactics <> n:106 var
prf 29995:30005 <> square_mult
binder 30016:30016 <> n:107
binder 30018:30018 <> m:108
R30035:30037 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30021:30026 LF.Tactics <> square def
R30030:30032 LF.Basics <> ::nat_scope:x_'*'_x not
R30029:30029 LF.Tactics <> n:107 var
R30033:30033 LF.Tactics <> m:108 var
R30046:30048 LF.Basics <> ::nat_scope:x_'*'_x not
R30038:30043 LF.Tactics <> square def
R30045:30045 LF.Tactics <> n:107 var
R30049:30054 LF.Tactics <> square def
R30056:30056 LF.Tactics <> m:108 var
R30370:30375 LF.Tactics <> square def
R30694:30703 LF.Induction <> mult_assoc thm
R30694:30703 LF.Induction <> mult_assoc thm
R30694:30703 LF.Induction <> mult_assoc thm
R30729:30731 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30725:30727 LF.Basics <> ::nat_scope:x_'*'_x not
R30721:30723 LF.Basics <> ::nat_scope:x_'*'_x not
R30737:30739 LF.Basics <> ::nat_scope:x_'*'_x not
R30733:30735 LF.Basics <> ::nat_scope:x_'*'_x not
R30729:30731 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30725:30727 LF.Basics <> ::nat_scope:x_'*'_x not
R30721:30723 LF.Basics <> ::nat_scope:x_'*'_x not
R30737:30739 LF.Basics <> ::nat_scope:x_'*'_x not
R30733:30735 LF.Basics <> ::nat_scope:x_'*'_x not
R30758:30765 LF.Induction <> mul_comm thm
R30758:30765 LF.Induction <> mul_comm thm
R30758:30765 LF.Induction <> mul_comm thm
R30774:30783 LF.Induction <> mult_assoc thm
R30774:30783 LF.Induction <> mult_assoc thm
R30809:30818 LF.Induction <> mult_assoc thm
R30809:30818 LF.Induction <> mult_assoc thm
R30809:30818 LF.Induction <> mult_assoc thm
def 31205:31207 <> foo
R31213:31215 Coq.Init.Datatypes <> nat ind
binder 31210:31210 <> x:109
prf 31432:31443 <> silly_fact_1
binder 31454:31454 <> m:110
R31466:31468 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31462:31464 LF.Basics <> ::nat_scope:x_'+'_x not
R31457:31459 LF.Tactics <> foo def
R31461:31461 LF.Tactics <> m:110 var
R31480:31482 LF.Basics <> ::nat_scope:x_'+'_x not
R31469:31471 LF.Tactics <> foo def
R31475:31477 LF.Basics <> ::nat_scope:x_'+'_x not
R31474:31474 LF.Tactics <> m:110 var
def 31710:31712 <> bar
binder 31714:31714 <> x:111
R31727:31727 LF.Tactics <> x:111 var
R31738:31738 Coq.Init.Datatypes <> O constr
R31749:31749 Coq.Init.Datatypes <> S constr
prf 31823:31841 <> silly_fact_2_FAILED
binder 31852:31852 <> m:113
R31864:31866 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31860:31862 LF.Basics <> ::nat_scope:x_'+'_x not
R31855:31857 LF.Tactics <> bar def
R31859:31859 LF.Tactics <> m:113 var
R31878:31880 LF.Basics <> ::nat_scope:x_'+'_x not
R31867:31869 LF.Tactics <> bar def
R31873:31875 LF.Basics <> ::nat_scope:x_'+'_x not
R31872:31872 LF.Tactics <> m:113 var
prf 32867:32878 <> silly_fact_2
binder 32889:32889 <> m:114
R32901:32903 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32897:32899 LF.Basics <> ::nat_scope:x_'+'_x not
R32892:32894 LF.Tactics <> bar def
R32896:32896 LF.Tactics <> m:114 var
R32915:32917 LF.Basics <> ::nat_scope:x_'+'_x not
R32904:32906 LF.Tactics <> bar def
R32910:32912 LF.Basics <> ::nat_scope:x_'+'_x not
R32909:32909 LF.Tactics <> m:114 var
prf 33265:33277 <> silly_fact_2'
binder 33288:33288 <> m:115
R33300:33302 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33296:33298 LF.Basics <> ::nat_scope:x_'+'_x not
R33291:33293 LF.Tactics <> bar def
R33295:33295 LF.Tactics <> m:115 var
R33314:33316 LF.Basics <> ::nat_scope:x_'+'_x not
R33303:33305 LF.Tactics <> bar def
R33309:33311 LF.Basics <> ::nat_scope:x_'+'_x not
R33308:33308 LF.Tactics <> m:115 var
R33348:33350 LF.Tactics <> bar def
def 33995:34002 <> sillyfun
R34009:34011 Coq.Init.Datatypes <> nat ind
binder 34005:34005 <> n:116
R34016:34019 LF.Basics <> bool ind
R34030:34033 LF.Basics <> ::nat_scope:x_'=?'_x not
R34029:34029 LF.Tactics <> n:116 var
R34058:34061 LF.Basics <> ::nat_scope:x_'=?'_x not
R34057:34057 LF.Tactics <> n:116 var
R34082:34086 LF.Basics <> false constr
R34069:34073 LF.Basics <> false constr
R34041:34045 LF.Basics <> false constr
prf 34098:34111 <> sillyfun_false
R34127:34129 Coq.Init.Datatypes <> nat ind
binder 34123:34123 <> n:117
R34145:34147 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34135:34142 LF.Tactics <> sillyfun def
R34144:34144 LF.Tactics <> n:117 var
R34148:34152 LF.Basics <> false constr
R34181:34188 LF.Tactics <> sillyfun def
R34204:34207 LF.Basics <> ::nat_scope:x_'=?'_x not
R34204:34207 LF.Basics <> ::nat_scope:x_'=?'_x not
R34296:34299 LF.Basics <> ::nat_scope:x_'=?'_x not
R34296:34299 LF.Basics <> ::nat_scope:x_'=?'_x not
def 35172:35176 <> split
binder 35179:35179 <> X:118
binder 35181:35181 <> Y:119
R35196:35199 LF.Poly <> list ind
R35203:35203 LF.Poly <> ::type_scope:x_'*'_x not
R35202:35202 LF.Tactics <> X:118 var
R35204:35204 LF.Tactics <> Y:119 var
binder 35192:35192 <> l:120
R35225:35225 LF.Poly <> ::type_scope:x_'*'_x not
R35232:35236 LF.Poly <> ::type_scope:x_'*'_x not
R35243:35243 LF.Poly <> ::type_scope:x_'*'_x not
R35226:35229 LF.Poly <> list ind
R35231:35231 LF.Tactics <> X:118 var
R35237:35240 LF.Poly <> list ind
R35242:35242 LF.Tactics <> Y:119 var
R35256:35256 LF.Tactics <> l:120 var
R35267:35268 LF.Poly <> :::'['_']' not
R35273:35273 LF.Poly <> :::'('_x_','_x_')' not
R35276:35277 LF.Poly <> :::'('_x_','_x_')' not
R35280:35280 LF.Poly <> :::'('_x_','_x_')' not
R35274:35275 LF.Poly <> :::'['_']' not
R35278:35279 LF.Poly <> :::'['_']' not
R35292:35295 LF.Poly <> :::x_'::'_x not
R35286:35286 LF.Poly <> :::'('_x_','_x_')' not
R35288:35289 LF.Poly <> :::'('_x_','_x_')' not
R35291:35291 LF.Poly <> :::'('_x_','_x_')' not
R35313:35317 LF.Tactics <> split:121 def
R35334:35334 LF.Poly <> :::'('_x_','_x_')' not
R35337:35338 LF.Poly <> :::'('_x_','_x_')' not
R35341:35341 LF.Poly <> :::'('_x_','_x_')' not
R35346:35346 LF.Poly <> :::'('_x_','_x_')' not
R35354:35355 LF.Poly <> :::'('_x_','_x_')' not
R35363:35363 LF.Poly <> :::'('_x_','_x_')' not
R35348:35351 LF.Poly <> :::x_'::'_x not
R35357:35360 LF.Poly <> :::x_'::'_x not
prf 35473:35485 <> combine_split
binder 35496:35496 <> X:123
binder 35498:35498 <> Y:124
R35505:35508 LF.Poly <> list ind
R35512:35514 LF.Poly <> ::type_scope:x_'*'_x not
R35511:35511 LF.Tactics <> X:123 var
R35515:35515 LF.Tactics <> Y:124 var
binder 35501:35501 <> l:125
binder 35519:35520 <> l1:126
binder 35522:35523 <> l2:127
R35546:35551 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35535:35537 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35528:35532 LF.Tactics <> split def
R35534:35534 LF.Tactics <> l:125 var
R35538:35538 LF.Poly <> :::'('_x_','_x_')' not
R35541:35542 LF.Poly <> :::'('_x_','_x_')' not
R35545:35545 LF.Poly <> :::'('_x_','_x_')' not
R35539:35540 LF.Tactics <> l1:126 var
R35543:35544 LF.Tactics <> l2:127 var
R35565:35567 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35552:35558 LF.Poly <> combine def
R35563:35564 LF.Tactics <> l2:127 var
R35560:35561 LF.Tactics <> l1:126 var
R35568:35568 LF.Tactics <> l:125 var
R35806:35810 LF.Tactics <> split def
R35806:35810 LF.Tactics <> split def
def 36464:36472 <> sillyfun1
R36479:36481 Coq.Init.Datatypes <> nat ind
binder 36475:36475 <> n:128
R36486:36489 LF.Basics <> bool ind
R36500:36503 LF.Basics <> ::nat_scope:x_'=?'_x not
R36499:36499 LF.Tactics <> n:128 var
R36527:36530 LF.Basics <> ::nat_scope:x_'=?'_x not
R36526:36526 LF.Tactics <> n:128 var
R36550:36554 LF.Basics <> false constr
R36538:36541 LF.Basics <> true constr
R36511:36514 LF.Basics <> true constr
prf 36749:36768 <> sillyfun1_odd_FAILED
R36784:36786 Coq.Init.Datatypes <> nat ind
binder 36780:36780 <> n:129
R36810:36815 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36803:36805 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36792:36800 LF.Tactics <> sillyfun1 def
R36802:36802 LF.Tactics <> n:129 var
R36806:36809 LF.Basics <> true constr
R36821:36823 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36816:36818 LF.Basics <> odd def
R36820:36820 LF.Tactics <> n:129 var
R36824:36827 LF.Basics <> true constr
R36859:36867 LF.Tactics <> sillyfun1 def
R36889:36892 LF.Basics <> ::nat_scope:x_'=?'_x not
R36889:36892 LF.Basics <> ::nat_scope:x_'=?'_x not
prf 37710:37722 <> sillyfun1_odd
R37738:37740 Coq.Init.Datatypes <> nat ind
binder 37734:37734 <> n:130
R37764:37769 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37757:37759 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37746:37754 LF.Tactics <> sillyfun1 def
R37756:37756 LF.Tactics <> n:130 var
R37760:37763 LF.Basics <> true constr
R37775:37777 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37770:37772 LF.Basics <> odd def
R37774:37774 LF.Tactics <> n:130 var
R37778:37781 LF.Basics <> true constr
R37813:37821 LF.Tactics <> sillyfun1 def
R37843:37846 LF.Basics <> ::nat_scope:x_'=?'_x not
R37843:37846 LF.Basics <> ::nat_scope:x_'=?'_x not
R38096:38103 LF.Tactics <> eqb_true thm
R38096:38103 LF.Tactics <> eqb_true thm
R38398:38401 LF.Basics <> ::nat_scope:x_'=?'_x not
R38398:38401 LF.Basics <> ::nat_scope:x_'=?'_x not
R38458:38465 LF.Tactics <> eqb_true thm
R38458:38465 LF.Tactics <> eqb_true thm
prf 38641:38662 <> bool_fn_applied_thrice
R38684:38687 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38680:38683 LF.Basics <> bool ind
R38688:38691 LF.Basics <> bool ind
binder 38676:38676 <> f:131
R38699:38702 LF.Basics <> bool ind
binder 38695:38695 <> b:132
R38719:38721 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38708:38708 LF.Tactics <> f:131 var
R38711:38711 LF.Tactics <> f:131 var
R38714:38714 LF.Tactics <> f:131 var
R38716:38716 LF.Tactics <> b:132 var
R38722:38722 LF.Tactics <> f:131 var
R38724:38724 LF.Tactics <> b:132 var
R38762:38765 LF.Basics <> true constr
R38795:38799 LF.Basics <> false constr
R38762:38765 LF.Basics <> true constr
R38795:38799 LF.Basics <> false constr
R38795:38799 LF.Basics <> false constr
prf 41873:41879 <> eqb_sym
R41897:41899 Coq.Init.Datatypes <> nat ind
binder 41891:41891 <> n:133
binder 41893:41893 <> m:134
R41905:41905 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41912:41916 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41923:41923 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41907:41910 LF.Basics <> ::nat_scope:x_'=?'_x not
R41906:41906 LF.Tactics <> n:133 var
R41911:41911 LF.Tactics <> m:134 var
R41918:41921 LF.Basics <> ::nat_scope:x_'=?'_x not
R41917:41917 LF.Tactics <> m:134 var
R41922:41922 LF.Tactics <> n:133 var
prf 42427:42438 <> eqb_true_sym
R42456:42458 Coq.Init.Datatypes <> nat ind
binder 42450:42450 <> n:135
binder 42452:42452 <> m:136
R42469:42472 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42465:42467 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42464:42464 LF.Tactics <> n:135 var
R42468:42468 LF.Tactics <> m:136 var
R42479:42481 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42474:42477 LF.Basics <> ::nat_scope:x_'=?'_x not
R42473:42473 LF.Tactics <> n:135 var
R42478:42478 LF.Tactics <> m:136 var
R42482:42485 LF.Basics <> true constr
prf 42815:42823 <> eqb_trans
binder 42834:42834 <> n:137
binder 42836:42836 <> m:138
binder 42838:42838 <> p:139
R42856:42861 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42849:42851 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42844:42847 LF.Basics <> ::nat_scope:x_'=?'_x not
R42843:42843 LF.Tactics <> n:137 var
R42848:42848 LF.Tactics <> m:138 var
R42852:42855 LF.Basics <> true constr
R42875:42880 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42868:42870 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42863:42866 LF.Basics <> ::nat_scope:x_'=?'_x not
R42862:42862 LF.Tactics <> m:138 var
R42867:42867 LF.Tactics <> p:139 var
R42871:42874 LF.Basics <> true constr
R42887:42889 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42882:42885 LF.Basics <> ::nat_scope:x_'=?'_x not
R42881:42881 LF.Tactics <> n:137 var
R42886:42886 LF.Tactics <> p:139 var
R42890:42893 LF.Basics <> true constr
R42919:42921 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42914:42917 LF.Basics <> ::nat_scope:x_'=?'_x not
R42922:42925 LF.Basics <> true constr
R42959:42966 LF.Tactics <> eqb_true thm
R42959:42966 LF.Tactics <> eqb_true thm
R42983:42990 LF.Tactics <> eqb_true thm
R42983:42990 LF.Tactics <> eqb_true thm
R43007:43014 LF.Tactics <> trans_eq thm
R43007:43014 LF.Tactics <> trans_eq thm
R43045:43056 LF.Tactics <> eqb_true_sym thm
R43045:43056 LF.Tactics <> eqb_true_sym thm
prf 43110:43117 <> length_0
binder 43129:43129 <> X:140
R43144:43147 LF.Poly <> list ind
R43149:43149 LF.Tactics <> X:140 var
binder 43140:43140 <> l:141
R43167:43170 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43163:43165 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43155:43160 LF.Poly <> length def
R43162:43162 LF.Tactics <> l:141 var
R43173:43175 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43171:43172 LF.Poly <> :::'['_']' not
R43176:43176 LF.Tactics <> l:141 var
def 43808:43830 <> split_combine_statement
binder 43849:43849 <> X:142
binder 43851:43851 <> Y:143
R43858:43861 LF.Poly <> list ind
R43865:43867 LF.Poly <> ::type_scope:x_'*'_x not
R43864:43864 LF.Tactics <> X:142 var
R43868:43868 LF.Tactics <> Y:143 var
binder 43854:43854 <> l:144
binder 43872:43873 <> l1:145
binder 43875:43876 <> l2:146
R43899:43905 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43895:43897 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43882:43888 LF.Poly <> combine def
R43893:43894 LF.Tactics <> l2:146 var
R43890:43891 LF.Tactics <> l1:145 var
R43898:43898 LF.Tactics <> l:144 var
R43926:43931 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43915:43917 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43906:43911 LF.Poly <> length def
R43913:43914 LF.Tactics <> l1:145 var
R43918:43923 LF.Poly <> length def
R43925:43925 LF.Tactics <> l:144 var
R43952:43957 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43941:43943 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43932:43937 LF.Poly <> length def
R43939:43940 LF.Tactics <> l2:146 var
R43944:43949 LF.Poly <> length def
R43951:43951 LF.Tactics <> l:144 var
R43965:43967 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43958:43962 LF.Tactics <> split def
R43964:43964 LF.Tactics <> l:144 var
R43968:43968 LF.Poly <> :::'('_x_','_x_')' not
R43971:43972 LF.Poly <> :::'('_x_','_x_')' not
R43975:43975 LF.Poly <> :::'('_x_','_x_')' not
R43969:43970 LF.Tactics <> l1:145 var
R43973:43974 LF.Tactics <> l2:146 var
prf 43987:43999 <> split_combine
R44003:44025 LF.Tactics <> split_combine_statement def
R44148:44155 LF.Tactics <> length_0 thm
R44148:44155 LF.Tactics <> length_0 thm
R44174:44181 LF.Tactics <> length_0 thm
R44174:44181 LF.Tactics <> length_0 thm
R44501:44503 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44493:44497 LF.Tactics <> split def
R44504:44504 LF.Poly <> :::'('_x_','_x_')' not
R44508:44509 LF.Poly <> :::'('_x_','_x_')' not
R44513:44513 LF.Poly <> :::'('_x_','_x_')' not
R44501:44503 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44493:44497 LF.Tactics <> split def
R44504:44504 LF.Poly <> :::'('_x_','_x_')' not
R44508:44509 LF.Poly <> :::'('_x_','_x_')' not
R44513:44513 LF.Poly <> :::'('_x_','_x_')' not
def 44678:44707 <> manual_grade_for_split_combine
R44711:44716 Coq.Init.Datatypes <> option ind
R44722:44722 LF.Poly <> ::type_scope:x_'*'_x not
R44719:44721 Coq.Init.Datatypes <> nat ind
R44723:44728 Coq.Strings.String <> string ind
R44734:44737 Coq.Init.Datatypes <> None constr
prf 45466:45475 <> filter_neg
binder 45486:45486 <> X:147
R45505:45508 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45504:45504 LF.Tactics <> X:147 var
R45509:45512 LF.Basics <> bool ind
binder 45497:45500 <> test:148
R45520:45523 LF.Poly <> list ind
R45525:45525 LF.Tactics <> X:147 var
binder 45516:45516 <> l:149
R45578:45580 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45531:45536 LF.Poly <> filter def
R45564:45569 LF.Poly <> filter def
R45576:45576 LF.Tactics <> l:149 var
R45571:45574 LF.Tactics <> test:148 var
binder 45543:45543 <> b:150
R45548:45551 LF.Basics <> negb def
R45554:45557 LF.Tactics <> test:148 var
R45559:45559 LF.Tactics <> b:150 var
R45581:45582 LF.Poly <> :::'['_']' not
prf 45861:45875 <> filter_exercise
binder 45887:45887 <> X:151
R45906:45909 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45905:45905 LF.Tactics <> X:151 var
R45910:45913 LF.Basics <> bool ind
binder 45898:45901 <> test:152
R45954:45954 LF.Tactics <> X:151 var
binder 45950:45950 <> x:153
R45965:45968 LF.Poly <> list ind
R45970:45970 LF.Tactics <> X:151 var
binder 45958:45958 <> l:154
binder 45960:45961 <> lf:155
R45999:46004 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45989:45991 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45976:45981 LF.Poly <> filter def
R45988:45988 LF.Tactics <> l:154 var
R45983:45986 LF.Tactics <> test:152 var
R45993:45996 LF.Poly <> :::x_'::'_x not
R45992:45992 LF.Tactics <> x:153 var
R45997:45998 LF.Tactics <> lf:155 var
R46011:46013 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46005:46008 LF.Tactics <> test:152 var
R46010:46010 LF.Tactics <> x:153 var
R46014:46017 LF.Basics <> true constr
def 47403:47409 <> forallb
binder 47412:47412 <> X:156
R47431:47434 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47430:47430 LF.Tactics <> X:156 var
R47435:47438 LF.Basics <> bool ind
binder 47423:47426 <> test:157
R47446:47449 LF.Poly <> list ind
R47451:47451 LF.Tactics <> X:156 var
binder 47442:47442 <> l:158
R47456:47459 LF.Basics <> bool ind
R47472:47472 LF.Tactics <> l:158 var
R47483:47484 LF.Poly <> :::'['_']' not
R47489:47492 LF.Basics <> true constr
R47499:47502 LF.Poly <> :::x_'::'_x not
R47509:47512 LF.Basics <> andb def
R47515:47518 LF.Tactics <> test:157 var
R47524:47530 LF.Tactics <> forallb:159 def
R47532:47535 LF.Tactics <> test:157 var
def 47557:47570 <> test_forallb_1
R47597:47599 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47574:47580 LF.Tactics <> forallb def
R47586:47586 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R47588:47588 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R47590:47590 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R47592:47592 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R47594:47594 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R47596:47596 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R47582:47584 LF.Basics <> odd def
R47600:47603 LF.Basics <> true constr
def 47640:47653 <> test_forallb_2
R47683:47685 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47657:47663 LF.Tactics <> forallb def
R47670:47670 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R47676:47676 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R47682:47682 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R47671:47675 LF.Basics <> false constr
R47677:47681 LF.Basics <> false constr
R47665:47668 LF.Basics <> negb def
R47686:47689 LF.Basics <> true constr
def 47726:47739 <> test_forallb_3
R47765:47767 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47743:47749 LF.Tactics <> forallb def
R47756:47756 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R47758:47758 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R47760:47760 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R47762:47762 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R47764:47764 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R47751:47754 LF.Basics <> even def
R47768:47772 LF.Basics <> false constr
def 47809:47822 <> test_forallb_4
R47844:47846 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47826:47832 LF.Tactics <> forallb def
R47842:47843 LF.Poly <> :::'['_']' not
R47835:47837 LF.Basics <> eqb def
R47847:47850 LF.Basics <> true constr
def 47888:47894 <> existsb
binder 47897:47897 <> X:161
R47916:47919 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47915:47915 LF.Tactics <> X:161 var
R47920:47923 LF.Basics <> bool ind
binder 47908:47911 <> test:162
R47931:47934 LF.Poly <> list ind
R47936:47936 LF.Tactics <> X:161 var
binder 47927:47927 <> l:163
R47941:47944 LF.Basics <> bool ind
R47957:47957 LF.Tactics <> l:163 var
R47968:47969 LF.Poly <> :::'['_']' not
R47974:47978 LF.Basics <> false constr
R47985:47988 LF.Poly <> :::x_'::'_x not
R47995:47997 LF.Basics <> orb def
R48000:48003 LF.Tactics <> test:162 var
R48009:48015 LF.Tactics <> existsb:164 def
R48017:48020 LF.Tactics <> test:162 var
def 48042:48055 <> test_existsb_1
R48084:48086 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48059:48065 LF.Tactics <> existsb def
R48075:48075 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R48077:48077 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R48079:48079 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R48081:48081 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R48083:48083 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R48068:48070 LF.Basics <> eqb def
R48087:48091 LF.Basics <> false constr
def 48128:48141 <> test_existsb_2
R48182:48184 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48145:48151 LF.Tactics <> existsb def
R48165:48165 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R48170:48170 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R48175:48175 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R48181:48181 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R48166:48169 LF.Basics <> true constr
R48171:48174 LF.Basics <> true constr
R48176:48180 LF.Basics <> false constr
R48154:48157 LF.Basics <> andb def
R48159:48162 LF.Basics <> true constr
R48185:48188 LF.Basics <> true constr
def 48225:48238 <> test_existsb_3
R48267:48269 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48242:48248 LF.Tactics <> existsb def
R48254:48254 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R48256:48256 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R48258:48258 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R48260:48260 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R48262:48262 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R48264:48264 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R48266:48266 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R48250:48252 LF.Basics <> odd def
R48270:48273 LF.Basics <> true constr
def 48310:48323 <> test_existsb_4
R48342:48344 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48327:48333 LF.Tactics <> existsb def
R48340:48341 LF.Poly <> :::'['_']' not
R48335:48338 LF.Basics <> even def
R48345:48349 LF.Basics <> false constr
def 48389:48396 <> existsb'
binder 48399:48399 <> X:166
R48418:48421 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48417:48417 LF.Tactics <> X:166 var
R48422:48425 LF.Basics <> bool ind
binder 48410:48413 <> test:167
R48433:48436 LF.Poly <> list ind
R48438:48438 LF.Tactics <> X:166 var
binder 48429:48429 <> l:168
R48443:48446 LF.Basics <> bool ind
R48451:48454 LF.Basics <> negb def
R48457:48463 LF.Tactics <> forallb def
R48490:48490 LF.Tactics <> l:168 var
binder 48470:48470 <> x:169
R48475:48478 LF.Basics <> negb def
R48481:48484 LF.Tactics <> test:167 var
R48486:48486 LF.Tactics <> x:169 var
prf 48861:48876 <> existsb_existsb'
binder 48888:48888 <> X:170
R48907:48910 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48906:48906 LF.Tactics <> X:170 var
R48911:48914 LF.Basics <> bool ind
binder 48899:48902 <> test:171
R48922:48925 LF.Poly <> list ind
R48927:48927 LF.Tactics <> X:170 var
binder 48918:48918 <> l:172
R48947:48949 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48933:48939 LF.Tactics <> existsb def
R48946:48946 LF.Tactics <> l:172 var
R48941:48944 LF.Tactics <> test:171 var
R48950:48957 LF.Tactics <> existsb' def
R48964:48964 LF.Tactics <> l:172 var
R48959:48962 LF.Tactics <> test:171 var
R49113:49120 LF.Tactics <> existsb' def
R49181:49188 LF.Tactics <> existsb' def

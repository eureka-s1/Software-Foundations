DIGEST 33b4944631cd85ea97372563b2592c7c
FPLF.Equiv
R141:144 PLF.Maps <> <> lib
R171:174 Coq.Bool.Bool <> <> lib
R201:205 Coq.Arith.Arith <> <> lib
R232:239 Coq.Init.Nat <> <> lib
R266:273 Coq.Arith.PeanoNat <> <> lib
R283:285 Coq.Arith.PeanoNat Nat <> mod
R312:316 Coq.Arith.EqNat <> <> lib
R343:345 Coq.micromega.Lia <> <> lib
R372:375 Coq.Lists.List <> <> lib
R385:397 Coq.Lists.List ListNotations <> mod
R424:447 Coq.Logic.FunctionalExtensionality <> <> lib
R474:476 PLF.Imp <> <> lib
def 4499:4504 <> aequiv
R4515:4518 PLF.Imp <> aexp ind
binder 4507:4508 <> a1:1
binder 4510:4511 <> a2:2
R4546:4550 PLF.Imp <> state def
binder 4541:4542 <> st:3
R4569:4571 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4558:4562 PLF.Imp <> aeval def
R4564:4565 PLF.Equiv <> st:3 var
R4567:4568 PLF.Equiv <> a1:1 var
R4572:4576 PLF.Imp <> aeval def
R4578:4579 PLF.Equiv <> st:3 var
R4581:4582 PLF.Equiv <> a2:2 var
def 4597:4602 <> bequiv
R4613:4616 PLF.Imp <> bexp ind
binder 4605:4606 <> b1:4
binder 4608:4609 <> b2:5
R4644:4648 PLF.Imp <> state def
binder 4639:4640 <> st:6
R4667:4669 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4656:4660 PLF.Imp <> beval def
R4662:4663 PLF.Equiv <> st:6 var
R4665:4666 PLF.Equiv <> b1:4 var
R4670:4674 PLF.Imp <> beval def
R4676:4677 PLF.Equiv <> st:6 var
R4679:4680 PLF.Equiv <> b2:5 var
prf 4789:4802 <> aequiv_example
R4807:4812 PLF.Equiv <> aequiv def
R4818:4820 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R4826:4828 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R4822:4824 PLF.Imp <> :com::x_'-'_x not
R4821:4821 PLF.Imp <> X def
R4825:4825 PLF.Imp <> X def
R4834:4836 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R4838:4840 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
prf 4889:4902 <> bequiv_example
R4907:4912 PLF.Equiv <> bequiv def
R4918:4920 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R4930:4932 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R4926:4928 PLF.Imp <> :com::x_'='_x not
R4922:4924 PLF.Imp <> :com::x_'-'_x not
R4921:4921 PLF.Imp <> X def
R4925:4925 PLF.Imp <> X def
R4938:4940 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R4945:4947 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R4941:4944 PLF.Imp <> :com::'true' not
R4977:4981 PLF.Imp <> beval def
R4994:5007 PLF.Equiv <> aequiv_example thm
R4994:5007 PLF.Equiv <> aequiv_example thm
R4994:5007 PLF.Equiv <> aequiv_example thm
def 5705:5710 <> cequiv
R5721:5723 PLF.Imp <> com ind
binder 5713:5714 <> c1:7
binder 5716:5717 <> c2:8
R5755:5759 PLF.Imp <> state def
binder 5746:5747 <> st:9
binder 5749:5751 <> st':10
R5767:5767 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R5784:5790 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R5807:5807 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R5770:5773 PLF.Imp <> :::x_'=['_x_']=>'_x not
R5776:5780 PLF.Imp <> :::x_'=['_x_']=>'_x not
R5774:5775 PLF.Equiv <> c1:7 var
R5768:5769 PLF.Equiv <> st:9 var
R5781:5783 PLF.Equiv <> st':10 var
R5793:5796 PLF.Imp <> :::x_'=['_x_']=>'_x not
R5799:5803 PLF.Imp <> :::x_'=['_x_']=>'_x not
R5797:5798 PLF.Equiv <> c2:8 var
R5791:5792 PLF.Equiv <> st:9 var
R5804:5806 PLF.Equiv <> st':10 var
def 6054:6060 <> refines
R6071:6073 PLF.Imp <> com ind
binder 6063:6064 <> c1:11
binder 6066:6067 <> c2:12
R6105:6109 PLF.Imp <> state def
binder 6096:6097 <> st:13
binder 6099:6101 <> st':14
R6117:6117 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6134:6139 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6156:6156 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6120:6123 PLF.Imp <> :::x_'=['_x_']=>'_x not
R6126:6130 PLF.Imp <> :::x_'=['_x_']=>'_x not
R6124:6125 PLF.Equiv <> c1:11 var
R6118:6119 PLF.Equiv <> st:13 var
R6131:6133 PLF.Equiv <> st':14 var
R6142:6145 PLF.Imp <> :::x_'=['_x_']=>'_x not
R6148:6152 PLF.Imp <> :::x_'=['_x_']=>'_x not
R6146:6147 PLF.Equiv <> c2:12 var
R6140:6141 PLF.Equiv <> st:13 var
R6153:6155 PLF.Equiv <> st':14 var
prf 6390:6398 <> skip_left
binder 6409:6409 <> c:15
R6414:6419 PLF.Equiv <> cequiv def
R6425:6427 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R6435:6437 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R6432:6433 PLF.Imp <> :com:com_scope:x_';'_x not
R6428:6431 PLF.Imp <> :com:com_scope:'skip' not
R6434:6434 PLF.Equiv <> c:15 var
R6443:6443 PLF.Equiv <> c:15 var
R6616:6620 PLF.Imp <> E_Seq constr
R6616:6620 PLF.Imp <> E_Seq constr
R6643:6648 PLF.Imp <> E_Skip constr
R6643:6648 PLF.Imp <> E_Skip constr
prf 6822:6831 <> skip_right
binder 6842:6842 <> c:16
R6847:6852 PLF.Equiv <> cequiv def
R6858:6860 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R6869:6871 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R6862:6864 PLF.Imp <> :com:com_scope:x_';'_x not
R6861:6861 PLF.Equiv <> c:16 var
R6865:6868 PLF.Imp <> :com:com_scope:'skip' not
R6877:6877 PLF.Equiv <> c:16 var
R7027:7031 PLF.Imp <> E_Seq constr
R7027:7031 PLF.Imp <> E_Seq constr
R7073:7078 PLF.Imp <> E_Skip constr
R7073:7078 PLF.Imp <> E_Skip constr
prf 7187:7200 <> if_true_simple
binder 7211:7212 <> c1:17
binder 7214:7215 <> c2:18
R7220:7225 PLF.Equiv <> cequiv def
R7231:7233 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R7261:7263 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R7234:7236 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R7241:7246 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R7249:7254 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R7257:7260 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R7237:7240 PLF.Imp <> :com::'true' not
R7247:7248 PLF.Equiv <> c1:17 var
R7255:7256 PLF.Equiv <> c2:18 var
R7269:7270 PLF.Equiv <> c1:17 var
R7413:7420 PLF.Imp <> E_IfTrue constr
R7413:7420 PLF.Imp <> E_IfTrue constr
prf 9363:9369 <> if_true
binder 9379:9379 <> b:19
binder 9381:9382 <> c1:20
binder 9384:9385 <> c2:21
R9407:9413 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9390:9395 PLF.Equiv <> bequiv def
R9397:9397 PLF.Equiv <> b:19 var
R9399:9400 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R9405:9406 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R9401:9404 PLF.Imp <> :com::'true' not
R9414:9419 PLF.Equiv <> cequiv def
R9425:9427 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R9452:9454 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R9428:9430 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R9432:9437 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R9440:9445 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R9448:9451 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R9431:9431 PLF.Equiv <> b:19 var
R9438:9439 PLF.Equiv <> c1:20 var
R9446:9447 PLF.Equiv <> c2:21 var
R9460:9461 PLF.Equiv <> c1:20 var
R9660:9665 PLF.Equiv <> bequiv def
R9754:9761 PLF.Imp <> E_IfTrue constr
R9754:9761 PLF.Imp <> E_IfTrue constr
R9791:9796 PLF.Equiv <> bequiv def
prf 9916:9923 <> if_false
binder 9934:9934 <> b:22
binder 9936:9937 <> c1:23
binder 9939:9940 <> c2:24
R9963:9968 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9945:9950 PLF.Equiv <> bequiv def
R9952:9952 PLF.Equiv <> b:22 var
R9954:9955 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R9961:9962 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R9956:9960 PLF.Imp <> :com::'false' not
R9969:9974 PLF.Equiv <> cequiv def
R9980:9982 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R10007:10009 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R9983:9985 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R9987:9992 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R9995:10000 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10003:10006 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R9986:9986 PLF.Equiv <> b:22 var
R9993:9994 PLF.Equiv <> c1:23 var
R10001:10002 PLF.Equiv <> c2:24 var
R10015:10016 PLF.Equiv <> c2:24 var
R10164:10169 PLF.Equiv <> bequiv def
R10309:10317 PLF.Imp <> E_IfFalse constr
R10309:10317 PLF.Imp <> E_IfFalse constr
R10347:10352 PLF.Equiv <> bequiv def
prf 10560:10575 <> swap_if_branches
binder 10586:10586 <> b:25
binder 10588:10589 <> c1:26
binder 10591:10592 <> c2:27
R10597:10602 PLF.Equiv <> cequiv def
R10608:10610 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R10635:10637 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R10611:10613 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10615:10620 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10623:10628 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10631:10634 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10614:10614 PLF.Equiv <> b:25 var
R10621:10622 PLF.Equiv <> c1:26 var
R10629:10630 PLF.Equiv <> c2:27 var
R10643:10645 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R10672:10674 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R10646:10648 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10652:10657 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10660:10665 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10668:10671 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10649:10650 PLF.Imp <> :com::'~'_x not
R10651:10651 PLF.Equiv <> b:25 var
R10658:10659 PLF.Equiv <> c2:27 var
R10666:10667 PLF.Equiv <> c1:26 var
R10721:10725 PLF.Imp <> beval def
R10721:10725 PLF.Imp <> beval def
R10820:10828 PLF.Imp <> E_IfFalse constr
R10820:10828 PLF.Imp <> E_IfFalse constr
R11031:11038 PLF.Imp <> E_IfTrue constr
R11031:11038 PLF.Imp <> E_IfTrue constr
R11209:11216 PLF.Imp <> E_IfTrue constr
R11209:11216 PLF.Imp <> E_IfTrue constr
R11326:11334 PLF.Imp <> E_IfFalse constr
R11326:11334 PLF.Imp <> E_IfFalse constr
prf 11783:11793 <> while_false
binder 11804:11804 <> b:28
binder 11806:11806 <> c:29
R11829:11834 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11811:11816 PLF.Equiv <> bequiv def
R11818:11818 PLF.Equiv <> b:28 var
R11820:11821 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R11827:11828 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R11822:11826 PLF.Imp <> :com::'false' not
R11835:11840 PLF.Equiv <> cequiv def
R11846:11848 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R11865:11867 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R11849:11854 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R11856:11859 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R11861:11864 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R11855:11855 PLF.Equiv <> b:28 var
R11860:11860 PLF.Equiv <> c:29 var
R11873:11875 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R11880:11882 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R11876:11879 PLF.Imp <> :com:com_scope:'skip' not
R12000:12005 PLF.Imp <> E_Skip constr
R12000:12005 PLF.Imp <> E_Skip constr
R12117:12128 PLF.Imp <> E_WhileFalse constr
R12117:12128 PLF.Imp <> E_WhileFalse constr
prf 13513:13530 <> while_true_nonterm
binder 13541:13541 <> b:30
binder 13543:13543 <> c:31
binder 13545:13546 <> st:32
binder 13548:13550 <> st':33
R13572:13577 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13555:13560 PLF.Equiv <> bequiv def
R13562:13562 PLF.Equiv <> b:30 var
R13564:13565 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R13570:13571 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R13566:13569 PLF.Imp <> :com::'true' not
R13578:13580 Coq.Init.Logic <> ::type_scope:'~'_x not
R13611:13612 Coq.Init.Logic <> ::type_scope:'~'_x not
R13583:13586 PLF.Imp <> :::x_'=['_x_']=>'_x not
R13603:13607 PLF.Imp <> :::x_'=['_x_']=>'_x not
R13587:13592 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13594:13597 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13599:13602 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13593:13593 PLF.Equiv <> b:30 var
R13598:13598 PLF.Equiv <> c:31 var
R13581:13582 PLF.Equiv <> st:32 var
R13608:13610 PLF.Equiv <> st':33 var
R13693:13695 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R13712:13714 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R13696:13701 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13703:13706 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13708:13711 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13693:13695 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R13712:13714 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R13696:13701 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13703:13706 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13708:13711 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13989:13994 PLF.Equiv <> bequiv def
prf 14545:14554 <> while_true
binder 14565:14565 <> b:34
binder 14567:14567 <> c:35
R14589:14595 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14572:14577 PLF.Equiv <> bequiv def
R14579:14579 PLF.Equiv <> b:34 var
R14581:14582 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R14587:14588 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R14583:14586 PLF.Imp <> :com::'true' not
R14596:14601 PLF.Equiv <> cequiv def
R14607:14609 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R14626:14628 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R14610:14615 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R14617:14620 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R14622:14625 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R14616:14616 PLF.Equiv <> b:34 var
R14621:14621 PLF.Equiv <> c:35 var
R14634:14636 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R14659:14661 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R14637:14642 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R14647:14650 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R14655:14658 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R14643:14646 PLF.Imp <> :com::'true' not
R14651:14654 PLF.Imp <> :com:com_scope:'skip' not
R14695:14700 PLF.Equiv <> bequiv def
R14874:14891 PLF.Equiv <> while_true_nonterm thm
R14874:14891 PLF.Equiv <> while_true_nonterm thm
R14995:15010 PLF.Imp <> loop_never_stops thm
R14995:15010 PLF.Imp <> loop_never_stops thm
R15098:15113 PLF.Imp <> loop_never_stops thm
R15098:15113 PLF.Imp <> loop_never_stops thm
prf 15455:15468 <> loop_unrolling
binder 15479:15479 <> b:36
binder 15481:15481 <> c:37
R15486:15491 PLF.Equiv <> cequiv def
R15497:15499 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R15516:15518 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R15500:15505 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R15507:15510 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R15512:15515 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R15506:15506 PLF.Equiv <> b:36 var
R15511:15511 PLF.Equiv <> c:37 var
R15524:15526 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R15571:15573 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R15527:15529 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R15531:15536 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R15557:15562 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R15567:15570 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R15530:15530 PLF.Equiv <> b:36 var
R15538:15540 PLF.Imp <> :com:com_scope:x_';'_x not
R15537:15537 PLF.Equiv <> c:37 var
R15541:15546 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R15548:15551 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R15553:15556 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R15547:15547 PLF.Equiv <> b:36 var
R15552:15552 PLF.Equiv <> c:37 var
R15563:15566 PLF.Imp <> :com:com_scope:'skip' not
R15729:15737 PLF.Imp <> E_IfFalse constr
R15729:15737 PLF.Imp <> E_IfFalse constr
R15774:15779 PLF.Imp <> E_Skip constr
R15774:15779 PLF.Imp <> E_Skip constr
R15816:15823 PLF.Imp <> E_IfTrue constr
R15816:15823 PLF.Imp <> E_IfTrue constr
R15860:15864 PLF.Imp <> E_Seq constr
R15860:15864 PLF.Imp <> E_Seq constr
R16032:16042 PLF.Imp <> E_WhileTrue constr
R16032:16042 PLF.Imp <> E_WhileTrue constr
R16186:16197 PLF.Imp <> E_WhileFalse constr
R16186:16197 PLF.Imp <> E_WhileFalse constr
prf 16289:16297 <> seq_assoc
binder 16308:16309 <> c1:38
binder 16311:16312 <> c2:39
binder 16314:16315 <> c3:40
R16320:16325 PLF.Equiv <> cequiv def
R16327:16328 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R16339:16340 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R16336:16336 PLF.Imp <> :com:com_scope:x_';'_x not
R16329:16329 PLF.Imp <> :com:com_scope:'('_x_')' not
R16335:16335 PLF.Imp <> :com:com_scope:'('_x_')' not
R16332:16332 PLF.Imp <> :com:com_scope:x_';'_x not
R16330:16331 PLF.Equiv <> c1:38 var
R16333:16334 PLF.Equiv <> c2:39 var
R16337:16338 PLF.Equiv <> c3:40 var
R16342:16343 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R16354:16355 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R16346:16346 PLF.Imp <> :com:com_scope:x_';'_x not
R16344:16345 PLF.Equiv <> c1:38 var
R16347:16347 PLF.Imp <> :com:com_scope:'('_x_')' not
R16353:16353 PLF.Imp <> :com:com_scope:'('_x_')' not
R16350:16350 PLF.Imp <> :com:com_scope:x_';'_x not
R16348:16349 PLF.Equiv <> c2:39 var
R16351:16352 PLF.Equiv <> c3:40 var
R16482:16486 PLF.Imp <> E_Seq constr
R16482:16486 PLF.Imp <> E_Seq constr
R16529:16533 PLF.Imp <> E_Seq constr
R16529:16533 PLF.Imp <> E_Seq constr
R16658:16662 PLF.Imp <> E_Seq constr
R16658:16662 PLF.Imp <> E_Seq constr
R16687:16691 PLF.Imp <> E_Seq constr
R16687:16691 PLF.Imp <> E_Seq constr
prf 16989:17007 <> identity_assignment
binder 17018:17018 <> x:41
R17023:17028 PLF.Equiv <> cequiv def
R17034:17036 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17043:17045 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17038:17041 PLF.Imp <> :com:com_scope:x_':='_x not
R17037:17037 PLF.Equiv <> x:41 var
R17042:17042 PLF.Equiv <> x:41 var
R17051:17053 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17058:17060 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17054:17057 PLF.Imp <> :com:com_scope:'skip' not
R17152:17164 PLF.Maps <> t_update_same thm
R17152:17164 PLF.Maps <> t_update_same thm
R17152:17164 PLF.Maps <> t_update_same thm
R17177:17182 PLF.Imp <> E_Skip constr
R17177:17182 PLF.Imp <> E_Skip constr
R17218:17221 PLF.Imp <> :::x_'=['_x_']=>'_x not
R17228:17233 PLF.Imp <> :::x_'=['_x_']=>'_x not
R17251:17251 PLF.Imp <> :::x_'=['_x_']=>'_x not
R17223:17226 PLF.Imp <> :com:com_scope:x_':='_x not
R17235:17239 PLF.Maps <> :::x_'!->'_x_';'_x not
R17245:17247 PLF.Maps <> :::x_'!->'_x_';'_x not
R17218:17221 PLF.Imp <> :::x_'=['_x_']=>'_x not
R17228:17233 PLF.Imp <> :::x_'=['_x_']=>'_x not
R17251:17251 PLF.Imp <> :::x_'=['_x_']=>'_x not
R17223:17226 PLF.Imp <> :com:com_scope:x_':='_x not
R17235:17239 PLF.Maps <> :::x_'!->'_x_';'_x not
R17245:17247 PLF.Maps <> :::x_'!->'_x_';'_x not
R17267:17272 PLF.Imp <> E_Asgn constr
R17267:17272 PLF.Imp <> E_Asgn constr
R17302:17314 PLF.Maps <> t_update_same thm
R17302:17314 PLF.Maps <> t_update_same thm
R17302:17314 PLF.Maps <> t_update_same thm
prf 17426:17438 <> assign_aequiv
R17454:17459 Coq.Strings.String <> string ind
binder 17450:17450 <> X:42
R17467:17470 PLF.Imp <> aexp ind
binder 17463:17463 <> a:43
R17492:17497 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17476:17481 PLF.Equiv <> aequiv def
R17483:17485 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17487:17489 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17486:17486 PLF.Equiv <> X:42 var
R17491:17491 PLF.Equiv <> a:43 var
R17498:17503 PLF.Equiv <> cequiv def
R17505:17507 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17512:17514 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17508:17511 PLF.Imp <> :com:com_scope:'skip' not
R17516:17518 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17525:17527 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17520:17523 PLF.Imp <> :com:com_scope:x_':='_x not
R17519:17519 PLF.Equiv <> X:42 var
R17524:17524 PLF.Equiv <> a:43 var
R17623:17628 PLF.Equiv <> aequiv def
R17668:17671 PLF.Imp <> :::x_'=['_x_']=>'_x not
R17678:17683 PLF.Imp <> :::x_'=['_x_']=>'_x not
R17707:17707 PLF.Imp <> :::x_'=['_x_']=>'_x not
R17673:17676 PLF.Imp <> :com:com_scope:x_':='_x not
R17685:17689 PLF.Maps <> :::x_'!->'_x_';'_x not
R17701:17703 PLF.Maps <> :::x_'!->'_x_';'_x not
R17690:17694 PLF.Imp <> aeval def
R17668:17671 PLF.Imp <> :::x_'=['_x_']=>'_x not
R17678:17683 PLF.Imp <> :::x_'=['_x_']=>'_x not
R17707:17707 PLF.Imp <> :::x_'=['_x_']=>'_x not
R17673:17676 PLF.Imp <> :com:com_scope:x_':='_x not
R17685:17689 PLF.Maps <> :::x_'!->'_x_';'_x not
R17701:17703 PLF.Maps <> :::x_'!->'_x_';'_x not
R17690:17694 PLF.Imp <> aeval def
R17723:17728 PLF.Imp <> E_Asgn constr
R17723:17728 PLF.Imp <> E_Asgn constr
R17788:17800 PLF.Maps <> t_update_same thm
R17788:17800 PLF.Maps <> t_update_same thm
R17788:17800 PLF.Maps <> t_update_same thm
R17906:17918 PLF.Maps <> t_update_same thm
R17906:17918 PLF.Maps <> t_update_same thm
R17906:17918 PLF.Maps <> t_update_same thm
def 18534:18539 <> prog_a
R18543:18545 PLF.Imp <> com ind
R18552:18554 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R18596:18598 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R18555:18560 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R18566:18576 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R18587:18595 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R18562:18564 PLF.Imp <> :com::x_'>'_x not
R18561:18561 PLF.Imp <> X def
R18578:18581 PLF.Imp <> :com:com_scope:x_':='_x not
R18577:18577 PLF.Imp <> X def
R18583:18585 PLF.Imp <> :com::x_'+'_x not
R18582:18582 PLF.Imp <> X def
def 18613:18618 <> prog_b
R18622:18624 PLF.Imp <> com ind
R18631:18633 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R18745:18747 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R18715:18721 PLF.Imp <> :com:com_scope:x_';'_x not
R18634:18636 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R18644:18656 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R18682:18699 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R18706:18714 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R18637:18637 PLF.Imp <> :com:com_scope:'('_x_')' not
R18643:18643 PLF.Imp <> :com:com_scope:'('_x_')' not
R18639:18641 PLF.Imp <> :com::x_'='_x not
R18638:18638 PLF.Imp <> X def
R18667:18675 PLF.Imp <> :com:com_scope:x_';'_x not
R18658:18661 PLF.Imp <> :com:com_scope:x_':='_x not
R18657:18657 PLF.Imp <> X def
R18663:18665 PLF.Imp <> :com::x_'+'_x not
R18662:18662 PLF.Imp <> X def
R18677:18680 PLF.Imp <> :com:com_scope:x_':='_x not
R18676:18676 PLF.Imp <> Y def
R18701:18704 PLF.Imp <> :com:com_scope:x_':='_x not
R18700:18700 PLF.Imp <> Y def
R18732:18738 PLF.Imp <> :com:com_scope:x_';'_x not
R18723:18726 PLF.Imp <> :com:com_scope:x_':='_x not
R18722:18722 PLF.Imp <> X def
R18728:18730 PLF.Imp <> :com::x_'-'_x not
R18727:18727 PLF.Imp <> X def
R18731:18731 PLF.Imp <> Y def
R18740:18743 PLF.Imp <> :com:com_scope:x_':='_x not
R18739:18739 PLF.Imp <> Y def
def 18762:18767 <> prog_c
R18771:18773 PLF.Imp <> com ind
R18780:18782 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R18787:18789 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R18783:18786 PLF.Imp <> :com:com_scope:'skip' not
def 18805:18810 <> prog_d
R18814:18816 PLF.Imp <> com ind
R18823:18825 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R18874:18876 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R18826:18831 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R18838:18848 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R18865:18873 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R18833:18836 PLF.Imp <> :com::x_'<>'_x not
R18832:18832 PLF.Imp <> X def
R18850:18853 PLF.Imp <> :com:com_scope:x_':='_x not
R18849:18849 PLF.Imp <> X def
R18861:18863 PLF.Imp <> :com::x_'+'_x not
R18854:18854 PLF.Imp <> :com:com_scope:'('_x_')' not
R18860:18860 PLF.Imp <> :com:com_scope:'('_x_')' not
R18856:18858 PLF.Imp <> :com::x_'*'_x not
R18855:18855 PLF.Imp <> X def
R18859:18859 PLF.Imp <> Y def
def 18891:18896 <> prog_e
R18900:18902 PLF.Imp <> com ind
R18909:18911 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R18918:18920 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R18913:18916 PLF.Imp <> :com:com_scope:x_':='_x not
R18912:18912 PLF.Imp <> Y def
def 18935:18940 <> prog_f
R18944:18946 PLF.Imp <> com ind
R18953:18955 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R19015:19017 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R18966:18972 PLF.Imp <> :com:com_scope:x_';'_x not
R18957:18960 PLF.Imp <> :com:com_scope:x_':='_x not
R18956:18956 PLF.Imp <> Y def
R18962:18964 PLF.Imp <> :com::x_'+'_x not
R18961:18961 PLF.Imp <> X def
R18973:18978 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R18985:18995 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R19006:19014 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R18980:18983 PLF.Imp <> :com::x_'<>'_x not
R18979:18979 PLF.Imp <> X def
R18984:18984 PLF.Imp <> Y def
R18997:19000 PLF.Imp <> :com:com_scope:x_':='_x not
R18996:18996 PLF.Imp <> Y def
R19002:19004 PLF.Imp <> :com::x_'+'_x not
R19001:19001 PLF.Imp <> X def
def 19032:19037 <> prog_g
R19041:19043 PLF.Imp <> com ind
R19050:19052 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R19087:19089 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R19053:19058 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R19063:19073 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R19078:19086 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R19059:19062 PLF.Imp <> :com::'true' not
R19074:19077 PLF.Imp <> :com:com_scope:'skip' not
def 19104:19109 <> prog_h
R19113:19115 PLF.Imp <> com ind
R19122:19124 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R19167:19169 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R19125:19130 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R19137:19147 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R19158:19166 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R19132:19135 PLF.Imp <> :com::x_'<>'_x not
R19131:19131 PLF.Imp <> X def
R19136:19136 PLF.Imp <> X def
R19149:19152 PLF.Imp <> :com:com_scope:x_':='_x not
R19148:19148 PLF.Imp <> X def
R19154:19156 PLF.Imp <> :com::x_'+'_x not
R19153:19153 PLF.Imp <> X def
def 19184:19189 <> prog_i
R19193:19195 PLF.Imp <> com ind
R19202:19204 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R19247:19249 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R19205:19210 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R19217:19227 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R19238:19246 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R19212:19215 PLF.Imp <> :com::x_'<>'_x not
R19211:19211 PLF.Imp <> X def
R19216:19216 PLF.Imp <> Y def
R19229:19232 PLF.Imp <> :com:com_scope:x_':='_x not
R19228:19228 PLF.Imp <> X def
R19234:19236 PLF.Imp <> :com::x_'+'_x not
R19233:19233 PLF.Imp <> Y def
def 19264:19276 <> equiv_classes
R19280:19283 Coq.Init.Datatypes <> list ind
R19286:19289 Coq.Init.Datatypes <> list ind
R19291:19293 PLF.Imp <> com ind
R19302:19303 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R19336:19342 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R19359:19364 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R19381:19386 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R19395:19396 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R19304:19304 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R19311:19312 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R19319:19320 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R19327:19328 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R19335:19335 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R19305:19310 PLF.Equiv <> prog_a def
R19313:19318 PLF.Equiv <> prog_d def
R19321:19326 PLF.Equiv <> prog_f def
R19329:19334 PLF.Equiv <> prog_g def
R19343:19343 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R19350:19351 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R19358:19358 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R19344:19349 PLF.Equiv <> prog_b def
R19352:19357 PLF.Equiv <> prog_e def
R19365:19365 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R19372:19373 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R19380:19380 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R19366:19371 PLF.Equiv <> prog_c def
R19374:19379 PLF.Equiv <> prog_h def
R19387:19387 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R19394:19394 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R19388:19393 PLF.Equiv <> prog_i def
def 19451:19480 <> manual_grade_for_equiv_classes
R19484:19489 Coq.Init.Datatypes <> option ind
R19495:19495 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R19492:19494 Coq.Init.Datatypes <> nat ind
R19496:19501 Coq.Strings.String <> string ind
R19507:19510 Coq.Init.Datatypes <> None constr
prf 20057:20067 <> refl_aequiv
R20083:20086 PLF.Imp <> aexp ind
binder 20079:20079 <> a:44
R20092:20097 PLF.Equiv <> aequiv def
R20099:20099 PLF.Equiv <> a:44 var
R20101:20101 PLF.Equiv <> a:44 var
prf 20152:20161 <> sym_aequiv
R20181:20184 PLF.Imp <> aexp ind
binder 20173:20174 <> a1:45
binder 20176:20177 <> a2:46
R20202:20205 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20190:20195 PLF.Equiv <> aequiv def
R20197:20198 PLF.Equiv <> a1:45 var
R20200:20201 PLF.Equiv <> a2:46 var
R20206:20211 PLF.Equiv <> aequiv def
R20213:20214 PLF.Equiv <> a2:46 var
R20216:20217 PLF.Equiv <> a1:45 var
prf 20288:20299 <> trans_aequiv
R20322:20325 PLF.Imp <> aexp ind
binder 20311:20312 <> a1:47
binder 20314:20315 <> a2:48
binder 20317:20318 <> a3:49
R20343:20346 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20331:20336 PLF.Equiv <> aequiv def
R20338:20339 PLF.Equiv <> a1:47 var
R20341:20342 PLF.Equiv <> a2:48 var
R20359:20362 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20347:20352 PLF.Equiv <> aequiv def
R20354:20355 PLF.Equiv <> a2:48 var
R20357:20358 PLF.Equiv <> a3:49 var
R20363:20368 PLF.Equiv <> aequiv def
R20370:20371 PLF.Equiv <> a1:47 var
R20373:20374 PLF.Equiv <> a3:49 var
R20393:20398 PLF.Equiv <> aequiv def
prf 20493:20503 <> refl_bequiv
R20519:20522 PLF.Imp <> bexp ind
binder 20515:20515 <> b:50
R20528:20533 PLF.Equiv <> bequiv def
R20535:20535 PLF.Equiv <> b:50 var
R20537:20537 PLF.Equiv <> b:50 var
R20556:20561 PLF.Equiv <> bequiv def
prf 20603:20612 <> sym_bequiv
R20632:20635 PLF.Imp <> bexp ind
binder 20624:20625 <> b1:51
binder 20627:20628 <> b2:52
R20653:20656 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20641:20646 PLF.Equiv <> bequiv def
R20648:20649 PLF.Equiv <> b1:51 var
R20651:20652 PLF.Equiv <> b2:52 var
R20657:20662 PLF.Equiv <> bequiv def
R20664:20665 PLF.Equiv <> b2:52 var
R20667:20668 PLF.Equiv <> b1:51 var
R20687:20692 PLF.Equiv <> bequiv def
prf 20754:20765 <> trans_bequiv
R20788:20791 PLF.Imp <> bexp ind
binder 20777:20778 <> b1:53
binder 20780:20781 <> b2:54
binder 20783:20784 <> b3:55
R20809:20812 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20797:20802 PLF.Equiv <> bequiv def
R20804:20805 PLF.Equiv <> b1:53 var
R20807:20808 PLF.Equiv <> b2:54 var
R20825:20828 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20813:20818 PLF.Equiv <> bequiv def
R20820:20821 PLF.Equiv <> b2:54 var
R20823:20824 PLF.Equiv <> b3:55 var
R20829:20834 PLF.Equiv <> bequiv def
R20836:20837 PLF.Equiv <> b1:53 var
R20839:20840 PLF.Equiv <> b3:55 var
R20859:20864 PLF.Equiv <> bequiv def
prf 20959:20969 <> refl_cequiv
R20985:20987 PLF.Imp <> com ind
binder 20981:20981 <> c:56
R20993:20998 PLF.Equiv <> cequiv def
R21000:21000 PLF.Equiv <> c:56 var
R21002:21002 PLF.Equiv <> c:56 var
R21021:21026 PLF.Equiv <> cequiv def
prf 21072:21081 <> sym_cequiv
R21101:21103 PLF.Imp <> com ind
binder 21093:21094 <> c1:57
binder 21096:21097 <> c2:58
R21121:21124 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21109:21114 PLF.Equiv <> cequiv def
R21116:21117 PLF.Equiv <> c1:57 var
R21119:21120 PLF.Equiv <> c2:58 var
R21125:21130 PLF.Equiv <> cequiv def
R21132:21133 PLF.Equiv <> c2:58 var
R21135:21136 PLF.Equiv <> c1:57 var
R21155:21160 PLF.Equiv <> cequiv def
prf 21224:21235 <> trans_cequiv
R21258:21260 PLF.Imp <> com ind
binder 21247:21248 <> c1:59
binder 21250:21251 <> c2:60
binder 21253:21254 <> c3:61
R21278:21281 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21266:21271 PLF.Equiv <> cequiv def
R21273:21274 PLF.Equiv <> c1:59 var
R21276:21277 PLF.Equiv <> c2:60 var
R21294:21297 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21282:21287 PLF.Equiv <> cequiv def
R21289:21290 PLF.Equiv <> c2:60 var
R21292:21293 PLF.Equiv <> c3:61 var
R21298:21303 PLF.Equiv <> cequiv def
R21305:21306 PLF.Equiv <> c1:59 var
R21308:21309 PLF.Equiv <> c3:61 var
R21328:21333 PLF.Equiv <> cequiv def
prf 22783:22798 <> CAsgn_congruence
binder 22809:22809 <> x:62
binder 22811:22811 <> a:63
binder 22813:22814 <> a':64
R22830:22835 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22819:22824 PLF.Equiv <> aequiv def
R22826:22826 PLF.Equiv <> a:63 var
R22828:22829 PLF.Equiv <> a':64 var
R22836:22841 PLF.Equiv <> cequiv def
R22843:22844 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R22851:22852 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R22846:22849 PLF.Imp <> :com:com_scope:x_':='_x not
R22845:22845 PLF.Equiv <> x:62 var
R22850:22850 PLF.Equiv <> a:63 var
R22854:22855 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R22863:22864 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R22857:22860 PLF.Imp <> :com:com_scope:x_':='_x not
R22856:22856 PLF.Equiv <> x:62 var
R22861:22862 PLF.Equiv <> a':64 var
R22975:22980 PLF.Imp <> E_Asgn constr
R22975:22980 PLF.Imp <> E_Asgn constr
R23062:23067 PLF.Imp <> E_Asgn constr
R23062:23067 PLF.Imp <> E_Asgn constr
prf 24905:24921 <> CWhile_congruence
binder 24932:24932 <> b:65
binder 24934:24935 <> b':66
binder 24937:24937 <> c:67
binder 24939:24940 <> c':68
R24956:24959 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24945:24950 PLF.Equiv <> bequiv def
R24952:24952 PLF.Equiv <> b:65 var
R24954:24955 PLF.Equiv <> b':66 var
R24971:24976 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24960:24965 PLF.Equiv <> cequiv def
R24967:24967 PLF.Equiv <> c:67 var
R24969:24970 PLF.Equiv <> c':68 var
R24977:24982 PLF.Equiv <> cequiv def
R24984:24986 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R25003:25005 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R24987:24992 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R24994:24997 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R24999:25002 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R24993:24993 PLF.Equiv <> b:65 var
R24998:24998 PLF.Equiv <> c:67 var
R25007:25009 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R25028:25030 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R25010:25015 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R25018:25021 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R25024:25027 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R25016:25017 PLF.Equiv <> b':66 var
R25022:25023 PLF.Equiv <> c':68 var
R25188:25191 PLF.Imp <> bexp ind
binder 25181:25181 <> b:69
binder 25183:25184 <> b':70
R25202:25204 PLF.Imp <> com ind
binder 25195:25195 <> c:71
binder 25197:25198 <> c':72
R25217:25221 PLF.Imp <> state def
binder 25208:25209 <> st:73
binder 25211:25213 <> st':74
R25249:25252 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25238:25243 PLF.Equiv <> bequiv def
R25245:25245 PLF.Equiv <> b:69 var
R25247:25248 PLF.Equiv <> b':70 var
R25264:25280 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25253:25258 PLF.Equiv <> cequiv def
R25260:25260 PLF.Equiv <> c:71 var
R25262:25263 PLF.Equiv <> c':72 var
R25311:25327 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25283:25286 PLF.Imp <> :::x_'=['_x_']=>'_x not
R25303:25307 PLF.Imp <> :::x_'=['_x_']=>'_x not
R25287:25292 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R25294:25297 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R25299:25302 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R25293:25293 PLF.Equiv <> b:69 var
R25298:25298 PLF.Equiv <> c:71 var
R25281:25282 PLF.Equiv <> st:73 var
R25308:25310 PLF.Equiv <> st':74 var
R25330:25333 PLF.Imp <> :::x_'=['_x_']=>'_x not
R25352:25356 PLF.Imp <> :::x_'=['_x_']=>'_x not
R25334:25339 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R25342:25345 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R25348:25351 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R25340:25341 PLF.Equiv <> b':70 var
R25346:25347 PLF.Equiv <> c':72 var
R25328:25329 PLF.Equiv <> st:73 var
R25357:25359 PLF.Equiv <> st':74 var
R25188:25191 PLF.Imp <> bexp ind
binder 25181:25181 <> b:75
binder 25183:25184 <> b':76
R25202:25204 PLF.Imp <> com ind
binder 25195:25195 <> c:77
binder 25197:25198 <> c':78
R25217:25221 PLF.Imp <> state def
binder 25208:25209 <> st:79
binder 25211:25213 <> st':80
R25249:25252 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25238:25243 PLF.Equiv <> bequiv def
R25245:25245 PLF.Equiv <> b:75 var
R25247:25248 PLF.Equiv <> b':76 var
R25264:25280 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25253:25258 PLF.Equiv <> cequiv def
R25260:25260 PLF.Equiv <> c:77 var
R25262:25263 PLF.Equiv <> c':78 var
R25311:25327 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25283:25286 PLF.Imp <> :::x_'=['_x_']=>'_x not
R25303:25307 PLF.Imp <> :::x_'=['_x_']=>'_x not
R25287:25292 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R25294:25297 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R25299:25302 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R25293:25293 PLF.Equiv <> b:75 var
R25298:25298 PLF.Equiv <> c:77 var
R25281:25282 PLF.Equiv <> st:79 var
R25308:25310 PLF.Equiv <> st':80 var
R25330:25333 PLF.Imp <> :::x_'=['_x_']=>'_x not
R25352:25356 PLF.Imp <> :::x_'=['_x_']=>'_x not
R25334:25339 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R25342:25345 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R25348:25351 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R25340:25341 PLF.Equiv <> b':76 var
R25346:25347 PLF.Equiv <> c':78 var
R25328:25329 PLF.Equiv <> st:79 var
R25357:25359 PLF.Equiv <> st':80 var
R25374:25379 PLF.Equiv <> bequiv def
R25381:25386 PLF.Equiv <> cequiv def
R25444:25446 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R25463:25465 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R25447:25452 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R25454:25457 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R25459:25462 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R25444:25446 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R25463:25465 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R25447:25452 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R25454:25457 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R25459:25462 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R25582:25593 PLF.Imp <> E_WhileFalse constr
R25582:25593 PLF.Imp <> E_WhileFalse constr
R25657:25667 PLF.Imp <> E_WhileTrue constr
R25657:25667 PLF.Imp <> E_WhileTrue constr
R25958:25967 PLF.Equiv <> sym_bequiv thm
R25958:25967 PLF.Equiv <> sym_bequiv thm
R25994:26003 PLF.Equiv <> sym_cequiv thm
R25994:26003 PLF.Equiv <> sym_cequiv thm
prf 26100:26114 <> CSeq_congruence
binder 26125:26126 <> c1:81
binder 26128:26130 <> c1':82
binder 26132:26133 <> c2:83
binder 26135:26137 <> c2':84
R26155:26158 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26142:26147 PLF.Equiv <> cequiv def
R26149:26150 PLF.Equiv <> c1:81 var
R26152:26154 PLF.Equiv <> c1':82 var
R26172:26177 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26159:26164 PLF.Equiv <> cequiv def
R26166:26167 PLF.Equiv <> c2:83 var
R26169:26171 PLF.Equiv <> c2':84 var
R26178:26183 PLF.Equiv <> cequiv def
R26185:26187 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R26193:26195 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R26190:26190 PLF.Imp <> :com:com_scope:x_';'_x not
R26188:26189 PLF.Equiv <> c1:81 var
R26191:26192 PLF.Equiv <> c2:83 var
R26197:26199 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R26207:26209 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R26203:26203 PLF.Imp <> :com:com_scope:x_';'_x not
R26200:26202 PLF.Equiv <> c1':82 var
R26204:26206 PLF.Equiv <> c2':84 var
R26301:26305 PLF.Imp <> E_Seq constr
R26301:26305 PLF.Imp <> E_Seq constr
R26411:26415 PLF.Imp <> E_Seq constr
R26411:26415 PLF.Imp <> E_Seq constr
prf 26568:26581 <> CIf_congruence
binder 26592:26592 <> b:85
binder 26594:26595 <> b':86
binder 26597:26598 <> c1:87
binder 26600:26602 <> c1':88
binder 26604:26605 <> c2:89
binder 26607:26609 <> c2':90
R26625:26628 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26614:26619 PLF.Equiv <> bequiv def
R26621:26621 PLF.Equiv <> b:85 var
R26623:26624 PLF.Equiv <> b':86 var
R26642:26645 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26629:26634 PLF.Equiv <> cequiv def
R26636:26637 PLF.Equiv <> c1:87 var
R26639:26641 PLF.Equiv <> c1':88 var
R26659:26664 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26646:26651 PLF.Equiv <> cequiv def
R26653:26654 PLF.Equiv <> c2:89 var
R26656:26658 PLF.Equiv <> c2':90 var
R26665:26670 PLF.Equiv <> cequiv def
R26672:26674 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R26699:26701 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R26675:26677 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R26679:26684 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R26687:26692 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R26695:26698 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R26678:26678 PLF.Equiv <> b:85 var
R26685:26686 PLF.Equiv <> c1:87 var
R26693:26694 PLF.Equiv <> c2:89 var
R26712:26714 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R26742:26744 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R26715:26717 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R26720:26725 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R26729:26734 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R26738:26741 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R26718:26719 PLF.Equiv <> b':86 var
R26726:26728 PLF.Equiv <> c1':88 var
R26735:26737 PLF.Equiv <> c2':90 var
R26871:26878 PLF.Imp <> E_IfTrue constr
R26871:26878 PLF.Imp <> E_IfTrue constr
R26947:26955 PLF.Imp <> E_IfFalse constr
R26947:26955 PLF.Imp <> E_IfFalse constr
R27071:27078 PLF.Imp <> E_IfTrue constr
R27071:27078 PLF.Imp <> E_IfTrue constr
R27147:27155 PLF.Imp <> E_IfFalse constr
R27147:27155 PLF.Imp <> E_IfFalse constr
def 27359:27376 <> congruence_example
R27381:27386 PLF.Equiv <> cequiv def
R27413:27415 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R27475:27477 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R27422:27430 PLF.Imp <> :com:com_scope:x_';'_x not
R27417:27420 PLF.Imp <> :com:com_scope:x_':='_x not
R27416:27416 PLF.Imp <> X def
R27431:27433 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R27439:27444 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R27451:27463 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R27471:27474 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R27435:27437 PLF.Imp <> :com::x_'='_x not
R27434:27434 PLF.Imp <> X def
R27446:27449 PLF.Imp <> :com:com_scope:x_':='_x not
R27445:27445 PLF.Imp <> Y def
R27465:27468 PLF.Imp <> :com:com_scope:x_':='_x not
R27464:27464 PLF.Imp <> Y def
R27504:27506 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R27596:27598 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R27513:27521 PLF.Imp <> :com:com_scope:x_';'_x not
R27508:27511 PLF.Imp <> :com:com_scope:x_':='_x not
R27507:27507 PLF.Imp <> X def
R27522:27524 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R27530:27535 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R27546:27584 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R27592:27595 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R27526:27528 PLF.Imp <> :com::x_'='_x not
R27525:27525 PLF.Imp <> X def
R27537:27540 PLF.Imp <> :com:com_scope:x_':='_x not
R27536:27536 PLF.Imp <> Y def
R27542:27544 PLF.Imp <> :com::x_'-'_x not
R27541:27541 PLF.Imp <> X def
R27545:27545 PLF.Imp <> X def
R27586:27589 PLF.Imp <> :com:com_scope:x_':='_x not
R27585:27585 PLF.Imp <> Y def
R27616:27630 PLF.Equiv <> CSeq_congruence thm
R27616:27630 PLF.Equiv <> CSeq_congruence thm
R27643:27653 PLF.Equiv <> refl_cequiv thm
R27643:27653 PLF.Equiv <> refl_cequiv thm
R27666:27679 PLF.Equiv <> CIf_congruence thm
R27666:27679 PLF.Equiv <> CIf_congruence thm
R27694:27704 PLF.Equiv <> refl_bequiv thm
R27694:27704 PLF.Equiv <> refl_bequiv thm
R27719:27734 PLF.Equiv <> CAsgn_congruence thm
R27719:27734 PLF.Equiv <> CAsgn_congruence thm
R27744:27749 PLF.Equiv <> aequiv def
R27781:27788 Coq.Arith.PeanoNat Nat sub_diag thm
R27781:27788 Coq.Arith.PeanoNat Nat sub_diag thm
R27803:27813 PLF.Equiv <> refl_cequiv thm
R27803:27813 PLF.Equiv <> refl_cequiv thm
def 28282:28307 <> manual_grade_for_not_congr
R28311:28316 Coq.Init.Datatypes <> option ind
R28322:28322 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R28319:28321 Coq.Init.Datatypes <> nat ind
R28323:28328 Coq.Strings.String <> string ind
R28334:28337 Coq.Init.Datatypes <> None constr
def 28816:28827 <> atrans_sound
R28843:28846 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28839:28842 PLF.Imp <> aexp ind
R28847:28850 PLF.Imp <> aexp ind
binder 28830:28835 <> atrans:91
R28877:28880 PLF.Imp <> aexp ind
binder 28873:28873 <> a:92
R28888:28893 PLF.Equiv <> aequiv def
R28895:28895 PLF.Equiv <> a:92 var
R28898:28903 PLF.Equiv <> atrans:91 var
R28905:28905 PLF.Equiv <> a:92 var
def 28921:28932 <> btrans_sound
R28948:28951 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28944:28947 PLF.Imp <> bexp ind
R28952:28955 PLF.Imp <> bexp ind
binder 28935:28940 <> btrans:93
R28982:28985 PLF.Imp <> bexp ind
binder 28978:28978 <> b:94
R28993:28998 PLF.Equiv <> bequiv def
R29000:29000 PLF.Equiv <> b:94 var
R29003:29008 PLF.Equiv <> btrans:93 var
R29010:29010 PLF.Equiv <> b:94 var
def 29026:29037 <> ctrans_sound
R29052:29055 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29049:29051 PLF.Imp <> com ind
R29056:29058 PLF.Imp <> com ind
binder 29040:29045 <> ctrans:95
R29085:29087 PLF.Imp <> com ind
binder 29081:29081 <> c:96
R29095:29100 PLF.Equiv <> cequiv def
R29102:29102 PLF.Equiv <> c:96 var
R29105:29110 PLF.Equiv <> ctrans:95 var
R29112:29112 PLF.Equiv <> c:96 var
def 29432:29450 <> fold_constants_aexp
R29457:29460 PLF.Imp <> aexp ind
binder 29453:29453 <> a:97
R29465:29468 PLF.Imp <> aexp ind
R29481:29481 PLF.Equiv <> a:97 var
R29492:29495 PLF.Imp <> ANum constr
R29508:29511 PLF.Imp <> ANum constr
R29519:29521 PLF.Imp <> AId constr
R29535:29537 PLF.Imp <> AId constr
R29545:29547 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29555:29557 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29550:29552 PLF.Imp <> :com::x_'+'_x not
R29573:29573 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29596:29608 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29631:29631 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29574:29592 PLF.Equiv <> fold_constants_aexp:98 def
R29609:29627 PLF.Equiv <> fold_constants_aexp:98 def
R29648:29648 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29656:29657 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29665:29665 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29649:29652 PLF.Imp <> ANum constr
R29658:29661 PLF.Imp <> ANum constr
R29670:29673 PLF.Imp <> ANum constr
R29678:29680 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R29691:29691 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29695:29696 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29700:29700 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29705:29707 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29717:29719 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29711:29713 PLF.Imp <> :com::x_'+'_x not
R29733:29735 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29743:29745 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29738:29740 PLF.Imp <> :com::x_'-'_x not
R29760:29760 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29783:29795 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29818:29818 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29761:29779 PLF.Equiv <> fold_constants_aexp:98 def
R29796:29814 PLF.Equiv <> fold_constants_aexp:98 def
R29835:29835 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29843:29844 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29852:29852 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29836:29839 PLF.Imp <> ANum constr
R29845:29848 PLF.Imp <> ANum constr
R29857:29860 PLF.Imp <> ANum constr
R29865:29867 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R29878:29878 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29882:29883 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29887:29887 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29892:29894 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29904:29906 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29898:29900 PLF.Imp <> :com::x_'-'_x not
R29920:29922 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29930:29932 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29925:29927 PLF.Imp <> :com::x_'*'_x not
R29948:29948 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29971:29983 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30006:30006 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29949:29967 PLF.Equiv <> fold_constants_aexp:98 def
R29984:30002 PLF.Equiv <> fold_constants_aexp:98 def
R30023:30023 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30031:30032 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30040:30040 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30024:30027 PLF.Imp <> ANum constr
R30033:30036 PLF.Imp <> ANum constr
R30045:30048 PLF.Imp <> ANum constr
R30053:30055 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R30066:30066 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30070:30071 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30075:30075 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30080:30082 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30092:30094 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30086:30088 PLF.Imp <> :com::x_'*'_x not
def 30120:30132 <> fold_aexp_ex1
R30177:30181 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30140:30158 PLF.Equiv <> fold_constants_aexp def
R30160:30162 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30174:30176 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30170:30172 PLF.Imp <> :com::x_'*'_x not
R30163:30163 PLF.Imp <> :com:com_scope:'('_x_')' not
R30169:30169 PLF.Imp <> :com:com_scope:'('_x_')' not
R30165:30167 PLF.Imp <> :com::x_'+'_x not
R30173:30173 PLF.Imp <> X def
R30182:30184 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30190:30192 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30186:30188 PLF.Imp <> :com::x_'*'_x not
R30189:30189 PLF.Imp <> X def
def 30656:30668 <> fold_aexp_ex2
R30717:30719 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30674:30692 PLF.Equiv <> fold_constants_aexp def
R30694:30696 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30714:30716 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30698:30700 PLF.Imp <> :com::x_'-'_x not
R30697:30697 PLF.Imp <> X def
R30701:30701 PLF.Imp <> :com:com_scope:'('_x_')' not
R30713:30713 PLF.Imp <> :com:com_scope:'('_x_')' not
R30709:30711 PLF.Imp <> :com::x_'+'_x not
R30702:30702 PLF.Imp <> :com:com_scope:'('_x_')' not
R30708:30708 PLF.Imp <> :com:com_scope:'('_x_')' not
R30704:30706 PLF.Imp <> :com::x_'*'_x not
R30712:30712 PLF.Imp <> Y def
R30720:30722 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30734:30736 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30724:30726 PLF.Imp <> :com::x_'-'_x not
R30723:30723 PLF.Imp <> X def
R30727:30727 PLF.Imp <> :com:com_scope:'('_x_')' not
R30733:30733 PLF.Imp <> :com:com_scope:'('_x_')' not
R30729:30731 PLF.Imp <> :com::x_'+'_x not
R30732:30732 PLF.Imp <> Y def
def 30973:30991 <> fold_constants_bexp
R30998:31001 PLF.Imp <> bexp ind
binder 30994:30994 <> b:100
R31006:31009 PLF.Imp <> bexp ind
R31022:31022 PLF.Equiv <> b:100 var
R31033:31034 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31039:31040 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31035:31038 PLF.Imp <> :com::'true' not
R31052:31053 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31058:31059 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31054:31057 PLF.Imp <> :com::'true' not
R31065:31066 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31072:31073 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31067:31071 PLF.Imp <> :com::'false' not
R31084:31085 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31091:31092 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31086:31090 PLF.Imp <> :com::'false' not
R31098:31100 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31108:31110 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31103:31105 PLF.Imp <> :com::x_'='_x not
R31128:31128 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31151:31165 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31188:31188 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31129:31147 PLF.Equiv <> fold_constants_aexp def
R31166:31184 PLF.Equiv <> fold_constants_aexp def
R31203:31203 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31211:31212 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31220:31220 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31204:31207 PLF.Imp <> ANum constr
R31213:31216 PLF.Imp <> ANum constr
R31240:31243 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R31266:31267 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31273:31274 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31268:31272 PLF.Imp <> :com::'false' not
R31252:31253 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31258:31259 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31254:31257 PLF.Imp <> :com::'true' not
R31284:31284 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31288:31289 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31293:31293 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31308:31310 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31320:31322 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31314:31316 PLF.Imp <> :com::x_'='_x not
R31338:31340 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31349:31351 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31343:31346 PLF.Imp <> :com::x_'<>'_x not
R31369:31369 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31392:31406 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31429:31429 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31370:31388 PLF.Equiv <> fold_constants_aexp def
R31407:31425 PLF.Equiv <> fold_constants_aexp def
R31444:31444 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31452:31453 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31461:31461 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31445:31448 PLF.Imp <> ANum constr
R31454:31457 PLF.Imp <> ANum constr
R31479:31482 Coq.Init.Datatypes <> negb def
R31487:31490 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R31514:31515 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31521:31522 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31516:31520 PLF.Imp <> :com::'false' not
R31500:31501 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31506:31507 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31502:31505 PLF.Imp <> :com::'true' not
R31532:31532 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31536:31537 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31541:31541 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31556:31558 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31569:31571 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31562:31565 PLF.Imp <> :com::x_'<>'_x not
R31587:31589 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31598:31600 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31592:31595 PLF.Imp <> :com::x_'<='_x not
R31618:31618 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31641:31655 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31678:31678 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31619:31637 PLF.Equiv <> fold_constants_aexp def
R31656:31674 PLF.Equiv <> fold_constants_aexp def
R31693:31693 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31701:31702 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31710:31710 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31694:31697 PLF.Imp <> ANum constr
R31703:31706 PLF.Imp <> ANum constr
R31730:31734 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R31757:31758 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31764:31765 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31759:31763 PLF.Imp <> :com::'false' not
R31743:31744 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31749:31750 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31745:31748 PLF.Imp <> :com::'true' not
R31775:31775 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31779:31780 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31784:31784 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31799:31801 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31812:31814 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31805:31808 PLF.Imp <> :com::x_'<='_x not
R31830:31832 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31840:31842 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31835:31837 PLF.Imp <> :com::x_'>'_x not
R31860:31860 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31883:31897 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31920:31920 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31861:31879 PLF.Equiv <> fold_constants_aexp def
R31898:31916 PLF.Equiv <> fold_constants_aexp def
R31935:31935 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31943:31944 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31952:31952 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31936:31939 PLF.Imp <> ANum constr
R31945:31948 PLF.Imp <> ANum constr
R31972:31976 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R32000:32001 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32006:32007 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32002:32005 PLF.Imp <> :com::'true' not
R31985:31986 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31992:31993 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31987:31991 PLF.Imp <> :com::'false' not
R32017:32017 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32021:32022 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32026:32026 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32041:32043 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32053:32055 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32047:32049 PLF.Imp <> :com::x_'>'_x not
R32071:32073 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32078:32080 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32074:32075 PLF.Imp <> :com::'~'_x not
R32099:32117 PLF.Equiv <> fold_constants_bexp:101 def
R32136:32137 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32142:32143 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32138:32141 PLF.Imp <> :com::'true' not
R32148:32149 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32155:32156 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32150:32154 PLF.Imp <> :com::'false' not
R32166:32167 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32173:32174 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32168:32172 PLF.Imp <> :com::'false' not
R32179:32180 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32185:32186 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32181:32184 PLF.Imp <> :com::'true' not
R32203:32205 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32211:32213 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32206:32207 PLF.Imp <> :com::'~'_x not
R32229:32231 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32240:32242 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32234:32237 PLF.Imp <> :com::x_'&&'_x not
R32260:32260 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32283:32297 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32320:32320 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32261:32279 PLF.Equiv <> fold_constants_bexp:101 def
R32298:32316 PLF.Equiv <> fold_constants_bexp:101 def
R32335:32335 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32344:32345 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32354:32354 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32336:32337 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32342:32343 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32338:32341 PLF.Imp <> :com::'true' not
R32346:32347 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32352:32353 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32348:32351 PLF.Imp <> :com::'true' not
R32359:32360 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32365:32366 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32361:32364 PLF.Imp <> :com::'true' not
R32376:32376 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32385:32386 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32396:32396 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32377:32378 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32383:32384 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32379:32382 PLF.Imp <> :com::'true' not
R32387:32388 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32394:32395 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32389:32393 PLF.Imp <> :com::'false' not
R32401:32402 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32408:32409 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32403:32407 PLF.Imp <> :com::'false' not
R32419:32419 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32429:32430 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32439:32439 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32420:32421 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32427:32428 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32422:32426 PLF.Imp <> :com::'false' not
R32431:32432 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32437:32438 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32433:32436 PLF.Imp <> :com::'true' not
R32444:32445 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32451:32452 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32446:32450 PLF.Imp <> :com::'false' not
R32462:32462 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32472:32473 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32483:32483 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32463:32464 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32470:32471 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32465:32469 PLF.Imp <> :com::'false' not
R32474:32475 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32481:32482 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32476:32480 PLF.Imp <> :com::'false' not
R32488:32489 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32495:32496 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32490:32494 PLF.Imp <> :com::'false' not
R32506:32506 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32510:32511 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32515:32515 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32520:32522 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32533:32535 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32526:32529 PLF.Imp <> :com::x_'&&'_x not
def 32563:32575 <> fold_bexp_ex1
R32631:32635 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32581:32599 PLF.Equiv <> fold_constants_bexp def
R32601:32603 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32628:32630 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32608:32611 PLF.Imp <> :com::x_'&&'_x not
R32604:32607 PLF.Imp <> :com::'true' not
R32612:32612 PLF.Imp <> :com::'~'_x not
R32613:32613 PLF.Imp <> :com:com_scope:'('_x_')' not
R32627:32627 PLF.Imp <> :com:com_scope:'('_x_')' not
R32619:32622 PLF.Imp <> :com::x_'&&'_x not
R32614:32618 PLF.Imp <> :com::'false' not
R32623:32626 PLF.Imp <> :com::'true' not
R32636:32638 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32643:32645 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32639:32642 PLF.Imp <> :com::'true' not
def 32682:32694 <> fold_bexp_ex2
R32756:32760 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32700:32718 PLF.Equiv <> fold_constants_bexp def
R32720:32722 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32753:32755 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32730:32733 PLF.Imp <> :com::x_'&&'_x not
R32723:32723 PLF.Imp <> :com:com_scope:'('_x_')' not
R32729:32729 PLF.Imp <> :com:com_scope:'('_x_')' not
R32725:32727 PLF.Imp <> :com::x_'='_x not
R32724:32724 PLF.Imp <> X def
R32728:32728 PLF.Imp <> Y def
R32734:32734 PLF.Imp <> :com:com_scope:'('_x_')' not
R32752:32752 PLF.Imp <> :com:com_scope:'('_x_')' not
R32736:32738 PLF.Imp <> :com::x_'='_x not
R32739:32739 PLF.Imp <> :com:com_scope:'('_x_')' not
R32751:32751 PLF.Imp <> :com:com_scope:'('_x_')' not
R32741:32743 PLF.Imp <> :com::x_'-'_x not
R32744:32744 PLF.Imp <> :com:com_scope:'('_x_')' not
R32750:32750 PLF.Imp <> :com:com_scope:'('_x_')' not
R32746:32748 PLF.Imp <> :com::x_'+'_x not
R32761:32763 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32779:32781 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32771:32774 PLF.Imp <> :com::x_'&&'_x not
R32764:32764 PLF.Imp <> :com:com_scope:'('_x_')' not
R32770:32770 PLF.Imp <> :com:com_scope:'('_x_')' not
R32766:32768 PLF.Imp <> :com::x_'='_x not
R32765:32765 PLF.Imp <> X def
R32769:32769 PLF.Imp <> Y def
R32775:32778 PLF.Imp <> :com::'true' not
def 32935:32952 <> fold_constants_com
R32959:32961 PLF.Imp <> com ind
binder 32955:32955 <> c:103
R32966:32968 PLF.Imp <> com ind
R32981:32981 PLF.Equiv <> c:103 var
R32992:32994 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32999:33001 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32995:32998 PLF.Imp <> :com:com_scope:'skip' not
R33012:33014 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33019:33021 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33015:33018 PLF.Imp <> :com:com_scope:'skip' not
R33027:33029 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33036:33038 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33031:33034 PLF.Imp <> :com:com_scope:x_':='_x not
R33049:33051 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33080:33082 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33053:33056 PLF.Imp <> :com:com_scope:x_':='_x not
R33057:33057 PLF.Imp <> :com:com_scope:'('_x_')' not
R33079:33079 PLF.Imp <> :com:com_scope:'('_x_')' not
R33077:33077 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R33058:33076 PLF.Equiv <> fold_constants_aexp def
R33088:33090 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33098:33100 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33093:33095 PLF.Imp <> :com:com_scope:x_';'_x not
R33112:33114 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33160:33162 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33136:33138 PLF.Imp <> :com:com_scope:x_';'_x not
R33133:33133 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R33115:33132 PLF.Equiv <> fold_constants_com:104 def
R33157:33157 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R33139:33156 PLF.Equiv <> fold_constants_com:104 def
R33168:33170 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33195:33197 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33171:33173 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R33175:33180 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R33183:33188 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R33191:33194 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R33214:33232 PLF.Equiv <> fold_constants_bexp def
R33249:33250 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33255:33256 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33251:33254 PLF.Imp <> :com::'true' not
R33262:33279 PLF.Equiv <> fold_constants_com:104 def
R33292:33293 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33299:33300 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33294:33298 PLF.Imp <> :com::'false' not
R33305:33322 PLF.Equiv <> fold_constants_com:104 def
R33341:33343 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33430:33431 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33344:33346 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R33349:33354 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R33376:33404 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R33426:33429 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R33373:33373 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R33355:33372 PLF.Equiv <> fold_constants_com:104 def
R33423:33423 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R33405:33422 PLF.Equiv <> fold_constants_com:104 def
R33447:33449 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33467:33469 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33450:33455 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R33457:33460 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R33463:33466 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R33486:33504 PLF.Equiv <> fold_constants_bexp def
R33521:33522 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33527:33528 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33523:33526 PLF.Imp <> :com::'true' not
R33533:33535 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33558:33560 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33536:33541 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R33546:33549 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R33554:33557 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R33542:33545 PLF.Imp <> :com::'true' not
R33550:33553 PLF.Imp <> :com:com_scope:'skip' not
R33570:33571 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33577:33578 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33572:33576 PLF.Imp <> :com::'false' not
R33583:33585 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33590:33592 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33586:33589 PLF.Imp <> :com:com_scope:'skip' not
R33608:33610 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33650:33652 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33611:33616 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R33619:33622 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R33646:33649 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R33623:33623 PLF.Imp <> :com:com_scope:'('_x_')' not
R33645:33645 PLF.Imp <> :com:com_scope:'('_x_')' not
R33642:33642 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R33624:33641 PLF.Equiv <> fold_constants_com:104 def
def 33680:33691 <> fold_com_ex1
R33962:34000 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33697:33714 PLF.Equiv <> fold_constants_com def
R33748:33750 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33959:33961 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33761:33769 PLF.Imp <> :com:com_scope:x_';'_x not
R33752:33755 PLF.Imp <> :com:com_scope:x_':='_x not
R33751:33751 PLF.Imp <> X def
R33757:33759 PLF.Imp <> :com::x_'+'_x not
R33780:33788 PLF.Imp <> :com:com_scope:x_';'_x not
R33771:33774 PLF.Imp <> :com:com_scope:x_':='_x not
R33770:33770 PLF.Imp <> Y def
R33776:33778 PLF.Imp <> :com::x_'-'_x not
R33775:33775 PLF.Imp <> X def
R33842:33850 PLF.Imp <> :com:com_scope:x_';'_x not
R33789:33791 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R33809:33814 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R33819:33831 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R33838:33841 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R33799:33801 PLF.Imp <> :com::x_'='_x not
R33792:33792 PLF.Imp <> :com:com_scope:'('_x_')' not
R33798:33798 PLF.Imp <> :com:com_scope:'('_x_')' not
R33794:33796 PLF.Imp <> :com::x_'-'_x not
R33793:33793 PLF.Imp <> X def
R33797:33797 PLF.Imp <> Y def
R33802:33802 PLF.Imp <> :com:com_scope:'('_x_')' not
R33808:33808 PLF.Imp <> :com:com_scope:'('_x_')' not
R33804:33806 PLF.Imp <> :com::x_'+'_x not
R33815:33818 PLF.Imp <> :com:com_scope:'skip' not
R33833:33836 PLF.Imp <> :com:com_scope:x_':='_x not
R33832:33832 PLF.Imp <> Y def
R33905:33913 PLF.Imp <> :com:com_scope:x_';'_x not
R33851:33853 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R33872:33877 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R33884:33896 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R33901:33904 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R33855:33858 PLF.Imp <> :com::x_'<='_x not
R33859:33859 PLF.Imp <> :com:com_scope:'('_x_')' not
R33871:33871 PLF.Imp <> :com:com_scope:'('_x_')' not
R33861:33863 PLF.Imp <> :com::x_'-'_x not
R33864:33864 PLF.Imp <> :com:com_scope:'('_x_')' not
R33870:33870 PLF.Imp <> :com:com_scope:'('_x_')' not
R33866:33868 PLF.Imp <> :com::x_'+'_x not
R33879:33882 PLF.Imp <> :com:com_scope:x_':='_x not
R33878:33878 PLF.Imp <> Y def
R33897:33900 PLF.Imp <> :com:com_scope:'skip' not
R33914:33919 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R33925:33937 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R33948:33958 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R33921:33923 PLF.Imp <> :com::x_'='_x not
R33920:33920 PLF.Imp <> Y def
R33939:33942 PLF.Imp <> :com:com_scope:x_':='_x not
R33938:33938 PLF.Imp <> X def
R33944:33946 PLF.Imp <> :com::x_'+'_x not
R33943:33943 PLF.Imp <> X def
R34001:34003 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R34154:34156 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R34010:34018 PLF.Imp <> :com:com_scope:x_';'_x not
R34005:34008 PLF.Imp <> :com:com_scope:x_':='_x not
R34004:34004 PLF.Imp <> X def
R34029:34037 PLF.Imp <> :com:com_scope:x_';'_x not
R34020:34023 PLF.Imp <> :com:com_scope:x_':='_x not
R34019:34019 PLF.Imp <> Y def
R34025:34027 PLF.Imp <> :com::x_'-'_x not
R34024:34024 PLF.Imp <> X def
R34085:34093 PLF.Imp <> :com:com_scope:x_';'_x not
R34038:34040 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R34052:34057 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R34062:34074 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R34081:34084 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R34048:34050 PLF.Imp <> :com::x_'='_x not
R34041:34041 PLF.Imp <> :com:com_scope:'('_x_')' not
R34047:34047 PLF.Imp <> :com:com_scope:'('_x_')' not
R34043:34045 PLF.Imp <> :com::x_'-'_x not
R34042:34042 PLF.Imp <> X def
R34046:34046 PLF.Imp <> Y def
R34058:34061 PLF.Imp <> :com:com_scope:'skip' not
R34076:34079 PLF.Imp <> :com:com_scope:x_':='_x not
R34075:34075 PLF.Imp <> Y def
R34100:34108 PLF.Imp <> :com:com_scope:x_';'_x not
R34095:34098 PLF.Imp <> :com:com_scope:x_':='_x not
R34094:34094 PLF.Imp <> Y def
R34109:34114 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R34120:34132 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R34143:34153 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R34116:34118 PLF.Imp <> :com::x_'='_x not
R34115:34115 PLF.Imp <> Y def
R34134:34137 PLF.Imp <> :com:com_scope:x_':='_x not
R34133:34133 PLF.Imp <> X def
R34139:34141 PLF.Imp <> :com::x_'+'_x not
R34138:34138 PLF.Imp <> X def
prf 34420:34444 <> fold_constants_aexp_sound
R34450:34461 PLF.Equiv <> atrans_sound def
R34463:34481 PLF.Equiv <> fold_constants_aexp def
R34500:34511 PLF.Equiv <> atrans_sound def
R34531:34536 PLF.Equiv <> aequiv def
R34947:34965 PLF.Equiv <> fold_constants_aexp def
R34991:35009 PLF.Equiv <> fold_constants_aexp def
R34947:34965 PLF.Equiv <> fold_constants_aexp def
R34991:35009 PLF.Equiv <> fold_constants_aexp def
R34991:35009 PLF.Equiv <> fold_constants_aexp def
R34991:35009 PLF.Equiv <> fold_constants_aexp def
R34991:35009 PLF.Equiv <> fold_constants_aexp def
R34991:35009 PLF.Equiv <> fold_constants_aexp def
R34947:34965 PLF.Equiv <> fold_constants_aexp def
R34991:35009 PLF.Equiv <> fold_constants_aexp def
R34991:35009 PLF.Equiv <> fold_constants_aexp def
R34991:35009 PLF.Equiv <> fold_constants_aexp def
R34991:35009 PLF.Equiv <> fold_constants_aexp def
R34991:35009 PLF.Equiv <> fold_constants_aexp def
R34947:34965 PLF.Equiv <> fold_constants_aexp def
R34991:35009 PLF.Equiv <> fold_constants_aexp def
R34991:35009 PLF.Equiv <> fold_constants_aexp def
R34991:35009 PLF.Equiv <> fold_constants_aexp def
R34991:35009 PLF.Equiv <> fold_constants_aexp def
R34991:35009 PLF.Equiv <> fold_constants_aexp def
prf 37938:37962 <> fold_constants_bexp_sound
R37967:37978 PLF.Equiv <> btrans_sound def
R37980:37998 PLF.Equiv <> fold_constants_bexp def
R38017:38028 PLF.Equiv <> btrans_sound def
R38048:38053 PLF.Equiv <> bequiv def
R38181:38199 PLF.Equiv <> fold_constants_aexp def
R38181:38199 PLF.Equiv <> fold_constants_aexp def
R38238:38256 PLF.Equiv <> fold_constants_aexp def
R38238:38256 PLF.Equiv <> fold_constants_aexp def
R38294:38298 PLF.Imp <> aeval def
R38313:38317 PLF.Imp <> aeval def
R38360:38384 PLF.Equiv <> fold_constants_aexp_sound thm
R38294:38298 PLF.Imp <> aeval def
R38313:38317 PLF.Imp <> aeval def
R38360:38384 PLF.Equiv <> fold_constants_aexp_sound thm
R38360:38384 PLF.Equiv <> fold_constants_aexp_sound thm
R38414:38418 PLF.Imp <> aeval def
R38433:38437 PLF.Imp <> aeval def
R38480:38504 PLF.Equiv <> fold_constants_aexp_sound thm
R38414:38418 PLF.Imp <> aeval def
R38433:38437 PLF.Imp <> aeval def
R38480:38504 PLF.Equiv <> fold_constants_aexp_sound thm
R38480:38504 PLF.Equiv <> fold_constants_aexp_sound thm
R38691:38694 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R38691:38694 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R38753:38771 PLF.Equiv <> fold_constants_aexp def
R38753:38771 PLF.Equiv <> fold_constants_aexp def
R38810:38828 PLF.Equiv <> fold_constants_aexp def
R38810:38828 PLF.Equiv <> fold_constants_aexp def
R38866:38870 PLF.Imp <> aeval def
R38885:38889 PLF.Imp <> aeval def
R38932:38956 PLF.Equiv <> fold_constants_aexp_sound thm
R38866:38870 PLF.Imp <> aeval def
R38885:38889 PLF.Imp <> aeval def
R38932:38956 PLF.Equiv <> fold_constants_aexp_sound thm
R38932:38956 PLF.Equiv <> fold_constants_aexp_sound thm
R38986:38990 PLF.Imp <> aeval def
R39005:39009 PLF.Imp <> aeval def
R39052:39076 PLF.Equiv <> fold_constants_aexp_sound thm
R38986:38990 PLF.Imp <> aeval def
R39005:39009 PLF.Imp <> aeval def
R39052:39076 PLF.Equiv <> fold_constants_aexp_sound thm
R39052:39076 PLF.Equiv <> fold_constants_aexp_sound thm
R39263:39266 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R39263:39266 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R39313:39331 PLF.Equiv <> fold_constants_aexp def
R39313:39331 PLF.Equiv <> fold_constants_aexp def
R39370:39388 PLF.Equiv <> fold_constants_aexp def
R39370:39388 PLF.Equiv <> fold_constants_aexp def
R39437:39441 PLF.Imp <> aeval def
R39456:39460 PLF.Imp <> aeval def
R39503:39527 PLF.Equiv <> fold_constants_aexp_sound thm
R39437:39441 PLF.Imp <> aeval def
R39456:39460 PLF.Imp <> aeval def
R39503:39527 PLF.Equiv <> fold_constants_aexp_sound thm
R39503:39527 PLF.Equiv <> fold_constants_aexp_sound thm
R39557:39561 PLF.Imp <> aeval def
R39576:39580 PLF.Imp <> aeval def
R39623:39647 PLF.Equiv <> fold_constants_aexp_sound thm
R39557:39561 PLF.Imp <> aeval def
R39576:39580 PLF.Imp <> aeval def
R39623:39647 PLF.Equiv <> fold_constants_aexp_sound thm
R39623:39647 PLF.Equiv <> fold_constants_aexp_sound thm
R39816:39820 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R39816:39820 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R39867:39885 PLF.Equiv <> fold_constants_aexp def
R39867:39885 PLF.Equiv <> fold_constants_aexp def
R39924:39942 PLF.Equiv <> fold_constants_aexp def
R39924:39942 PLF.Equiv <> fold_constants_aexp def
R39991:39995 PLF.Imp <> aeval def
R40010:40014 PLF.Imp <> aeval def
R40056:40080 PLF.Equiv <> fold_constants_aexp_sound thm
R39991:39995 PLF.Imp <> aeval def
R40010:40014 PLF.Imp <> aeval def
R40056:40080 PLF.Equiv <> fold_constants_aexp_sound thm
R40056:40080 PLF.Equiv <> fold_constants_aexp_sound thm
R40110:40114 PLF.Imp <> aeval def
R40129:40133 PLF.Imp <> aeval def
R40175:40199 PLF.Equiv <> fold_constants_aexp_sound thm
R40110:40114 PLF.Imp <> aeval def
R40129:40133 PLF.Imp <> aeval def
R40175:40199 PLF.Equiv <> fold_constants_aexp_sound thm
R40175:40199 PLF.Equiv <> fold_constants_aexp_sound thm
R40368:40372 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R40368:40372 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R40427:40445 PLF.Equiv <> fold_constants_bexp def
R40427:40445 PLF.Equiv <> fold_constants_bexp def
R40554:40572 PLF.Equiv <> fold_constants_bexp def
R40554:40572 PLF.Equiv <> fold_constants_bexp def
R40611:40629 PLF.Equiv <> fold_constants_bexp def
R40611:40629 PLF.Equiv <> fold_constants_bexp def
prf 40878:40901 <> fold_constants_com_sound
R40907:40918 PLF.Equiv <> ctrans_sound def
R40920:40937 PLF.Equiv <> fold_constants_com def
R40956:40967 PLF.Equiv <> ctrans_sound def
R41023:41033 PLF.Equiv <> refl_cequiv thm
R41023:41033 PLF.Equiv <> refl_cequiv thm
R41055:41070 PLF.Equiv <> CAsgn_congruence thm
R41055:41070 PLF.Equiv <> CAsgn_congruence thm
R41093:41117 PLF.Equiv <> fold_constants_aexp_sound thm
R41093:41117 PLF.Equiv <> fold_constants_aexp_sound thm
R41138:41152 PLF.Equiv <> CSeq_congruence thm
R41138:41152 PLF.Equiv <> CSeq_congruence thm
R41192:41197 PLF.Equiv <> bequiv def
R41202:41220 PLF.Equiv <> fold_constants_bexp def
R41192:41197 PLF.Equiv <> bequiv def
R41202:41220 PLF.Equiv <> fold_constants_bexp def
R41240:41264 PLF.Equiv <> fold_constants_bexp_sound thm
R41240:41264 PLF.Equiv <> fold_constants_bexp_sound thm
R41283:41301 PLF.Equiv <> fold_constants_bexp def
R41333:41346 PLF.Equiv <> CIf_congruence thm
R41283:41301 PLF.Equiv <> fold_constants_bexp def
R41333:41346 PLF.Equiv <> CIf_congruence thm
R41333:41346 PLF.Equiv <> CIf_congruence thm
R41333:41346 PLF.Equiv <> CIf_congruence thm
R41333:41346 PLF.Equiv <> CIf_congruence thm
R41333:41346 PLF.Equiv <> CIf_congruence thm
R41333:41346 PLF.Equiv <> CIf_congruence thm
R41333:41346 PLF.Equiv <> CIf_congruence thm
R41333:41346 PLF.Equiv <> CIf_congruence thm
R41558:41569 PLF.Equiv <> trans_cequiv thm
R41558:41569 PLF.Equiv <> trans_cequiv thm
R41608:41614 PLF.Equiv <> if_true thm
R41608:41614 PLF.Equiv <> if_true thm
R41668:41679 PLF.Equiv <> trans_cequiv thm
R41668:41679 PLF.Equiv <> trans_cequiv thm
R41718:41725 PLF.Equiv <> if_false thm
R41718:41725 PLF.Equiv <> if_false thm
R41768:41773 PLF.Equiv <> bequiv def
R41778:41796 PLF.Equiv <> fold_constants_bexp def
R41768:41773 PLF.Equiv <> bequiv def
R41778:41796 PLF.Equiv <> fold_constants_bexp def
R41816:41840 PLF.Equiv <> fold_constants_bexp_sound thm
R41816:41840 PLF.Equiv <> fold_constants_bexp_sound thm
R41861:41879 PLF.Equiv <> fold_constants_bexp def
R41911:41927 PLF.Equiv <> CWhile_congruence thm
R41861:41879 PLF.Equiv <> fold_constants_bexp def
R41911:41927 PLF.Equiv <> CWhile_congruence thm
R41911:41927 PLF.Equiv <> CWhile_congruence thm
R41911:41927 PLF.Equiv <> CWhile_congruence thm
R41911:41927 PLF.Equiv <> CWhile_congruence thm
R41911:41927 PLF.Equiv <> CWhile_congruence thm
R41911:41927 PLF.Equiv <> CWhile_congruence thm
R41911:41927 PLF.Equiv <> CWhile_congruence thm
R41911:41927 PLF.Equiv <> CWhile_congruence thm
R41981:41990 PLF.Equiv <> while_true thm
R41981:41990 PLF.Equiv <> while_true thm
R42044:42054 PLF.Equiv <> while_false thm
R42044:42054 PLF.Equiv <> while_false thm
def 43107:43125 <> optimize_0plus_aexp
R43132:43135 PLF.Imp <> aexp ind
binder 43128:43128 <> a:106
R43140:43143 PLF.Imp <> aexp ind
R43157:43157 PLF.Equiv <> a:106 var
R43168:43171 PLF.Imp <> ANum constr
R43184:43187 PLF.Imp <> ANum constr
R43195:43197 PLF.Imp <> AId constr
R43211:43213 PLF.Imp <> AId constr
R43221:43223 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43231:43233 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43226:43228 PLF.Imp <> :com::x_'+'_x not
R43249:43249 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43272:43284 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43307:43307 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43250:43268 PLF.Equiv <> optimize_0plus_aexp:107 def
R43285:43303 PLF.Equiv <> optimize_0plus_aexp:107 def
R43324:43324 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43331:43332 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43336:43336 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43325:43328 PLF.Imp <> ANum constr
R43351:43351 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43355:43356 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43360:43360 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43365:43367 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43377:43379 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43371:43373 PLF.Imp <> :com::x_'+'_x not
R43393:43395 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43403:43405 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43398:43400 PLF.Imp <> :com::x_'-'_x not
R43410:43412 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43460:43462 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43435:43437 PLF.Imp <> :com::x_'-'_x not
R43432:43432 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43413:43431 PLF.Equiv <> optimize_0plus_aexp:107 def
R43457:43457 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43438:43456 PLF.Equiv <> optimize_0plus_aexp:107 def
R43468:43470 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43478:43480 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43473:43475 PLF.Imp <> :com::x_'*'_x not
R43485:43487 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43535:43537 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43510:43512 PLF.Imp <> :com::x_'*'_x not
R43507:43507 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43488:43506 PLF.Equiv <> optimize_0plus_aexp:107 def
R43532:43532 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43513:43531 PLF.Equiv <> optimize_0plus_aexp:107 def
def 43556:43574 <> optimize_0plus_bexp
R43581:43584 PLF.Imp <> bexp ind
binder 43577:43577 <> b:109
R43589:43592 PLF.Imp <> bexp ind
R43605:43605 PLF.Equiv <> b:109 var
R43616:43617 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43622:43623 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43618:43621 PLF.Imp <> :com::'true' not
R43635:43636 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43641:43642 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43637:43640 PLF.Imp <> :com::'true' not
R43648:43649 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43655:43656 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43650:43654 PLF.Imp <> :com::'false' not
R43667:43668 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43674:43675 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43669:43673 PLF.Imp <> :com::'false' not
R43681:43683 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43691:43693 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43686:43688 PLF.Imp <> :com::x_'='_x not
R43700:43702 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43750:43752 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43725:43727 PLF.Imp <> :com::x_'='_x not
R43722:43722 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43703:43721 PLF.Equiv <> optimize_0plus_aexp def
R43747:43747 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43728:43746 PLF.Equiv <> optimize_0plus_aexp def
R43758:43760 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43769:43771 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43763:43766 PLF.Imp <> :com::x_'<>'_x not
R43777:43779 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43828:43830 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43802:43805 PLF.Imp <> :com::x_'<>'_x not
R43799:43799 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43780:43798 PLF.Equiv <> optimize_0plus_aexp def
R43825:43825 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43806:43824 PLF.Equiv <> optimize_0plus_aexp def
R43836:43838 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43847:43849 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43841:43844 PLF.Imp <> :com::x_'<='_x not
R43855:43857 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43906:43908 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43880:43883 PLF.Imp <> :com::x_'<='_x not
R43877:43877 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43858:43876 PLF.Equiv <> optimize_0plus_aexp def
R43903:43903 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43884:43902 PLF.Equiv <> optimize_0plus_aexp def
R43914:43916 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43924:43926 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43919:43921 PLF.Imp <> :com::x_'>'_x not
R43933:43935 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43983:43985 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43958:43960 PLF.Imp <> :com::x_'>'_x not
R43955:43955 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43936:43954 PLF.Equiv <> optimize_0plus_aexp def
R43980:43980 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43961:43979 PLF.Equiv <> optimize_0plus_aexp def
R43991:43993 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43998:44000 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43994:43995 PLF.Imp <> :com::'~'_x not
R44010:44012 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44037:44039 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44013:44014 PLF.Imp <> :com::'~'_x not
R44034:44034 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44015:44033 PLF.Equiv <> optimize_0plus_bexp:110 def
R44045:44047 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44056:44058 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44050:44053 PLF.Imp <> :com::x_'&&'_x not
R44064:44066 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44115:44117 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44089:44092 PLF.Imp <> :com::x_'&&'_x not
R44086:44086 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44067:44085 PLF.Equiv <> optimize_0plus_bexp:110 def
R44112:44112 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44093:44111 PLF.Equiv <> optimize_0plus_bexp:110 def
def 44136:44153 <> optimize_0plus_com
R44160:44162 PLF.Imp <> com ind
binder 44156:44156 <> c:112
R44167:44169 PLF.Imp <> com ind
R44183:44183 PLF.Equiv <> c:112 var
R44194:44196 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44201:44203 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44197:44200 PLF.Imp <> :com:com_scope:'skip' not
R44208:44210 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44215:44217 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44211:44214 PLF.Imp <> :com:com_scope:'skip' not
R44223:44225 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44232:44234 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44227:44230 PLF.Imp <> :com:com_scope:x_':='_x not
R44239:44241 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44268:44270 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44243:44246 PLF.Imp <> :com:com_scope:x_':='_x not
R44266:44266 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44247:44265 PLF.Equiv <> optimize_0plus_aexp def
R44276:44278 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44286:44288 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44281:44283 PLF.Imp <> :com:com_scope:x_';'_x not
R44294:44296 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44342:44344 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44318:44320 PLF.Imp <> :com:com_scope:x_';'_x not
R44315:44315 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44297:44314 PLF.Equiv <> optimize_0plus_com:113 def
R44339:44339 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44321:44338 PLF.Equiv <> optimize_0plus_com:113 def
R44350:44352 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44377:44379 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44353:44355 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R44357:44362 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R44365:44370 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R44373:44376 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R44384:44386 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44469:44471 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44387:44389 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R44411:44416 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R44438:44443 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R44465:44468 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R44409:44409 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44390:44408 PLF.Equiv <> optimize_0plus_bexp def
R44435:44435 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44417:44434 PLF.Equiv <> optimize_0plus_com:113 def
R44462:44462 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44444:44461 PLF.Equiv <> optimize_0plus_com:113 def
R44477:44479 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44497:44499 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44480:44485 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R44487:44490 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R44493:44496 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R44504:44506 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44563:44565 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44507:44512 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R44534:44537 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R44559:44562 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R44532:44532 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44513:44531 PLF.Equiv <> optimize_0plus_bexp def
R44556:44556 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44538:44555 PLF.Equiv <> optimize_0plus_com:113 def
def 44583:44601 <> test_optimize_0plus
R44674:44681 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44608:44625 PLF.Equiv <> optimize_0plus_com def
R44634:44636 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44671:44673 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44637:44642 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R44649:44652 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R44667:44670 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R44644:44647 PLF.Imp <> :com::x_'<>'_x not
R44643:44643 PLF.Imp <> X def
R44654:44657 PLF.Imp <> :com:com_scope:x_':='_x not
R44653:44653 PLF.Imp <> X def
R44663:44665 PLF.Imp <> :com::x_'-'_x not
R44659:44661 PLF.Imp <> :com::x_'+'_x not
R44662:44662 PLF.Imp <> X def
R44682:44684 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44715:44717 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44685:44690 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R44697:44700 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R44711:44714 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R44692:44695 PLF.Imp <> :com::x_'<>'_x not
R44691:44691 PLF.Imp <> X def
R44702:44705 PLF.Imp <> :com:com_scope:x_':='_x not
R44701:44701 PLF.Imp <> X def
R44707:44709 PLF.Imp <> :com::x_'-'_x not
R44706:44706 PLF.Imp <> X def
prf 44958:44982 <> optimize_0plus_aexp_sound
R44987:44998 PLF.Equiv <> atrans_sound def
R45000:45018 PLF.Equiv <> optimize_0plus_aexp def
R45037:45048 PLF.Equiv <> atrans_sound def
R45068:45073 PLF.Equiv <> aequiv def
R45149:45167 PLF.Equiv <> optimize_0plus_aexp def
R45184:45202 PLF.Equiv <> optimize_0plus_aexp def
R45149:45167 PLF.Equiv <> optimize_0plus_aexp def
R45184:45202 PLF.Equiv <> optimize_0plus_aexp def
R45184:45202 PLF.Equiv <> optimize_0plus_aexp def
R45184:45202 PLF.Equiv <> optimize_0plus_aexp def
R45184:45202 PLF.Equiv <> optimize_0plus_aexp def
R45184:45202 PLF.Equiv <> optimize_0plus_aexp def
R45149:45167 PLF.Equiv <> optimize_0plus_aexp def
R45184:45202 PLF.Equiv <> optimize_0plus_aexp def
R45184:45202 PLF.Equiv <> optimize_0plus_aexp def
R45184:45202 PLF.Equiv <> optimize_0plus_aexp def
R45184:45202 PLF.Equiv <> optimize_0plus_aexp def
R45184:45202 PLF.Equiv <> optimize_0plus_aexp def
R45149:45167 PLF.Equiv <> optimize_0plus_aexp def
R45184:45202 PLF.Equiv <> optimize_0plus_aexp def
R45184:45202 PLF.Equiv <> optimize_0plus_aexp def
R45184:45202 PLF.Equiv <> optimize_0plus_aexp def
R45184:45202 PLF.Equiv <> optimize_0plus_aexp def
R45184:45202 PLF.Equiv <> optimize_0plus_aexp def
prf 45293:45317 <> optimize_0plus_bexp_sound
R45323:45334 PLF.Equiv <> btrans_sound def
R45336:45354 PLF.Equiv <> optimize_0plus_bexp def
R45373:45384 PLF.Equiv <> btrans_sound def
R45404:45409 PLF.Equiv <> bequiv def
R45487:45511 PLF.Equiv <> optimize_0plus_aexp_sound thm
R45539:45563 PLF.Equiv <> optimize_0plus_aexp_sound thm
R45487:45511 PLF.Equiv <> optimize_0plus_aexp_sound thm
R45487:45511 PLF.Equiv <> optimize_0plus_aexp_sound thm
R45539:45563 PLF.Equiv <> optimize_0plus_aexp_sound thm
R45539:45563 PLF.Equiv <> optimize_0plus_aexp_sound thm
R45487:45511 PLF.Equiv <> optimize_0plus_aexp_sound thm
R45487:45511 PLF.Equiv <> optimize_0plus_aexp_sound thm
R45539:45563 PLF.Equiv <> optimize_0plus_aexp_sound thm
R45539:45563 PLF.Equiv <> optimize_0plus_aexp_sound thm
R45487:45511 PLF.Equiv <> optimize_0plus_aexp_sound thm
R45487:45511 PLF.Equiv <> optimize_0plus_aexp_sound thm
R45539:45563 PLF.Equiv <> optimize_0plus_aexp_sound thm
R45539:45563 PLF.Equiv <> optimize_0plus_aexp_sound thm
R45487:45511 PLF.Equiv <> optimize_0plus_aexp_sound thm
R45487:45511 PLF.Equiv <> optimize_0plus_aexp_sound thm
R45539:45563 PLF.Equiv <> optimize_0plus_aexp_sound thm
R45539:45563 PLF.Equiv <> optimize_0plus_aexp_sound thm
R45487:45511 PLF.Equiv <> optimize_0plus_aexp_sound thm
R45487:45511 PLF.Equiv <> optimize_0plus_aexp_sound thm
prf 45712:45735 <> optimize_0plus_com_sound
R45741:45752 PLF.Equiv <> ctrans_sound def
R45754:45771 PLF.Equiv <> optimize_0plus_com def
R45790:45801 PLF.Equiv <> ctrans_sound def
R45857:45867 PLF.Equiv <> refl_cequiv thm
R45857:45867 PLF.Equiv <> refl_cequiv thm
R45893:45908 PLF.Equiv <> CAsgn_congruence thm
R45893:45908 PLF.Equiv <> CAsgn_congruence thm
R45921:45945 PLF.Equiv <> optimize_0plus_aexp_sound thm
R45921:45945 PLF.Equiv <> optimize_0plus_aexp_sound thm
R45966:45980 PLF.Equiv <> CSeq_congruence thm
R45966:45980 PLF.Equiv <> CSeq_congruence thm
R46005:46018 PLF.Equiv <> CIf_congruence thm
R46005:46018 PLF.Equiv <> CIf_congruence thm
R46033:46057 PLF.Equiv <> optimize_0plus_bexp_sound thm
R46033:46057 PLF.Equiv <> optimize_0plus_bexp_sound thm
R46122:46138 PLF.Equiv <> CWhile_congruence thm
R46122:46138 PLF.Equiv <> CWhile_congruence thm
R46153:46177 PLF.Equiv <> optimize_0plus_bexp_sound thm
R46153:46177 PLF.Equiv <> optimize_0plus_bexp_sound thm
def 46406:46414 <> optimizer
R46421:46423 PLF.Imp <> com ind
binder 46417:46417 <> c:115
R46429:46446 PLF.Equiv <> optimize_0plus_com def
R46449:46466 PLF.Equiv <> fold_constants_com def
R46468:46468 PLF.Equiv <> c:115 var
prf 46525:46539 <> optimizer_sound
R46545:46556 PLF.Equiv <> ctrans_sound def
R46558:46566 PLF.Equiv <> optimizer def
R46585:46596 PLF.Equiv <> ctrans_sound def
R46606:46614 PLF.Equiv <> optimizer def
R46660:46677 PLF.Equiv <> fold_constants_com def
R46635:46646 PLF.Equiv <> trans_cequiv thm
R46660:46677 PLF.Equiv <> fold_constants_com def
R46635:46646 PLF.Equiv <> trans_cequiv thm
R46698:46721 PLF.Equiv <> fold_constants_com_sound thm
R46698:46721 PLF.Equiv <> fold_constants_com_sound thm
R46740:46763 PLF.Equiv <> optimize_0plus_com_sound thm
R46740:46763 PLF.Equiv <> optimize_0plus_com_sound thm
def 47755:47764 <> subst_aexp
R47771:47776 Coq.Strings.String <> string ind
binder 47767:47767 <> x:116
R47784:47787 PLF.Imp <> aexp ind
binder 47780:47780 <> u:117
R47795:47798 PLF.Imp <> aexp ind
binder 47791:47791 <> a:118
R47803:47806 PLF.Imp <> aexp ind
R47819:47819 PLF.Equiv <> a:118 var
R47830:47833 PLF.Imp <> ANum constr
R47852:47855 PLF.Imp <> ANum constr
R47863:47865 PLF.Imp <> AId constr
R47888:47897 Coq.Strings.String <> eqb def
R47899:47899 PLF.Equiv <> x:116 var
R47916:47918 PLF.Imp <> AId constr
R47909:47909 PLF.Equiv <> u:117 var
R47927:47929 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R47937:47939 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R47932:47934 PLF.Imp <> :com::x_'+'_x not
R47951:47953 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R47995:47997 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R47973:47975 PLF.Imp <> :com::x_'+'_x not
R47954:47954 PLF.Imp <> :com:com_scope:'('_x_')' not
R47972:47972 PLF.Imp <> :com:com_scope:'('_x_')' not
R47965:47965 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R47967:47967 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R47969:47969 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R47968:47968 PLF.Equiv <> u:117 var
R47966:47966 PLF.Equiv <> x:116 var
R47955:47964 PLF.Equiv <> subst_aexp:119 def
R47976:47976 PLF.Imp <> :com:com_scope:'('_x_')' not
R47994:47994 PLF.Imp <> :com:com_scope:'('_x_')' not
R47987:47987 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R47989:47989 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R47991:47991 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R47990:47990 PLF.Equiv <> u:117 var
R47988:47988 PLF.Equiv <> x:116 var
R47977:47986 PLF.Equiv <> subst_aexp:119 def
R48003:48005 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R48013:48015 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R48008:48010 PLF.Imp <> :com::x_'-'_x not
R48026:48028 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R48070:48072 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R48048:48050 PLF.Imp <> :com::x_'-'_x not
R48029:48029 PLF.Imp <> :com:com_scope:'('_x_')' not
R48047:48047 PLF.Imp <> :com:com_scope:'('_x_')' not
R48040:48040 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R48042:48042 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R48044:48044 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R48043:48043 PLF.Equiv <> u:117 var
R48041:48041 PLF.Equiv <> x:116 var
R48030:48039 PLF.Equiv <> subst_aexp:119 def
R48051:48051 PLF.Imp <> :com:com_scope:'('_x_')' not
R48069:48069 PLF.Imp <> :com:com_scope:'('_x_')' not
R48062:48062 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R48064:48064 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R48066:48066 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R48065:48065 PLF.Equiv <> u:117 var
R48063:48063 PLF.Equiv <> x:116 var
R48052:48061 PLF.Equiv <> subst_aexp:119 def
R48078:48080 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R48088:48090 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R48083:48085 PLF.Imp <> :com::x_'*'_x not
R48102:48104 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R48146:48148 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R48124:48126 PLF.Imp <> :com::x_'*'_x not
R48105:48105 PLF.Imp <> :com:com_scope:'('_x_')' not
R48123:48123 PLF.Imp <> :com:com_scope:'('_x_')' not
R48116:48116 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R48118:48118 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R48120:48120 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R48119:48119 PLF.Equiv <> u:117 var
R48117:48117 PLF.Equiv <> x:116 var
R48106:48115 PLF.Equiv <> subst_aexp:119 def
R48127:48127 PLF.Imp <> :com:com_scope:'('_x_')' not
R48145:48145 PLF.Imp <> :com:com_scope:'('_x_')' not
R48138:48138 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R48140:48140 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R48142:48142 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R48141:48141 PLF.Equiv <> u:117 var
R48139:48139 PLF.Equiv <> x:116 var
R48128:48137 PLF.Equiv <> subst_aexp:119 def
def 48166:48178 <> subst_aexp_ex
R48218:48222 Coq.Init.Logic <> ::type_scope:x_'='_x not
R48184:48193 PLF.Equiv <> subst_aexp def
R48195:48195 PLF.Imp <> X def
R48197:48198 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R48206:48207 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R48201:48203 PLF.Imp <> :com::x_'+'_x not
R48209:48210 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R48216:48217 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R48212:48214 PLF.Imp <> :com::x_'+'_x not
R48211:48211 PLF.Imp <> Y def
R48215:48215 PLF.Imp <> X def
R48223:48225 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R48239:48240 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R48227:48229 PLF.Imp <> :com::x_'+'_x not
R48226:48226 PLF.Imp <> Y def
R48230:48230 PLF.Imp <> :com:com_scope:'('_x_')' not
R48238:48238 PLF.Imp <> :com:com_scope:'('_x_')' not
R48233:48235 PLF.Imp <> :com::x_'+'_x not
def 48442:48461 <> subst_equiv_property
binder 48480:48481 <> x1:121
binder 48483:48484 <> x2:122
binder 48486:48487 <> a1:123
binder 48489:48490 <> a2:124
R48495:48500 PLF.Equiv <> cequiv def
R48502:48504 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R48523:48525 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R48513:48514 PLF.Imp <> :com:com_scope:x_';'_x not
R48507:48510 PLF.Imp <> :com:com_scope:x_':='_x not
R48505:48506 PLF.Equiv <> x1:121 var
R48511:48512 PLF.Equiv <> a1:123 var
R48517:48520 PLF.Imp <> :com:com_scope:x_':='_x not
R48515:48516 PLF.Equiv <> x2:122 var
R48521:48522 PLF.Equiv <> a2:124 var
R48536:48538 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R48574:48576 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R48547:48548 PLF.Imp <> :com:com_scope:x_';'_x not
R48541:48544 PLF.Imp <> :com:com_scope:x_':='_x not
R48539:48540 PLF.Equiv <> x1:121 var
R48545:48546 PLF.Equiv <> a1:123 var
R48551:48554 PLF.Imp <> :com:com_scope:x_':='_x not
R48549:48550 PLF.Equiv <> x2:122 var
R48565:48565 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R48568:48568 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R48571:48571 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R48572:48573 PLF.Equiv <> a2:124 var
R48569:48570 PLF.Equiv <> a1:123 var
R48566:48567 PLF.Equiv <> x1:121 var
R48555:48564 PLF.Equiv <> subst_aexp def
prf 48810:48822 <> subst_inequiv
R48828:48829 Coq.Init.Logic <> ::type_scope:'~'_x not
R48830:48849 PLF.Equiv <> subst_equiv_property def
R48868:48887 PLF.Equiv <> subst_equiv_property def
R49069:49071 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R49104:49106 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R49082:49097 PLF.Imp <> :com:com_scope:x_';'_x not
R49073:49076 PLF.Imp <> :com:com_scope:x_':='_x not
R49072:49072 PLF.Imp <> X def
R49078:49080 PLF.Imp <> :com::x_'+'_x not
R49077:49077 PLF.Imp <> X def
R49099:49102 PLF.Imp <> :com:com_scope:x_':='_x not
R49098:49098 PLF.Imp <> Y def
R49103:49103 PLF.Imp <> X def
R49069:49071 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R49104:49106 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R49082:49097 PLF.Imp <> :com:com_scope:x_';'_x not
R49073:49076 PLF.Imp <> :com:com_scope:x_':='_x not
R49072:49072 PLF.Imp <> X def
R49078:49080 PLF.Imp <> :com::x_'+'_x not
R49077:49077 PLF.Imp <> X def
R49099:49102 PLF.Imp <> :com:com_scope:x_':='_x not
R49098:49098 PLF.Imp <> Y def
R49103:49103 PLF.Imp <> X def
R49132:49134 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R49171:49173 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R49145:49160 PLF.Imp <> :com:com_scope:x_';'_x not
R49136:49139 PLF.Imp <> :com:com_scope:x_':='_x not
R49135:49135 PLF.Imp <> X def
R49141:49143 PLF.Imp <> :com::x_'+'_x not
R49140:49140 PLF.Imp <> X def
R49162:49165 PLF.Imp <> :com:com_scope:x_':='_x not
R49161:49161 PLF.Imp <> Y def
R49167:49169 PLF.Imp <> :com::x_'+'_x not
R49166:49166 PLF.Imp <> X def
R49132:49134 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R49171:49173 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R49145:49160 PLF.Imp <> :com:com_scope:x_';'_x not
R49136:49139 PLF.Imp <> :com:com_scope:x_':='_x not
R49135:49135 PLF.Imp <> X def
R49141:49143 PLF.Imp <> :com::x_'+'_x not
R49140:49140 PLF.Imp <> X def
R49162:49165 PLF.Imp <> :com:com_scope:x_':='_x not
R49161:49161 PLF.Imp <> Y def
R49167:49169 PLF.Imp <> :com::x_'+'_x not
R49166:49166 PLF.Imp <> X def
R49198:49203 PLF.Equiv <> cequiv def
R49198:49203 PLF.Equiv <> cequiv def
R49439:49443 PLF.Maps <> :::x_'!->'_x_';'_x not
R49445:49447 PLF.Maps <> :::x_'!->'_x_';'_x not
R49449:49453 PLF.Imp <> :::x_'!->'_x not
R49448:49448 PLF.Imp <> X def
R49438:49438 PLF.Imp <> Y def
R49439:49443 PLF.Maps <> :::x_'!->'_x_';'_x not
R49445:49447 PLF.Maps <> :::x_'!->'_x_';'_x not
R49449:49453 PLF.Imp <> :::x_'!->'_x not
R49448:49448 PLF.Imp <> X def
R49438:49438 PLF.Imp <> Y def
R49478:49482 PLF.Maps <> :::x_'!->'_x_';'_x not
R49484:49486 PLF.Maps <> :::x_'!->'_x_';'_x not
R49488:49492 PLF.Imp <> :::x_'!->'_x not
R49487:49487 PLF.Imp <> X def
R49477:49477 PLF.Imp <> Y def
R49478:49482 PLF.Maps <> :::x_'!->'_x_';'_x not
R49484:49486 PLF.Maps <> :::x_'!->'_x_';'_x not
R49488:49492 PLF.Imp <> :::x_'!->'_x not
R49487:49487 PLF.Imp <> X def
R49477:49477 PLF.Imp <> Y def
R49527:49530 PLF.Imp <> :::x_'=['_x_']=>'_x not
R49533:49537 PLF.Imp <> :::x_'=['_x_']=>'_x not
R49519:49526 PLF.Imp <> empty_st def
R49567:49570 PLF.Imp <> :::x_'=['_x_']=>'_x not
R49573:49577 PLF.Imp <> :::x_'=['_x_']=>'_x not
R49559:49566 PLF.Imp <> empty_st def
R49632:49636 PLF.Imp <> :::x_'!->'_x not
R49631:49631 PLF.Imp <> X def
R49611:49615 PLF.Imp <> E_Seq constr
R49655:49660 PLF.Imp <> E_Asgn constr
R49527:49530 PLF.Imp <> :::x_'=['_x_']=>'_x not
R49533:49537 PLF.Imp <> :::x_'=['_x_']=>'_x not
R49519:49526 PLF.Imp <> empty_st def
R49567:49570 PLF.Imp <> :::x_'=['_x_']=>'_x not
R49573:49577 PLF.Imp <> :::x_'=['_x_']=>'_x not
R49559:49566 PLF.Imp <> empty_st def
R49567:49570 PLF.Imp <> :::x_'=['_x_']=>'_x not
R49573:49577 PLF.Imp <> :::x_'=['_x_']=>'_x not
R49559:49566 PLF.Imp <> empty_st def
R49632:49636 PLF.Imp <> :::x_'!->'_x not
R49631:49631 PLF.Imp <> X def
R49611:49615 PLF.Imp <> E_Seq constr
R49655:49660 PLF.Imp <> E_Asgn constr
R49655:49660 PLF.Imp <> E_Asgn constr
R49632:49636 PLF.Imp <> :::x_'!->'_x not
R49631:49631 PLF.Imp <> X def
R49611:49615 PLF.Imp <> E_Seq constr
R49655:49660 PLF.Imp <> E_Asgn constr
R49655:49660 PLF.Imp <> E_Asgn constr
R49632:49636 PLF.Imp <> :::x_'!->'_x not
R49631:49631 PLF.Imp <> X def
R49611:49615 PLF.Imp <> E_Seq constr
R49655:49660 PLF.Imp <> E_Asgn constr
R49655:49660 PLF.Imp <> E_Asgn constr
R49632:49636 PLF.Imp <> :::x_'!->'_x not
R49631:49631 PLF.Imp <> X def
R49611:49615 PLF.Imp <> E_Seq constr
R49849:49851 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49872:49890 PLF.Imp <> ceval_deterministic thm
R49895:49902 PLF.Imp <> empty_st def
R49849:49851 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49872:49890 PLF.Imp <> ceval_deterministic thm
R49895:49902 PLF.Imp <> empty_st def
R49961:49963 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49960:49960 PLF.Imp <> Y def
R49968:49968 PLF.Imp <> Y def
R49961:49963 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49960:49960 PLF.Imp <> Y def
R49968:49968 PLF.Imp <> Y def
ind 50385:50404 <> var_not_used_in_aexp
constr 50441:50446 <> VNUNum
constr 50496:50500 <> VNUId
constr 50559:50565 <> VNUPlus
constr 50702:50709 <> VNUMinus
constr 50846:50852 <> VNUMult
R50411:50416 Coq.Strings.String <> string ind
binder 50407:50407 <> x:125
R50425:50428 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50421:50424 PLF.Imp <> aexp ind
binder 50457:50457 <> n:128
R50460:50479 PLF.Equiv <> var_not_used_in_aexp:126 ind
R50484:50487 PLF.Imp <> ANum constr
R50489:50489 PLF.Equiv <> n:128 var
R50481:50481 PLF.Equiv <> x:125 var
binder 50511:50511 <> y:129
R50520:50523 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50515:50518 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R50514:50514 PLF.Equiv <> x:125 var
R50519:50519 PLF.Equiv <> y:129 var
R50524:50543 PLF.Equiv <> var_not_used_in_aexp:126 ind
R50548:50550 PLF.Imp <> AId constr
R50552:50552 PLF.Equiv <> y:129 var
R50545:50545 PLF.Equiv <> x:125 var
binder 50576:50577 <> a1:130
binder 50579:50580 <> a2:131
R50614:50623 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50589:50608 PLF.Equiv <> var_not_used_in_aexp:126 ind
R50612:50613 PLF.Equiv <> a1:130 var
R50610:50610 PLF.Equiv <> x:125 var
R50649:50658 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50624:50643 PLF.Equiv <> var_not_used_in_aexp:126 ind
R50647:50648 PLF.Equiv <> a2:131 var
R50645:50645 PLF.Equiv <> x:125 var
R50659:50678 PLF.Equiv <> var_not_used_in_aexp:126 ind
R50683:50685 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R50693:50695 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R50688:50690 PLF.Imp <> :com::x_'+'_x not
R50686:50687 PLF.Equiv <> a1:130 var
R50691:50692 PLF.Equiv <> a2:131 var
R50680:50680 PLF.Equiv <> x:125 var
binder 50720:50721 <> a1:132
binder 50723:50724 <> a2:133
R50758:50767 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50733:50752 PLF.Equiv <> var_not_used_in_aexp:126 ind
R50756:50757 PLF.Equiv <> a1:132 var
R50754:50754 PLF.Equiv <> x:125 var
R50793:50802 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50768:50787 PLF.Equiv <> var_not_used_in_aexp:126 ind
R50791:50792 PLF.Equiv <> a2:133 var
R50789:50789 PLF.Equiv <> x:125 var
R50803:50822 PLF.Equiv <> var_not_used_in_aexp:126 ind
R50827:50829 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R50837:50839 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R50832:50834 PLF.Imp <> :com::x_'-'_x not
R50830:50831 PLF.Equiv <> a1:132 var
R50835:50836 PLF.Equiv <> a2:133 var
R50824:50824 PLF.Equiv <> x:125 var
binder 50863:50864 <> a1:134
binder 50866:50867 <> a2:135
R50901:50910 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50876:50895 PLF.Equiv <> var_not_used_in_aexp:126 ind
R50899:50900 PLF.Equiv <> a1:134 var
R50897:50897 PLF.Equiv <> x:125 var
R50936:50945 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50911:50930 PLF.Equiv <> var_not_used_in_aexp:126 ind
R50934:50935 PLF.Equiv <> a2:135 var
R50932:50932 PLF.Equiv <> x:125 var
R50946:50965 PLF.Equiv <> var_not_used_in_aexp:126 ind
R50970:50972 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R50980:50982 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R50975:50977 PLF.Imp <> :com::x_'*'_x not
R50973:50974 PLF.Equiv <> a1:134 var
R50978:50979 PLF.Equiv <> a2:135 var
R50967:50967 PLF.Equiv <> x:125 var
scheme 50385:50404 <> var_not_used_in_aexp_ind
scheme 50385:50404 <> var_not_used_in_aexp_sind
prf 50993:51007 <> aeval_weakening
binder 51018:51018 <> x:136
binder 51020:51021 <> st:137
binder 51023:51023 <> a:138
binder 51025:51026 <> ni:139
R51055:51060 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51031:51050 PLF.Equiv <> var_not_used_in_aexp ind
R51052:51052 PLF.Equiv <> x:136 var
R51054:51054 PLF.Equiv <> a:138 var
R51084:51086 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51061:51065 PLF.Imp <> aeval def
R51069:51073 PLF.Maps <> :::x_'!->'_x_';'_x not
R51076:51078 PLF.Maps <> :::x_'!->'_x_';'_x not
R51079:51080 PLF.Equiv <> st:137 var
R51068:51068 PLF.Equiv <> x:136 var
R51074:51075 PLF.Equiv <> ni:139 var
R51083:51083 PLF.Equiv <> a:138 var
R51087:51091 PLF.Imp <> aeval def
R51093:51094 PLF.Equiv <> st:137 var
R51096:51096 PLF.Equiv <> a:138 var
R51244:51255 PLF.Maps <> t_update_neq thm
R51244:51255 PLF.Maps <> t_update_neq thm
prf 51390:51407 <> better_subst_equiv
binder 51420:51421 <> x1:140
binder 51423:51424 <> x2:141
binder 51426:51427 <> a1:142
binder 51429:51430 <> a2:143
R51461:51468 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51435:51454 PLF.Equiv <> var_not_used_in_aexp ind
R51456:51457 PLF.Equiv <> x1:140 var
R51459:51460 PLF.Equiv <> a1:142 var
R51469:51474 PLF.Equiv <> cequiv def
R51476:51478 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R51497:51499 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R51487:51488 PLF.Imp <> :com:com_scope:x_';'_x not
R51481:51484 PLF.Imp <> :com:com_scope:x_':='_x not
R51479:51480 PLF.Equiv <> x1:140 var
R51485:51486 PLF.Equiv <> a1:142 var
R51491:51494 PLF.Imp <> :com:com_scope:x_':='_x not
R51489:51490 PLF.Equiv <> x2:141 var
R51495:51496 PLF.Equiv <> a2:143 var
R51512:51514 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R51550:51552 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R51523:51524 PLF.Imp <> :com:com_scope:x_';'_x not
R51517:51520 PLF.Imp <> :com:com_scope:x_':='_x not
R51515:51516 PLF.Equiv <> x1:140 var
R51521:51522 PLF.Equiv <> a1:142 var
R51527:51530 PLF.Imp <> :com:com_scope:x_':='_x not
R51525:51526 PLF.Equiv <> x2:141 var
R51541:51541 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R51544:51544 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R51547:51547 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R51548:51549 PLF.Equiv <> a2:143 var
R51545:51546 PLF.Equiv <> a1:142 var
R51542:51543 PLF.Equiv <> x1:140 var
R51531:51540 PLF.Equiv <> subst_aexp def
R51581:51586 PLF.Equiv <> cequiv def
R51726:51730 PLF.Maps <> :::x_'!->'_x_';'_x not
R51742:51743 PLF.Maps <> :::x_'!->'_x_';'_x not
R51731:51735 PLF.Imp <> aeval def
R51704:51708 PLF.Imp <> E_Seq constr
R51726:51730 PLF.Maps <> :::x_'!->'_x_';'_x not
R51742:51743 PLF.Maps <> :::x_'!->'_x_';'_x not
R51731:51735 PLF.Imp <> aeval def
R51704:51708 PLF.Imp <> E_Seq constr
R51762:51767 PLF.Imp <> E_Asgn constr
R51762:51767 PLF.Imp <> E_Asgn constr
R51795:51800 PLF.Imp <> E_Asgn constr
R51795:51800 PLF.Imp <> E_Asgn constr
R51940:51949 PLF.Equiv <> subst_aexp def
R51964:51967 Coq.Strings.String <> ::string_scope:x_'=?'_x not
R51964:51967 Coq.Strings.String <> ::string_scope:x_'=?'_x not
R52006:52008 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52006:52008 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52021:52033 Coq.Strings.String <> eqb_eq thm
R52021:52033 Coq.Strings.String <> eqb_eq thm
R52096:52106 PLF.Maps <> t_update_eq thm
R52096:52106 PLF.Maps <> t_update_eq thm
R52096:52106 PLF.Maps <> t_update_eq thm
R52127:52141 PLF.Equiv <> aeval_weakening thm
R52127:52141 PLF.Equiv <> aeval_weakening thm
R52212:52216 PLF.Maps <> :::x_'!->'_x_';'_x not
R52228:52229 PLF.Maps <> :::x_'!->'_x_';'_x not
R52217:52221 PLF.Imp <> aeval def
R52190:52194 PLF.Imp <> E_Seq constr
R52212:52216 PLF.Maps <> :::x_'!->'_x_';'_x not
R52228:52229 PLF.Maps <> :::x_'!->'_x_';'_x not
R52217:52221 PLF.Imp <> aeval def
R52190:52194 PLF.Imp <> E_Seq constr
R52248:52253 PLF.Imp <> E_Asgn constr
R52248:52253 PLF.Imp <> E_Asgn constr
R52281:52286 PLF.Imp <> E_Asgn constr
R52281:52286 PLF.Imp <> E_Asgn constr
R52422:52431 PLF.Equiv <> subst_aexp def
R52446:52449 Coq.Strings.String <> ::string_scope:x_'=?'_x not
R52446:52449 Coq.Strings.String <> ::string_scope:x_'=?'_x not
R52488:52490 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52488:52490 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52503:52515 Coq.Strings.String <> eqb_eq thm
R52503:52515 Coq.Strings.String <> eqb_eq thm
R52571:52581 PLF.Maps <> t_update_eq thm
R52571:52581 PLF.Maps <> t_update_eq thm
R52571:52581 PLF.Maps <> t_update_eq thm
R52612:52626 PLF.Equiv <> aeval_weakening thm
R52612:52626 PLF.Equiv <> aeval_weakening thm
prf 52809:52824 <> inequiv_exercise
R52829:52830 Coq.Init.Logic <> ::type_scope:'~'_x not
R52831:52836 PLF.Equiv <> cequiv def
R52838:52840 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R52863:52865 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R52841:52846 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R52851:52854 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R52859:52862 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R52847:52850 PLF.Imp <> :com::'true' not
R52855:52858 PLF.Imp <> :com:com_scope:'skip' not
R52867:52869 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R52874:52876 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R52870:52873 PLF.Imp <> :com:com_scope:'skip' not
R52912:52917 PLF.Equiv <> cequiv def
R52951:52954 PLF.Imp <> :::x_'=['_x_']=>'_x not
R52959:52963 PLF.Imp <> :::x_'=['_x_']=>'_x not
R52955:52958 PLF.Imp <> :com:com_scope:'skip' not
R52943:52950 PLF.Imp <> empty_st def
R52964:52971 PLF.Imp <> empty_st def
R52951:52954 PLF.Imp <> :::x_'=['_x_']=>'_x not
R52959:52963 PLF.Imp <> :::x_'=['_x_']=>'_x not
R52955:52958 PLF.Imp <> :com:com_scope:'skip' not
R52943:52950 PLF.Imp <> empty_st def
R52964:52971 PLF.Imp <> empty_st def
R53038:53053 PLF.Imp <> loop_never_stops thm
R53055:53062 PLF.Imp <> empty_st def
R53064:53071 PLF.Imp <> empty_st def
R53038:53053 PLF.Imp <> loop_never_stops thm
R53055:53062 PLF.Imp <> empty_st def
R53064:53071 PLF.Imp <> empty_st def
mod 55172:55175 <> Himp
ind 55273:55275 Himp com
constr 55291:55295 Himp CSkip
constr 55307:55311 Himp CAsgn
constr 55341:55344 Himp CSeq
constr 55370:55372 Himp CIf
constr 55406:55411 Himp CWhile
constr 55438:55443 Himp CHavoc
R55299:55301 PLF.Equiv <> com:144 ind
R55321:55324 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55315:55320 Coq.Strings.String <> string ind
R55329:55332 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55325:55328 PLF.Imp <> aexp ind
R55333:55335 PLF.Equiv <> com:144 ind
R55351:55354 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55348:55350 PLF.Equiv <> com:144 ind
R55358:55361 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55355:55357 PLF.Equiv <> com:144 ind
R55362:55364 PLF.Equiv <> com:144 ind
R55380:55383 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55376:55379 PLF.Imp <> bexp ind
R55387:55390 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55384:55386 PLF.Equiv <> com:144 ind
R55394:55397 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55391:55393 PLF.Equiv <> com:144 ind
R55398:55400 PLF.Equiv <> com:144 ind
R55419:55422 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55415:55418 PLF.Imp <> bexp ind
R55426:55429 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55423:55425 PLF.Equiv <> com:144 ind
R55430:55432 PLF.Equiv <> com:144 ind
R55453:55456 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55447:55452 Coq.Strings.String <> string ind
R55457:55459 PLF.Equiv <> com:144 ind
scheme 55273:55275 Himp com_rect
scheme 55273:55275 Himp com_ind
scheme 55273:55275 Himp com_rec
scheme 55273:55275 Himp com_sind
R55518:55523 PLF.Equiv Himp CHavoc constr
not 55502:55502 Himp :com::'havoc'_x
R55635:55639 PLF.Equiv Himp CSkip constr
not 55613:55613 Himp :com::'skip'
R55701:55705 PLF.Equiv Himp CAsgn constr
not 55678:55678 Himp :com::x_':='_x
R55849:55852 PLF.Equiv Himp CSeq constr
not 55828:55828 Himp :com::x_';'_x
R55975:55977 PLF.Equiv Himp CIf constr
not 55929:55929 Himp :com::'if'_x_'then'_x_'else'_x_'end'
R56130:56135 PLF.Equiv Himp CWhile constr
not 56092:56092 Himp :com::'while'_x_'do'_x_'end'
ind 56678:56682 Himp ceval
constr 56723:56728 Himp E_Skip
constr 56771:56776 Himp E_Asgn
constr 56864:56868 Himp E_Seq
constr 56988:56995 Himp E_IfTrue
constr 57124:57132 Himp E_IfFalse
constr 57262:57273 Himp E_WhileFalse
constr 57360:57370 Himp E_WhileTrue
constr 57536:57542 Himp E_Havoc
R56689:56692 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56686:56688 PLF.Equiv Himp com ind
R56698:56701 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56693:56697 PLF.Imp <> state def
R56707:56710 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56702:56706 PLF.Imp <> state def
R57631:57635 PLF.Equiv <> ceval:147 ind
binder 56739:56740 <> st:148
R56751:56754 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R56759:56763 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R56755:56758 PLF.Equiv Himp :com::'skip' not
R56749:56750 PLF.Equiv <> st:148 var
R56764:56765 PLF.Equiv <> st:148 var
binder 56788:56789 <> st:149
binder 56791:56791 <> a:150
binder 56793:56793 <> n:151
binder 56795:56795 <> x:152
R56818:56827 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56814:56816 Coq.Init.Logic <> ::type_scope:x_'='_x not
R56804:56808 PLF.Imp <> aeval def
R56810:56811 PLF.Equiv <> st:149 var
R56813:56813 PLF.Equiv <> a:150 var
R56817:56817 PLF.Equiv <> n:151 var
R56830:56833 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R56840:56845 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R56858:56858 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R56835:56838 PLF.Equiv Himp :com::x_':='_x not
R56834:56834 PLF.Equiv <> x:152 var
R56839:56839 PLF.Equiv <> a:150 var
R56828:56829 PLF.Equiv <> st:149 var
R56847:56851 PLF.Maps <> :::x_'!->'_x_';'_x not
R56853:56855 PLF.Maps <> :::x_'!->'_x_';'_x not
R56856:56857 PLF.Equiv <> st:149 var
R56846:56846 PLF.Equiv <> x:152 var
R56852:56852 PLF.Equiv <> n:151 var
binder 56879:56880 <> c1:153
binder 56882:56883 <> c2:154
binder 56885:56886 <> st:155
binder 56888:56890 <> st':156
binder 56892:56895 <> st'':157
R56921:56931 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56906:56910 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R56913:56917 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R56911:56912 PLF.Equiv <> c1:153 var
R56904:56905 PLF.Equiv <> st:155 var
R56918:56920 PLF.Equiv <> st':156 var
R56950:56959 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56935:56938 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R56941:56945 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R56939:56940 PLF.Equiv <> c2:154 var
R56932:56934 PLF.Equiv <> st':156 var
R56946:56949 PLF.Equiv <> st'':157 var
R56962:56966 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R56974:56978 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R56969:56971 PLF.Equiv Himp :com::x_';'_x not
R56967:56968 PLF.Equiv <> c1:153 var
R56972:56973 PLF.Equiv <> c2:154 var
R56960:56961 PLF.Equiv <> st:155 var
R56979:56982 PLF.Equiv <> st'':157 var
binder 57006:57007 <> st:158
binder 57009:57011 <> st':159
binder 57013:57013 <> b:160
binder 57015:57016 <> c1:161
binder 57018:57019 <> c2:162
R57045:57054 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57038:57040 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57028:57032 PLF.Imp <> beval def
R57034:57035 PLF.Equiv <> st:158 var
R57037:57037 PLF.Equiv <> b:160 var
R57041:57044 PLF.Imp <> :::'true' not
R57071:57080 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57057:57060 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57063:57067 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57061:57062 PLF.Equiv <> c1:161 var
R57055:57056 PLF.Equiv <> st:158 var
R57068:57070 PLF.Equiv <> st':159 var
R57083:57086 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57111:57115 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57087:57089 PLF.Equiv Himp :com::'if'_x_'then'_x_'else'_x_'end' not
R57091:57096 PLF.Equiv Himp :com::'if'_x_'then'_x_'else'_x_'end' not
R57099:57104 PLF.Equiv Himp :com::'if'_x_'then'_x_'else'_x_'end' not
R57107:57110 PLF.Equiv Himp :com::'if'_x_'then'_x_'else'_x_'end' not
R57090:57090 PLF.Equiv <> b:160 var
R57097:57098 PLF.Equiv <> c1:161 var
R57105:57106 PLF.Equiv <> c2:162 var
R57081:57082 PLF.Equiv <> st:158 var
R57116:57118 PLF.Equiv <> st':159 var
binder 57143:57144 <> st:163
binder 57146:57148 <> st':164
binder 57150:57150 <> b:165
binder 57152:57153 <> c1:166
binder 57155:57156 <> c2:167
R57183:57192 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57175:57177 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57165:57169 PLF.Imp <> beval def
R57171:57172 PLF.Equiv <> st:163 var
R57174:57174 PLF.Equiv <> b:165 var
R57178:57182 PLF.Imp <> :::'false' not
R57209:57218 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57195:57198 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57201:57205 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57199:57200 PLF.Equiv <> c2:167 var
R57193:57194 PLF.Equiv <> st:163 var
R57206:57208 PLF.Equiv <> st':164 var
R57221:57224 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57249:57253 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57225:57227 PLF.Equiv Himp :com::'if'_x_'then'_x_'else'_x_'end' not
R57229:57234 PLF.Equiv Himp :com::'if'_x_'then'_x_'else'_x_'end' not
R57237:57242 PLF.Equiv Himp :com::'if'_x_'then'_x_'else'_x_'end' not
R57245:57248 PLF.Equiv Himp :com::'if'_x_'then'_x_'else'_x_'end' not
R57228:57228 PLF.Equiv <> b:165 var
R57235:57236 PLF.Equiv <> c1:166 var
R57243:57244 PLF.Equiv <> c2:167 var
R57219:57220 PLF.Equiv <> st:163 var
R57254:57256 PLF.Equiv <> st':164 var
binder 57284:57284 <> b:168
binder 57286:57287 <> st:169
binder 57289:57289 <> c:170
R57316:57325 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57308:57310 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57298:57302 PLF.Imp <> beval def
R57304:57305 PLF.Equiv <> st:169 var
R57307:57307 PLF.Equiv <> b:168 var
R57311:57315 PLF.Imp <> :::'false' not
R57328:57331 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57348:57352 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57332:57337 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R57339:57342 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R57344:57347 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R57338:57338 PLF.Equiv <> b:168 var
R57343:57343 PLF.Equiv <> c:170 var
R57326:57327 PLF.Equiv <> st:169 var
R57353:57354 PLF.Equiv <> st:169 var
binder 57381:57382 <> st:171
binder 57384:57386 <> st':172
binder 57388:57391 <> st'':173
binder 57393:57393 <> b:174
binder 57395:57395 <> c:175
R57421:57430 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57414:57416 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57404:57408 PLF.Imp <> beval def
R57410:57411 PLF.Equiv <> st:171 var
R57413:57413 PLF.Equiv <> b:174 var
R57417:57420 PLF.Imp <> :::'true' not
R57447:57456 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57433:57437 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57439:57443 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57438:57438 PLF.Equiv <> c:175 var
R57431:57432 PLF.Equiv <> st:171 var
R57444:57446 PLF.Equiv <> st':172 var
R57489:57498 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57460:57463 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57480:57484 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57464:57469 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R57471:57474 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R57476:57479 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R57470:57470 PLF.Equiv <> b:174 var
R57475:57475 PLF.Equiv <> c:175 var
R57457:57459 PLF.Equiv <> st':172 var
R57485:57488 PLF.Equiv <> st'':173 var
R57501:57505 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57522:57526 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57506:57511 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R57513:57516 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R57518:57521 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R57512:57512 PLF.Equiv <> b:174 var
R57517:57517 PLF.Equiv <> c:175 var
R57499:57500 PLF.Equiv <> st:171 var
R57527:57530 PLF.Equiv <> st'':173 var
binder 57553:57554 <> st:176
binder 57556:57556 <> x:177
binder 57558:57558 <> n:178
R57569:57572 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57580:57585 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57598:57598 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57573:57578 PLF.Equiv Himp :com::'havoc'_x not
R57579:57579 PLF.Equiv <> x:177 var
R57567:57568 PLF.Equiv <> st:176 var
R57587:57591 PLF.Maps <> :::x_'!->'_x_';'_x not
R57593:57595 PLF.Maps <> :::x_'!->'_x_';'_x not
R57596:57597 PLF.Equiv <> st:176 var
R57586:57586 PLF.Equiv <> x:177 var
R57592:57592 PLF.Equiv <> n:178 var
scheme 56678:56682 Himp ceval_ind
scheme 56678:56682 Himp ceval_sind
R57631:57635 PLF.Equiv Himp ceval ind
not 57609:57609 Himp :::x_'=['_x_']=>'_x
def 57749:57762 Himp havoc_example1
R57774:57777 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57785:57790 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57798:57798 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57778:57783 PLF.Equiv Himp :com::'havoc'_x not
R57784:57784 PLF.Imp <> X def
R57766:57773 PLF.Imp <> empty_st def
R57792:57796 PLF.Imp <> :::x_'!->'_x not
R57791:57791 PLF.Imp <> X def
R57814:57820 PLF.Equiv Himp E_Havoc constr
R57814:57820 PLF.Equiv Himp E_Havoc constr
def 57837:57850 Himp havoc_example2
R57864:57867 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57881:57886 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57895:57895 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57872:57873 PLF.Equiv Himp :com::x_';'_x not
R57868:57871 PLF.Equiv Himp :com::'skip' not
R57874:57879 PLF.Equiv Himp :com::'havoc'_x not
R57880:57880 PLF.Imp <> Z def
R57856:57863 PLF.Imp <> empty_st def
R57888:57892 PLF.Imp <> :::x_'!->'_x not
R57887:57887 PLF.Imp <> Z def
R57933:57940 PLF.Imp <> empty_st def
R57914:57918 PLF.Equiv Himp E_Seq constr
R57933:57940 PLF.Imp <> empty_st def
R57914:57918 PLF.Equiv Himp E_Seq constr
R57955:57960 PLF.Equiv Himp E_Skip constr
R57955:57960 PLF.Equiv Himp E_Skip constr
R57973:57979 PLF.Equiv Himp E_Havoc constr
R57973:57979 PLF.Equiv Himp E_Havoc constr
def 58040:58076 Himp manual_grade_for_Check_rule_for_HAVOC
R58080:58085 Coq.Init.Datatypes <> option ind
R58091:58091 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R58088:58090 Coq.Init.Datatypes <> nat ind
R58092:58097 Coq.Strings.String <> string ind
R58103:58106 Coq.Init.Datatypes <> None constr
def 58208:58213 Himp cequiv
R58224:58226 PLF.Equiv Himp com ind
binder 58216:58217 <> c1:179
binder 58219:58220 <> c2:180
R58255:58259 PLF.Imp <> state def
binder 58246:58247 <> st:181
binder 58249:58251 <> st':182
R58280:58284 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R58266:58269 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R58272:58276 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R58270:58271 PLF.Equiv <> c1:179 var
R58264:58265 PLF.Equiv <> st:181 var
R58277:58279 PLF.Equiv <> st':182 var
R58287:58290 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R58293:58297 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R58291:58292 PLF.Equiv <> c2:180 var
R58285:58286 PLF.Equiv <> st:181 var
R58298:58300 PLF.Equiv <> st':182 var
def 58524:58526 Himp pXY
R58533:58535 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R58553:58555 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R58543:58545 PLF.Equiv Himp :com::x_';'_x not
R58536:58541 PLF.Equiv Himp :com::'havoc'_x not
R58542:58542 PLF.Imp <> X def
R58546:58551 PLF.Equiv Himp :com::'havoc'_x not
R58552:58552 PLF.Imp <> Y def
def 58570:58572 Himp pYX
R58579:58581 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R58598:58600 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R58589:58590 PLF.Equiv Himp :com::x_';'_x not
R58582:58587 PLF.Equiv Himp :com::'havoc'_x not
R58588:58588 PLF.Imp <> Y def
R58591:58596 PLF.Equiv Himp :com::'havoc'_x not
R58597:58597 PLF.Imp <> X def
prf 58707:58720 Himp pXY_cequiv_pYX
R58740:58743 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R58726:58731 PLF.Equiv Himp cequiv def
R58733:58735 PLF.Equiv Himp pXY def
R58737:58739 PLF.Equiv Himp pYX def
R58744:58744 Coq.Init.Logic <> ::type_scope:'~'_x not
R58745:58750 PLF.Equiv Himp cequiv def
R58752:58754 PLF.Equiv Himp pXY def
R58756:58758 PLF.Equiv Himp pYX def
R58978:58983 PLF.Equiv Himp cequiv def
R58993:58995 PLF.Equiv Himp pXY def
R59005:59007 PLF.Equiv Himp pYX def
R59101:59101 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59123:59127 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59149:59149 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59103:59107 PLF.Maps <> :::x_'!->'_x_';'_x not
R59110:59111 PLF.Maps <> :::x_'!->'_x_';'_x not
R59113:59117 PLF.Maps <> :::x_'!->'_x_';'_x not
R59119:59120 PLF.Maps <> :::x_'!->'_x_';'_x not
R59112:59112 PLF.Imp <> X def
R59102:59102 PLF.Imp <> Y def
R59129:59133 PLF.Maps <> :::x_'!->'_x_';'_x not
R59135:59136 PLF.Maps <> :::x_'!->'_x_';'_x not
R59138:59142 PLF.Maps <> :::x_'!->'_x_';'_x not
R59145:59146 PLF.Maps <> :::x_'!->'_x_';'_x not
R59137:59137 PLF.Imp <> Y def
R59128:59128 PLF.Imp <> X def
R59101:59101 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59123:59127 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59149:59149 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59103:59107 PLF.Maps <> :::x_'!->'_x_';'_x not
R59110:59111 PLF.Maps <> :::x_'!->'_x_';'_x not
R59113:59117 PLF.Maps <> :::x_'!->'_x_';'_x not
R59119:59120 PLF.Maps <> :::x_'!->'_x_';'_x not
R59112:59112 PLF.Imp <> X def
R59102:59102 PLF.Imp <> Y def
R59129:59133 PLF.Maps <> :::x_'!->'_x_';'_x not
R59135:59136 PLF.Maps <> :::x_'!->'_x_';'_x not
R59138:59142 PLF.Maps <> :::x_'!->'_x_';'_x not
R59145:59146 PLF.Maps <> :::x_'!->'_x_';'_x not
R59137:59137 PLF.Imp <> Y def
R59128:59128 PLF.Imp <> X def
R59165:59180 PLF.Maps <> t_update_permute thm
R59165:59180 PLF.Maps <> t_update_permute thm
R59248:59252 PLF.Maps <> :::x_'!->'_x_';'_x not
R59255:59256 PLF.Maps <> :::x_'!->'_x_';'_x not
R59247:59247 PLF.Imp <> Y def
R59235:59239 PLF.Equiv Himp E_Seq constr
R59248:59252 PLF.Maps <> :::x_'!->'_x_';'_x not
R59255:59256 PLF.Maps <> :::x_'!->'_x_';'_x not
R59247:59247 PLF.Imp <> Y def
R59235:59239 PLF.Equiv Himp E_Seq constr
R59274:59280 PLF.Equiv Himp E_Havoc constr
R59274:59280 PLF.Equiv Himp E_Havoc constr
R59295:59301 PLF.Equiv Himp E_Havoc constr
R59295:59301 PLF.Equiv Himp E_Havoc constr
R59373:59373 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59395:59399 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59421:59421 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59375:59379 PLF.Maps <> :::x_'!->'_x_';'_x not
R59382:59383 PLF.Maps <> :::x_'!->'_x_';'_x not
R59385:59389 PLF.Maps <> :::x_'!->'_x_';'_x not
R59391:59392 PLF.Maps <> :::x_'!->'_x_';'_x not
R59384:59384 PLF.Imp <> Y def
R59374:59374 PLF.Imp <> X def
R59401:59405 PLF.Maps <> :::x_'!->'_x_';'_x not
R59407:59408 PLF.Maps <> :::x_'!->'_x_';'_x not
R59410:59414 PLF.Maps <> :::x_'!->'_x_';'_x not
R59417:59418 PLF.Maps <> :::x_'!->'_x_';'_x not
R59409:59409 PLF.Imp <> X def
R59400:59400 PLF.Imp <> Y def
R59373:59373 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59395:59399 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59421:59421 Coq.Init.Logic <> ::type_scope:x_'='_x not
R59375:59379 PLF.Maps <> :::x_'!->'_x_';'_x not
R59382:59383 PLF.Maps <> :::x_'!->'_x_';'_x not
R59385:59389 PLF.Maps <> :::x_'!->'_x_';'_x not
R59391:59392 PLF.Maps <> :::x_'!->'_x_';'_x not
R59384:59384 PLF.Imp <> Y def
R59374:59374 PLF.Imp <> X def
R59401:59405 PLF.Maps <> :::x_'!->'_x_';'_x not
R59407:59408 PLF.Maps <> :::x_'!->'_x_';'_x not
R59410:59414 PLF.Maps <> :::x_'!->'_x_';'_x not
R59417:59418 PLF.Maps <> :::x_'!->'_x_';'_x not
R59409:59409 PLF.Imp <> X def
R59400:59400 PLF.Imp <> Y def
R59437:59452 PLF.Maps <> t_update_permute thm
R59437:59452 PLF.Maps <> t_update_permute thm
R59520:59524 PLF.Maps <> :::x_'!->'_x_';'_x not
R59527:59528 PLF.Maps <> :::x_'!->'_x_';'_x not
R59519:59519 PLF.Imp <> X def
R59507:59511 PLF.Equiv Himp E_Seq constr
R59520:59524 PLF.Maps <> :::x_'!->'_x_';'_x not
R59527:59528 PLF.Maps <> :::x_'!->'_x_';'_x not
R59519:59519 PLF.Imp <> X def
R59507:59511 PLF.Equiv Himp E_Seq constr
R59546:59552 PLF.Equiv Himp E_Havoc constr
R59546:59552 PLF.Equiv Himp E_Havoc constr
R59567:59573 PLF.Equiv Himp E_Havoc constr
R59567:59573 PLF.Equiv Himp E_Havoc constr
def 59715:59720 Himp ptwice
R59727:59729 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R59746:59748 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R59737:59738 PLF.Equiv Himp :com::x_';'_x not
R59730:59735 PLF.Equiv Himp :com::'havoc'_x not
R59736:59736 PLF.Imp <> X def
R59739:59744 PLF.Equiv Himp :com::'havoc'_x not
R59745:59745 PLF.Imp <> Y def
def 59763:59767 Himp pcopy
R59774:59776 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R59792:59794 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R59784:59785 PLF.Equiv Himp :com::x_';'_x not
R59777:59782 PLF.Equiv Himp :com::'havoc'_x not
R59783:59783 PLF.Imp <> X def
R59787:59790 PLF.Equiv Himp :com::x_':='_x not
R59786:59786 PLF.Imp <> Y def
R59791:59791 PLF.Imp <> X def
prf 59965:59983 Himp ptwice_cequiv_pcopy
R60008:60011 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R59989:59994 PLF.Equiv Himp cequiv def
R59996:60001 PLF.Equiv Himp ptwice def
R60003:60007 PLF.Equiv Himp pcopy def
R60012:60012 Coq.Init.Logic <> ::type_scope:'~'_x not
R60013:60018 PLF.Equiv Himp cequiv def
R60020:60025 PLF.Equiv Himp ptwice def
R60027:60031 PLF.Equiv Himp pcopy def
R60059:60064 PLF.Equiv Himp cequiv def
R60103:60106 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R60113:60118 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R60135:60135 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R60107:60112 PLF.Equiv Himp ptwice def
R60095:60102 PLF.Imp <> empty_st def
R60120:60124 PLF.Maps <> :::x_'!->'_x_';'_x not
R60126:60127 PLF.Maps <> :::x_'!->'_x_';'_x not
R60129:60133 PLF.Imp <> :::x_'!->'_x not
R60128:60128 PLF.Imp <> X def
R60119:60119 PLF.Imp <> Y def
R60103:60106 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R60113:60118 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R60135:60135 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R60107:60112 PLF.Equiv Himp ptwice def
R60095:60102 PLF.Imp <> empty_st def
R60120:60124 PLF.Maps <> :::x_'!->'_x_';'_x not
R60126:60127 PLF.Maps <> :::x_'!->'_x_';'_x not
R60129:60133 PLF.Imp <> :::x_'!->'_x not
R60128:60128 PLF.Imp <> X def
R60119:60119 PLF.Imp <> Y def
R60170:60174 PLF.Imp <> :::x_'!->'_x not
R60169:60169 PLF.Imp <> X def
R60149:60153 PLF.Equiv Himp E_Seq constr
R60186:60192 PLF.Equiv Himp E_Havoc constr
R60170:60174 PLF.Imp <> :::x_'!->'_x not
R60169:60169 PLF.Imp <> X def
R60149:60153 PLF.Equiv Himp E_Seq constr
R60186:60192 PLF.Equiv Himp E_Havoc constr
R60186:60192 PLF.Equiv Himp E_Havoc constr
R60294:60304 PLF.Maps <> t_update_eq thm
R60294:60304 PLF.Maps <> t_update_eq thm
R60294:60304 PLF.Maps <> t_update_eq thm
R60341:60341 PLF.Imp <> Y def
R60322:60328 Coq.Logic.FunctionalExtensionality <> equal_f def
R60341:60341 PLF.Imp <> Y def
R60322:60328 Coq.Logic.FunctionalExtensionality <> equal_f def
R60375:60385 PLF.Maps <> t_update_eq thm
R60375:60385 PLF.Maps <> t_update_eq thm
R60375:60385 PLF.Maps <> t_update_eq thm
R60375:60385 PLF.Maps <> t_update_eq thm
R60375:60385 PLF.Maps <> t_update_eq thm
R60375:60385 PLF.Maps <> t_update_eq thm
R60421:60421 PLF.Imp <> X def
R60402:60408 Coq.Logic.FunctionalExtensionality <> equal_f def
R60421:60421 PLF.Imp <> X def
R60402:60408 Coq.Logic.FunctionalExtensionality <> equal_f def
binder 60459:60459 <> m:183
binder 60461:60461 <> n:184
R60464:60464 Coq.Init.Logic <> ::type_scope:x_'='_x not
R60481:60485 Coq.Init.Logic <> ::type_scope:x_'='_x not
R60502:60502 Coq.Init.Logic <> ::type_scope:x_'='_x not
R60466:60470 PLF.Maps <> :::x_'!->'_x_';'_x not
R60472:60473 PLF.Maps <> :::x_'!->'_x_';'_x not
R60475:60479 PLF.Imp <> :::x_'!->'_x not
R60474:60474 PLF.Imp <> X def
R60480:60480 PLF.Equiv <> n:184 var
R60465:60465 PLF.Imp <> Y def
R60471:60471 PLF.Equiv <> m:183 var
R60487:60491 PLF.Maps <> :::x_'!->'_x_';'_x not
R60493:60494 PLF.Maps <> :::x_'!->'_x_';'_x not
R60496:60500 PLF.Imp <> :::x_'!->'_x not
R60495:60495 PLF.Imp <> Y def
R60501:60501 PLF.Equiv <> m:183 var
R60486:60486 PLF.Imp <> X def
R60492:60492 PLF.Equiv <> n:184 var
binder 60459:60459 <> m:185
binder 60461:60461 <> n:186
R60464:60464 Coq.Init.Logic <> ::type_scope:x_'='_x not
R60481:60485 Coq.Init.Logic <> ::type_scope:x_'='_x not
R60502:60502 Coq.Init.Logic <> ::type_scope:x_'='_x not
R60466:60470 PLF.Maps <> :::x_'!->'_x_';'_x not
R60472:60473 PLF.Maps <> :::x_'!->'_x_';'_x not
R60475:60479 PLF.Imp <> :::x_'!->'_x not
R60474:60474 PLF.Imp <> X def
R60480:60480 PLF.Equiv <> n:186 var
R60465:60465 PLF.Imp <> Y def
R60471:60471 PLF.Equiv <> m:185 var
R60487:60491 PLF.Maps <> :::x_'!->'_x_';'_x not
R60493:60494 PLF.Maps <> :::x_'!->'_x_';'_x not
R60496:60500 PLF.Imp <> :::x_'!->'_x not
R60495:60495 PLF.Imp <> Y def
R60501:60501 PLF.Equiv <> m:185 var
R60486:60486 PLF.Imp <> X def
R60492:60492 PLF.Equiv <> n:186 var
R60524:60539 PLF.Maps <> t_update_permute thm
R60524:60539 PLF.Maps <> t_update_permute thm
R60612:60622 PLF.Maps <> t_update_eq thm
R60612:60622 PLF.Maps <> t_update_eq thm
R60612:60622 PLF.Maps <> t_update_eq thm
R60612:60622 PLF.Maps <> t_update_eq thm
R60612:60622 PLF.Maps <> t_update_eq thm
R60612:60622 PLF.Maps <> t_update_eq thm
def 61336:61337 Himp p1
R61341:61343 PLF.Equiv Himp com ind
R61350:61352 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R61414:61416 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R61353:61358 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R61368:61378 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R61405:61413 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R61359:61360 PLF.Imp <> :com::'~'_x not
R61361:61361 PLF.Imp <> :com:com_scope:'('_x_')' not
R61367:61367 PLF.Imp <> :com:com_scope:'('_x_')' not
R61363:61365 PLF.Imp <> :com::x_'='_x not
R61362:61362 PLF.Imp <> X def
R61386:61394 PLF.Equiv Himp :com::x_';'_x not
R61379:61384 PLF.Equiv Himp :com::'havoc'_x not
R61385:61385 PLF.Imp <> Y def
R61396:61399 PLF.Equiv Himp :com::x_':='_x not
R61395:61395 PLF.Imp <> X def
R61401:61403 PLF.Imp <> :com::x_'+'_x not
R61400:61400 PLF.Imp <> X def
def 61431:61432 Himp p2
R61436:61438 PLF.Equiv Himp com ind
R61445:61447 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R61487:61489 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R61448:61453 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R61463:61473 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R61478:61486 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R61454:61455 PLF.Imp <> :com::'~'_x not
R61456:61456 PLF.Imp <> :com:com_scope:'('_x_')' not
R61462:61462 PLF.Imp <> :com:com_scope:'('_x_')' not
R61458:61460 PLF.Imp <> :com::x_'='_x not
R61457:61457 PLF.Imp <> X def
R61474:61477 PLF.Equiv Himp :com::'skip' not
prf 61751:61764 Himp p1_may_diverge
binder 61775:61776 <> st:187
binder 61778:61780 <> st':188
R61792:61797 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61787:61790 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R61783:61784 PLF.Equiv <> st:187 var
R61786:61786 PLF.Imp <> X def
R61798:61799 Coq.Init.Logic <> ::type_scope:'~'_x not
R61802:61805 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R61808:61812 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R61806:61807 PLF.Equiv Himp p1 def
R61800:61801 PLF.Equiv <> st:187 var
R61813:61815 PLF.Equiv <> st':188 var
prf 61861:61874 Himp p2_may_diverge
binder 61885:61886 <> st:189
binder 61888:61890 <> st':190
R61902:61907 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61897:61900 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R61893:61894 PLF.Equiv <> st:189 var
R61896:61896 PLF.Imp <> X def
R61908:61909 Coq.Init.Logic <> ::type_scope:'~'_x not
R61912:61915 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R61918:61922 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R61916:61917 PLF.Equiv Himp p2 def
R61910:61911 PLF.Equiv <> st:189 var
R61923:61925 PLF.Equiv <> st':190 var
prf 62121:62131 Himp p1_p2_equiv
R62135:62140 PLF.Equiv Himp cequiv def
R62142:62143 PLF.Equiv Himp p1 def
R62145:62146 PLF.Equiv Himp p2 def
def 62414:62415 Himp p3
R62419:62421 PLF.Equiv Himp com ind
R62428:62430 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R62499:62501 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R62437:62443 PLF.Equiv Himp :com::x_';'_x not
R62432:62435 PLF.Equiv Himp :com::x_':='_x not
R62431:62431 PLF.Imp <> Z def
R62444:62449 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R62456:62466 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R62490:62498 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R62451:62454 PLF.Imp <> :com::x_'<>'_x not
R62450:62450 PLF.Imp <> X def
R62474:62482 PLF.Equiv Himp :com::x_';'_x not
R62467:62472 PLF.Equiv Himp :com::'havoc'_x not
R62473:62473 PLF.Imp <> X def
R62483:62488 PLF.Equiv Himp :com::'havoc'_x not
R62489:62489 PLF.Imp <> Z def
def 62516:62517 Himp p4
R62521:62523 PLF.Equiv Himp com ind
R62530:62532 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R62552:62554 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R62539:62545 PLF.Equiv Himp :com::x_';'_x not
R62534:62537 PLF.Equiv Himp :com::x_':='_x not
R62533:62533 PLF.Imp <> X def
R62547:62550 PLF.Equiv Himp :com::x_':='_x not
R62546:62546 PLF.Imp <> Z def
prf 62566:62578 Himp p3_p4_inequiv
R62582:62583 Coq.Init.Logic <> ::type_scope:'~'_x not
R62584:62589 PLF.Equiv Himp cequiv def
R62591:62592 PLF.Equiv Himp p3 def
R62594:62595 PLF.Equiv Himp p4 def
def 63200:63201 Himp p5
R63205:63207 PLF.Equiv Himp com ind
R63214:63216 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R63256:63258 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R63217:63222 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R63229:63239 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R63247:63255 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R63224:63227 PLF.Imp <> :com::x_'<>'_x not
R63223:63223 PLF.Imp <> X def
R63240:63245 PLF.Equiv Himp :com::'havoc'_x not
R63246:63246 PLF.Imp <> X def
def 63273:63274 Himp p6
R63278:63280 PLF.Equiv Himp com ind
R63287:63289 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R63296:63298 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R63291:63294 PLF.Equiv Himp :com::x_':='_x not
R63290:63290 PLF.Imp <> X def
prf 63310:63320 Himp p5_p6_equiv
R63324:63329 PLF.Equiv Himp cequiv def
R63331:63332 PLF.Equiv Himp p5 def
R63334:63335 PLF.Equiv Himp p6 def
R63389:63392 PLF.Equiv Himp <> mod
prf 63729:63759 <> swap_noninterfering_assignments
binder 63769:63770 <> l1:191
binder 63772:63773 <> l2:192
binder 63775:63776 <> a1:193
binder 63778:63779 <> a2:194
R63792:63797 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R63786:63789 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R63784:63785 PLF.Equiv <> l1:191 var
R63790:63791 PLF.Equiv <> l2:192 var
R63824:63829 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R63798:63817 PLF.Equiv <> var_not_used_in_aexp ind
R63819:63820 PLF.Equiv <> l1:191 var
R63822:63823 PLF.Equiv <> a2:194 var
R63856:63861 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R63830:63849 PLF.Equiv <> var_not_used_in_aexp ind
R63851:63852 PLF.Equiv <> l2:192 var
R63854:63855 PLF.Equiv <> a1:193 var
R63862:63867 PLF.Equiv <> cequiv def
R63873:63875 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R63894:63896 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R63884:63885 PLF.Imp <> :com:com_scope:x_';'_x not
R63878:63881 PLF.Imp <> :com:com_scope:x_':='_x not
R63876:63877 PLF.Equiv <> l1:191 var
R63882:63883 PLF.Equiv <> a1:193 var
R63888:63891 PLF.Imp <> :com:com_scope:x_':='_x not
R63886:63887 PLF.Equiv <> l2:192 var
R63892:63893 PLF.Equiv <> a2:194 var
R63902:63904 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R63923:63925 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R63913:63914 PLF.Imp <> :com:com_scope:x_';'_x not
R63907:63910 PLF.Imp <> :com:com_scope:x_':='_x not
R63905:63906 PLF.Equiv <> l2:192 var
R63911:63912 PLF.Equiv <> a2:194 var
R63917:63920 PLF.Imp <> :com:com_scope:x_':='_x not
R63915:63916 PLF.Equiv <> l1:191 var
R63921:63922 PLF.Equiv <> a1:193 var
def 64843:64849 <> capprox
R64860:64862 PLF.Imp <> com ind
binder 64852:64853 <> c1:195
binder 64855:64856 <> c2:196
R64892:64896 PLF.Imp <> state def
binder 64883:64884 <> st:197
binder 64886:64888 <> st':198
R64918:64921 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R64904:64907 PLF.Imp <> :::x_'=['_x_']=>'_x not
R64910:64914 PLF.Imp <> :::x_'=['_x_']=>'_x not
R64908:64909 PLF.Equiv <> c1:195 var
R64902:64903 PLF.Equiv <> st:197 var
R64915:64917 PLF.Equiv <> st':198 var
R64924:64927 PLF.Imp <> :::x_'=['_x_']=>'_x not
R64930:64934 PLF.Imp <> :::x_'=['_x_']=>'_x not
R64928:64929 PLF.Equiv <> c2:196 var
R64922:64923 PLF.Equiv <> st:197 var
R64935:64937 PLF.Equiv <> st':198 var
def 65350:65351 <> c3
R65355:65357 PLF.Imp <> com ind
def 65437:65438 <> c4
R65442:65444 PLF.Imp <> com ind
prf 65522:65536 <> c3_c4_different
R65555:65558 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R65540:65541 Coq.Init.Logic <> ::type_scope:'~'_x not
R65542:65548 PLF.Equiv <> capprox def
R65550:65551 PLF.Equiv <> c3 prfax
R65553:65554 PLF.Equiv <> c4 prfax
R65559:65560 Coq.Init.Logic <> ::type_scope:'~'_x not
R65561:65567 PLF.Equiv <> capprox def
R65569:65570 PLF.Equiv <> c4 prfax
R65572:65573 PLF.Equiv <> c3 prfax
def 65693:65696 <> cmin
R65700:65702 PLF.Imp <> com ind
prf 65780:65791 <> cmin_minimal
binder 65802:65802 <> c:199
R65805:65811 PLF.Equiv <> capprox def
R65813:65816 PLF.Equiv <> cmin prfax
R65818:65818 PLF.Equiv <> c:199 var
def 65995:65999 <> zprop
R66006:66008 PLF.Imp <> com ind
binder 66002:66002 <> c:200
prf 66094:66109 <> zprop_preserving
binder 66120:66120 <> c:201
binder 66122:66123 <> c':202
R66135:66138 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R66128:66132 PLF.Equiv <> zprop prfax
R66134:66134 PLF.Equiv <> c:201 var
R66151:66154 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R66139:66145 PLF.Equiv <> capprox def
R66147:66147 PLF.Equiv <> c:201 var
R66149:66150 PLF.Equiv <> c':202 var
R66155:66159 PLF.Equiv <> zprop prfax
R66161:66162 PLF.Equiv <> c':202 var

DIGEST 0fa96baa3cfeb71c909ee13d9ff665c7
FPLF.EquivTest
R70:75 Coq.Strings.String <> <> lib
R102:106 PLF.Equiv <> <> lib
ax 120:126 <> MISSING
mod 143:147 <> Check
R213:219 PLF.EquivTest <> MISSING defax
R213:219 PLF.EquivTest <> MISSING defax
R412:415 Coq.Init.Datatypes <> Some constr
R412:415 Coq.Init.Datatypes <> Some constr
R595:598 Coq.Init.Datatypes <> None constr
R595:598 Coq.Init.Datatypes <> None constr
R680:684 PLF.EquivTest Check <> mod
R712:716 PLF.Equiv <> <> lib
R726:730 PLF.EquivTest Check <> mod
def 734:742 <> Unnamed_thm
R739:742 Coq.Init.Logic <> True ind
R884:893 PLF.Equiv <> skip_right prfax
R908:910 PLF.Imp <> com ind
binder 904:904 <> c:2
R913:918 PLF.Equiv <> cequiv def
R921:924 PLF.Imp <> CSeq constr
R926:926 PLF.EquivTest <> c:2 var
R928:932 PLF.Imp <> CSkip constr
R935:935 PLF.EquivTest <> c:2 var
R884:893 PLF.Equiv <> skip_right prfax
R908:910 PLF.Imp <> com ind
binder 904:904 <> c:3
R913:918 PLF.Equiv <> cequiv def
R921:924 PLF.Imp <> CSeq constr
R926:926 PLF.EquivTest <> c:3 var
R928:932 PLF.Imp <> CSkip constr
R935:935 PLF.EquivTest <> c:3 var
R987:996 PLF.Equiv <> skip_right prfax
def 999:1007 <> Unnamed_thm
R1004:1007 Coq.Init.Logic <> True ind
R1156:1163 PLF.Equiv <> if_false prfax
R1180:1183 PLF.Imp <> bexp ind
binder 1176:1176 <> b:4
R1195:1197 PLF.Imp <> com ind
binder 1187:1188 <> c1:5
binder 1190:1191 <> c2:6
R1205:1210 PLF.Equiv <> bequiv def
R1212:1212 PLF.EquivTest <> b:4 var
R1214:1219 PLF.Imp <> BFalse constr
R1224:1229 PLF.Equiv <> cequiv def
R1232:1234 PLF.Imp <> CIf constr
R1236:1236 PLF.EquivTest <> b:4 var
R1238:1239 PLF.EquivTest <> c1:5 var
R1241:1242 PLF.EquivTest <> c2:6 var
R1245:1246 PLF.EquivTest <> c2:6 var
R1156:1163 PLF.Equiv <> if_false prfax
R1180:1183 PLF.Imp <> bexp ind
binder 1176:1176 <> b:7
R1195:1197 PLF.Imp <> com ind
binder 1187:1188 <> c1:8
binder 1190:1191 <> c2:9
R1205:1210 PLF.Equiv <> bequiv def
R1212:1212 PLF.EquivTest <> b:7 var
R1214:1219 PLF.Imp <> BFalse constr
R1224:1229 PLF.Equiv <> cequiv def
R1232:1234 PLF.Imp <> CIf constr
R1236:1236 PLF.EquivTest <> b:7 var
R1238:1239 PLF.EquivTest <> c1:8 var
R1241:1242 PLF.EquivTest <> c2:9 var
R1245:1246 PLF.EquivTest <> c2:9 var
R1298:1305 PLF.Equiv <> if_false prfax
def 1308:1316 <> Unnamed_thm
R1313:1316 Coq.Init.Logic <> True ind
R1481:1496 PLF.Equiv <> swap_if_branches prfax
R1513:1516 PLF.Imp <> bexp ind
binder 1509:1509 <> b:10
R1528:1530 PLF.Imp <> com ind
binder 1520:1521 <> c1:11
binder 1523:1524 <> c2:12
R1534:1539 PLF.Equiv <> cequiv def
R1542:1544 PLF.Imp <> CIf constr
R1546:1546 PLF.EquivTest <> b:10 var
R1548:1549 PLF.EquivTest <> c1:11 var
R1551:1552 PLF.EquivTest <> c2:12 var
R1556:1558 PLF.Imp <> CIf constr
R1561:1564 PLF.Imp <> BNot constr
R1566:1566 PLF.EquivTest <> b:10 var
R1569:1570 PLF.EquivTest <> c2:12 var
R1572:1573 PLF.EquivTest <> c1:11 var
R1481:1496 PLF.Equiv <> swap_if_branches prfax
R1513:1516 PLF.Imp <> bexp ind
binder 1509:1509 <> b:13
R1528:1530 PLF.Imp <> com ind
binder 1520:1521 <> c1:14
binder 1523:1524 <> c2:15
R1534:1539 PLF.Equiv <> cequiv def
R1542:1544 PLF.Imp <> CIf constr
R1546:1546 PLF.EquivTest <> b:13 var
R1548:1549 PLF.EquivTest <> c1:14 var
R1551:1552 PLF.EquivTest <> c2:15 var
R1556:1558 PLF.Imp <> CIf constr
R1561:1564 PLF.Imp <> BNot constr
R1566:1566 PLF.EquivTest <> b:13 var
R1569:1570 PLF.EquivTest <> c2:15 var
R1572:1573 PLF.EquivTest <> c1:14 var
R1626:1641 PLF.Equiv <> swap_if_branches prfax
def 1644:1652 <> Unnamed_thm
R1649:1652 Coq.Init.Logic <> True ind
R1805:1814 PLF.Equiv <> while_true prfax
R1831:1834 PLF.Imp <> bexp ind
binder 1827:1827 <> b:16
R1842:1844 PLF.Imp <> com ind
binder 1838:1838 <> c:17
R1852:1857 PLF.Equiv <> bequiv def
R1859:1859 PLF.EquivTest <> b:16 var
R1861:1865 PLF.Imp <> BTrue constr
R1870:1875 PLF.Equiv <> cequiv def
R1878:1883 PLF.Imp <> CWhile constr
R1885:1885 PLF.EquivTest <> b:16 var
R1887:1887 PLF.EquivTest <> c:17 var
R1891:1896 PLF.Imp <> CWhile constr
R1898:1902 PLF.Imp <> BTrue constr
R1904:1908 PLF.Imp <> CSkip constr
R1805:1814 PLF.Equiv <> while_true prfax
R1831:1834 PLF.Imp <> bexp ind
binder 1827:1827 <> b:18
R1842:1844 PLF.Imp <> com ind
binder 1838:1838 <> c:19
R1852:1857 PLF.Equiv <> bequiv def
R1859:1859 PLF.EquivTest <> b:18 var
R1861:1865 PLF.Imp <> BTrue constr
R1870:1875 PLF.Equiv <> cequiv def
R1878:1883 PLF.Imp <> CWhile constr
R1885:1885 PLF.EquivTest <> b:18 var
R1887:1887 PLF.EquivTest <> c:19 var
R1891:1896 PLF.Imp <> CWhile constr
R1898:1902 PLF.Imp <> BTrue constr
R1904:1908 PLF.Imp <> CSkip constr
R1961:1970 PLF.Equiv <> while_true prfax
def 1973:1981 <> Unnamed_thm
R1978:1981 Coq.Init.Logic <> True ind
R2140:2152 PLF.Equiv <> assign_aequiv prfax
R2169:2181 Coq.Strings.String <> string ind
binder 2165:2165 <> X:20
R2189:2192 PLF.Imp <> aexp ind
binder 2185:2185 <> a:21
R2200:2205 PLF.Equiv <> aequiv def
R2208:2210 PLF.Imp <> AId constr
R2212:2212 PLF.EquivTest <> X:20 var
R2215:2215 PLF.EquivTest <> a:21 var
R2220:2225 PLF.Equiv <> cequiv def
R2227:2231 PLF.Imp <> CSkip constr
R2234:2238 PLF.Imp <> CAsgn constr
R2240:2240 PLF.EquivTest <> X:20 var
R2242:2242 PLF.EquivTest <> a:21 var
R2140:2152 PLF.Equiv <> assign_aequiv prfax
R2169:2181 Coq.Strings.String <> string ind
binder 2165:2165 <> X:22
R2189:2192 PLF.Imp <> aexp ind
binder 2185:2185 <> a:23
R2200:2205 PLF.Equiv <> aequiv def
R2208:2210 PLF.Imp <> AId constr
R2212:2212 PLF.EquivTest <> X:22 var
R2215:2215 PLF.EquivTest <> a:23 var
R2220:2225 PLF.Equiv <> cequiv def
R2227:2231 PLF.Imp <> CSkip constr
R2234:2238 PLF.Imp <> CAsgn constr
R2240:2240 PLF.EquivTest <> X:22 var
R2242:2242 PLF.EquivTest <> a:23 var
R2295:2307 PLF.Equiv <> assign_aequiv prfax
def 2310:2318 <> Unnamed_thm
R2315:2318 Coq.Init.Logic <> True ind
R2501:2530 PLF.Equiv <> manual_grade_for_equiv_classes def
R2691:2704 PLF.Equiv <> CIf_congruence prfax
R2724:2727 PLF.Imp <> bexp ind
binder 2717:2717 <> b:24
binder 2719:2720 <> b':25
R2747:2749 PLF.Imp <> com ind
binder 2731:2732 <> c1:26
binder 2734:2736 <> c1':27
binder 2738:2739 <> c2:28
binder 2741:2743 <> c2':29
R2757:2762 PLF.Equiv <> bequiv def
R2764:2764 PLF.EquivTest <> b:24 var
R2766:2767 PLF.EquivTest <> b':25 var
R2778:2783 PLF.Equiv <> cequiv def
R2785:2786 PLF.EquivTest <> c1:26 var
R2788:2790 PLF.EquivTest <> c1':27 var
R2798:2803 PLF.Equiv <> cequiv def
R2805:2806 PLF.EquivTest <> c2:28 var
R2808:2810 PLF.EquivTest <> c2':29 var
R2815:2820 PLF.Equiv <> cequiv def
R2823:2825 PLF.Imp <> CIf constr
R2827:2827 PLF.EquivTest <> b:24 var
R2829:2830 PLF.EquivTest <> c1:26 var
R2832:2833 PLF.EquivTest <> c2:28 var
R2837:2839 PLF.Imp <> CIf constr
R2841:2842 PLF.EquivTest <> b':25 var
R2844:2846 PLF.EquivTest <> c1':27 var
R2848:2850 PLF.EquivTest <> c2':29 var
R2691:2704 PLF.Equiv <> CIf_congruence prfax
R2724:2727 PLF.Imp <> bexp ind
binder 2717:2717 <> b:30
binder 2719:2720 <> b':31
R2747:2749 PLF.Imp <> com ind
binder 2731:2732 <> c1:32
binder 2734:2736 <> c1':33
binder 2738:2739 <> c2:34
binder 2741:2743 <> c2':35
R2757:2762 PLF.Equiv <> bequiv def
R2764:2764 PLF.EquivTest <> b:30 var
R2766:2767 PLF.EquivTest <> b':31 var
R2778:2783 PLF.Equiv <> cequiv def
R2785:2786 PLF.EquivTest <> c1:32 var
R2788:2790 PLF.EquivTest <> c1':33 var
R2798:2803 PLF.Equiv <> cequiv def
R2805:2806 PLF.EquivTest <> c2:34 var
R2808:2810 PLF.EquivTest <> c2':35 var
R2815:2820 PLF.Equiv <> cequiv def
R2823:2825 PLF.Imp <> CIf constr
R2827:2827 PLF.EquivTest <> b:30 var
R2829:2830 PLF.EquivTest <> c1:32 var
R2832:2833 PLF.EquivTest <> c2:34 var
R2837:2839 PLF.Imp <> CIf constr
R2841:2842 PLF.EquivTest <> b':31 var
R2844:2846 PLF.EquivTest <> c1':33 var
R2848:2850 PLF.EquivTest <> c2':35 var
R2903:2916 PLF.Equiv <> CIf_congruence prfax
def 2919:2927 <> Unnamed_thm
R2924:2927 Coq.Init.Logic <> True ind
R3120:3145 PLF.Equiv <> manual_grade_for_not_congr def
R3326:3349 PLF.Equiv <> fold_constants_com_sound prfax
R3353:3364 PLF.Equiv <> ctrans_sound def
R3366:3383 PLF.Equiv <> fold_constants_com def
R3326:3349 PLF.Equiv <> fold_constants_com_sound prfax
R3353:3364 PLF.Equiv <> ctrans_sound def
R3366:3383 PLF.Equiv <> fold_constants_com def
R3435:3458 PLF.Equiv <> fold_constants_com_sound prfax
def 3461:3469 <> Unnamed_thm
R3466:3469 Coq.Init.Logic <> True ind
R3634:3649 PLF.Equiv <> inequiv_exercise prfax
R3653:3655 Coq.Init.Logic <> not def
R3658:3663 PLF.Equiv <> cequiv def
R3666:3671 PLF.Imp <> CWhile constr
R3673:3677 PLF.Imp <> BTrue constr
R3679:3683 PLF.Imp <> CSkip constr
R3686:3690 PLF.Imp <> CSkip constr
R3634:3649 PLF.Equiv <> inequiv_exercise prfax
R3653:3655 Coq.Init.Logic <> not def
R3658:3663 PLF.Equiv <> cequiv def
R3666:3671 PLF.Imp <> CWhile constr
R3673:3677 PLF.Imp <> BTrue constr
R3679:3683 PLF.Imp <> CSkip constr
R3686:3690 PLF.Imp <> CSkip constr
R3743:3758 PLF.Equiv <> inequiv_exercise prfax
def 3761:3769 <> Unnamed_thm
R3766:3769 Coq.Init.Logic <> True ind
R3961:4002 PLF.Equiv Himp manual_grade_for_Check_rule_for_HAVOC def
R4164:4182 PLF.Equiv Himp pXY_cequiv_pYX prfax
R4187:4188 Coq.Init.Logic <> or ind
R4223:4225 Coq.Init.Logic <> not def
R4228:4238 PLF.Equiv Himp cequiv def
R4240:4247 PLF.Equiv Himp pXY def
R4249:4256 PLF.Equiv Himp pYX def
R4191:4201 PLF.Equiv Himp cequiv def
R4203:4210 PLF.Equiv Himp pXY def
R4212:4219 PLF.Equiv Himp pYX def
R4164:4182 PLF.Equiv Himp pXY_cequiv_pYX prfax
R4187:4188 Coq.Init.Logic <> or ind
R4223:4225 Coq.Init.Logic <> not def
R4228:4238 PLF.Equiv Himp cequiv def
R4240:4247 PLF.Equiv Himp pXY def
R4249:4256 PLF.Equiv Himp pYX def
R4191:4201 PLF.Equiv Himp cequiv def
R4203:4210 PLF.Equiv Himp pXY def
R4212:4219 PLF.Equiv Himp pYX def
R4310:4328 PLF.Equiv Himp pXY_cequiv_pYX prfax
def 4331:4339 <> Unnamed_thm
R4336:4339 Coq.Init.Logic <> True ind
R4519:4537 PLF.Equiv Himp p1_may_diverge prfax
R4566:4578 Coq.Strings.String <> string ind
R4581:4583 Coq.Init.Datatypes <> nat ind
binder 4550:4551 <> st:36
R4593:4597 PLF.Imp <> state def
binder 4587:4589 <> st':37
R4608:4610 Coq.Init.Logic <> not def
R4614:4615 Coq.Init.Logic <> eq ind
R4617:4619 Coq.Init.Datatypes <> nat ind
R4622:4623 PLF.EquivTest <> st:36 var
R4625:4625 PLF.Imp <> X def
R4633:4635 Coq.Init.Logic <> not def
R4638:4647 PLF.Equiv Himp ceval ind
R4649:4655 PLF.Equiv Himp p1 def
R4657:4658 PLF.EquivTest <> st:36 var
R4660:4662 PLF.EquivTest <> st':37 var
R4519:4537 PLF.Equiv Himp p1_may_diverge prfax
R4566:4578 Coq.Strings.String <> string ind
R4581:4583 Coq.Init.Datatypes <> nat ind
binder 4550:4551 <> st:38
R4593:4597 PLF.Imp <> state def
binder 4587:4589 <> st':39
R4608:4610 Coq.Init.Logic <> not def
R4614:4615 Coq.Init.Logic <> eq ind
R4617:4619 Coq.Init.Datatypes <> nat ind
R4622:4623 PLF.EquivTest <> st:38 var
R4625:4625 PLF.Imp <> X def
R4633:4635 Coq.Init.Logic <> not def
R4638:4647 PLF.Equiv Himp ceval ind
R4649:4655 PLF.Equiv Himp p1 def
R4657:4658 PLF.EquivTest <> st:38 var
R4660:4662 PLF.EquivTest <> st':39 var
R4715:4733 PLF.Equiv Himp p1_may_diverge prfax
def 4736:4744 <> Unnamed_thm
R4741:4744 Coq.Init.Logic <> True ind
R4849:4867 PLF.Equiv Himp p2_may_diverge prfax
R4896:4908 Coq.Strings.String <> string ind
R4911:4913 Coq.Init.Datatypes <> nat ind
binder 4880:4881 <> st:40
R4923:4927 PLF.Imp <> state def
binder 4917:4919 <> st':41
R4938:4940 Coq.Init.Logic <> not def
R4944:4945 Coq.Init.Logic <> eq ind
R4947:4949 Coq.Init.Datatypes <> nat ind
R4952:4953 PLF.EquivTest <> st:40 var
R4955:4955 PLF.Imp <> X def
R4963:4965 Coq.Init.Logic <> not def
R4968:4977 PLF.Equiv Himp ceval ind
R4979:4985 PLF.Equiv Himp p2 def
R4987:4988 PLF.EquivTest <> st:40 var
R4990:4992 PLF.EquivTest <> st':41 var
R4849:4867 PLF.Equiv Himp p2_may_diverge prfax
R4896:4908 Coq.Strings.String <> string ind
R4911:4913 Coq.Init.Datatypes <> nat ind
binder 4880:4881 <> st:42
R4923:4927 PLF.Imp <> state def
binder 4917:4919 <> st':43
R4938:4940 Coq.Init.Logic <> not def
R4944:4945 Coq.Init.Logic <> eq ind
R4947:4949 Coq.Init.Datatypes <> nat ind
R4952:4953 PLF.EquivTest <> st:42 var
R4955:4955 PLF.Imp <> X def
R4963:4965 Coq.Init.Logic <> not def
R4968:4977 PLF.Equiv Himp ceval ind
R4979:4985 PLF.Equiv Himp p2 def
R4987:4988 PLF.EquivTest <> st:42 var
R4990:4992 PLF.EquivTest <> st':43 var
R5045:5063 PLF.Equiv Himp p2_may_diverge prfax
def 5066:5074 <> Unnamed_thm
R5071:5074 Coq.Init.Logic <> True ind
R5252:5267 PLF.Equiv Himp p1_p2_equiv prfax
R5271:5281 PLF.Equiv Himp cequiv def
R5283:5289 PLF.Equiv Himp p1 def
R5291:5297 PLF.Equiv Himp p2 def
R5252:5267 PLF.Equiv Himp p1_p2_equiv prfax
R5271:5281 PLF.Equiv Himp cequiv def
R5283:5289 PLF.Equiv Himp p1 def
R5291:5297 PLF.Equiv Himp p2 def
R5349:5364 PLF.Equiv Himp p1_p2_equiv prfax
def 5367:5375 <> Unnamed_thm
R5372:5375 Coq.Init.Logic <> True ind
R5557:5574 PLF.Equiv Himp p3_p4_inequiv prfax
R5578:5580 Coq.Init.Logic <> not def
R5583:5593 PLF.Equiv Himp cequiv def
R5595:5601 PLF.Equiv Himp p3 def
R5603:5609 PLF.Equiv Himp p4 def
R5557:5574 PLF.Equiv Himp p3_p4_inequiv prfax
R5578:5580 Coq.Init.Logic <> not def
R5583:5593 PLF.Equiv Himp cequiv def
R5595:5601 PLF.Equiv Himp p3 def
R5603:5609 PLF.Equiv Himp p4 def
R5662:5679 PLF.Equiv Himp p3_p4_inequiv prfax
def 5682:5690 <> Unnamed_thm
R5687:5690 Coq.Init.Logic <> True ind
R6642:6651 PLF.Equiv <> skip_right prfax
R6711:6718 PLF.Equiv <> if_false prfax
R6786:6801 PLF.Equiv <> swap_if_branches prfax
R6863:6872 PLF.Equiv <> while_true prfax
R6937:6949 PLF.Equiv <> assign_aequiv prfax
R7075:7088 PLF.Equiv <> CIf_congruence prfax
R7164:7187 PLF.Equiv <> fold_constants_com_sound prfax
R7255:7270 PLF.Equiv <> inequiv_exercise prfax
R7408:7426 PLF.Equiv Himp pXY_cequiv_pYX prfax
R7603:7621 PLF.Equiv Himp p1_may_diverge prfax
R7692:7710 PLF.Equiv Himp p2_may_diverge prfax
R7778:7793 PLF.Equiv Himp p1_p2_equiv prfax
R7863:7880 PLF.Equiv Himp p3_p4_inequiv prfax
